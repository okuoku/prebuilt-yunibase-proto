# -*- mode: CMake; coding: utf-8; -*-
CMAKE_MINIMUM_REQUIRED(VERSION 2.8.4)
PROJECT($package-name$)

SET(SAGITTARIUS_CONFIG  "sagittarius-config")
(%full SET(SAGITTARIUS_PACKAGE "sagittarius-package") %)

(%full
EXECUTE_PROCESS(
  COMMAND ${SAGITTARIUS_CONFIG} --sysincdir
  OUTPUT_VARIABLE SAGITTARIUS_INCLUDE_DIR
  OUTPUT_STRIP_TRAILING_WHITESPACE)
EXECUTE_PROCESS(
  COMMAND ${SAGITTARIUS_CONFIG} --sysarchdir
  OUTPUT_VARIABLE SAGITTARIUS_LIB_DIR
  OUTPUT_STRIP_TRAILING_WHITESPACE)
EXECUTE_PROCESS(
  COMMAND ${SAGITTARIUS_CONFIG} --sharedir
  OUTPUT_VARIABLE SAGITTARIUS_SHARE_DIR
  OUTPUT_STRIP_TRAILING_WHITESPACE)
EXECUTE_PROCESS(
  COMMAND ${SAGITTARIUS_CONFIG} --pkgarchdir
  OUTPUT_VARIABLE SAGITTARIUS_SITE_ARCH_DIR
  OUTPUT_STRIP_TRAILING_WHITESPACE)
%)
EXECUTE_PROCESS(
  COMMAND ${SAGITTARIUS_CONFIG} --pkglibdir
  OUTPUT_VARIABLE SAGITTARIUS_SITE_LIB_DIR
  OUTPUT_STRIP_TRAILING_WHITESPACE)

(%full
MESSAGE(STATUS "Sagittarius include directory: ${SAGITTARIUS_INCLUDE_DIR}")
MESSAGE(STATUS "Sagittarius share directory:   ${SAGITTARIUS_SHARE_DIR}")
MESSAGE(STATUS "Sagittarius library directory: ${SAGITTARIUS_LIB_DIR}")

INCLUDE_DIRECTORIES(${SAGITTARIUS_INCLUDE_DIR})

ADD_LIBRARY($package-name$ MODULE
  $package-name$.c ${CMAKE_CURRENT_BINARY_DIR}/$package-name$lib.c)

IF(${CMAKE_SYSTEM_NAME} MATCHES Windows)
  IF (NOT MSVC)
    MESSAGE(FATAL_ERROR "On Windows Only MSVC is supported")
  ENDIF()
ELSEIF(CYGWIN)
  # compiler must be gcc
  SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fwide-exec-charset=ucs-4le")
  SET(CMAKE_CXX_FLAGS "${CMAKE_C_FLAGS} -fwide-exec-charset=ucs-4le")
ELSE()
ENDIF()

# For these broken linkers, we are using C++ instead of C, so we need to
# set the property to let cmake know that we are using C++.
IF (MSVC OR CYGWIN)
  SET_SOURCE_FILES_PROPERTIES($package-name$.c 
    ${CMAKE_CURRENT_BINARY_DIR}/$package-name$lib.c
    PROPERTIES LANGUAGE CXX)
ENDIF()

INCLUDE(${SAGITTARIUS_SHARE_DIR}/cmake/addstub.cmake)
# sagittariusdef.h checks this.
ADD_DEFINITIONS(-DHAVE_CONFIG_H)
ADD_STUBS($package-name$
  COMMAND ${SAGITTARIUS_PACKAGE} genstub
  FILES $package-name$lib.stub)
# default out-of-tree build so we need to add current source directory to
# include directories
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
# Sagittarius uses Boehm GC, so it must be linked.
# If we support other GC library, the this line must be generated by
# installation time.
TARGET_LINK_LIBRARIES($package-name$ gc)

# somehow LINK_DIRECTORIES does not work as I expect.
# So use the ugly way for now.
# TODO remove this workaround when I find the proper way.
FIND_LIBRARY(LIB_SAGITTARIUS sagittarius PATH ${SAGITTARIUS_LIB_DIR})

SET_TARGET_PROPERTIES($package-name$ PROPERTIES PREFIX "")
LINK_DIRECTORIES(${SAGITTARIUS_LIB_DIR})
TARGET_LINK_LIBRARIES($package-name$ ${LIB_SAGITTARIUS})

INSTALL(TARGETS $package-name$
  DESTINATION ${SAGITTARIUS_SITE_ARCH_DIR})

%)

INSTALL(FILES $library-name$
  DESTINATION ${SAGITTARIUS_SITE_LIB_DIR}/$library-directory$)

# uninstall target
CONFIGURE_FILE(
  "${CMAKE_CURRENT_SOURCE_DIR}/cmake_uninstall.cmake.in"
  "${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake"
  IMMEDIATE @ONLY)

ADD_CUSTOM_TARGET(uninstall
    COMMAND ${CMAKE_COMMAND} -P ${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake)
