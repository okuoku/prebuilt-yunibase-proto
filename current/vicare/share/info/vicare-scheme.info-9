This is vicare-scheme.info, produced by makeinfo version 6.5 from
vicare-scheme.texi.

This document describes version 0.4.1-devel.3 of Vicare Scheme, an R6RS
compliant native compiler for the Scheme language, producing single
threaded programs running on Intel x86 32-bit and 64-bit processors.
_Vicare_ is pronounced the etruscan way.

   The package, including its documentation, is distributed under the
terms of the GNU General Public License (GPL) and can be downloaded
from:

      <https://bitbucket.org/marcomaggi/vicare-scheme/downloads>

the home page of the project is at:

               <http://marcomaggi.github.io/vicare.html>

development takes place at:

                <http://github.com/marcomaggi/vicare/>

and, as a backup, at:

           <https://bitbucket.org/marcomaggi/vicare-scheme/>

Copyright (C) 2010-2017 by Marco Maggi.
Copyright (C) 2006-2010 by Abdulaziz Ghuloum.
Copyright (C) Michael Sperber, R. Kent Dybvig, Matthew Flatt and Anton
Van Straaten.

   This document is derived from the original Ikarus documentation by
the Vicare Scheme contributors, see the "History" appendix for details.

   The documentation of IrRegex is Copyright (C) 2005-2012 Alex Shinn.
All rights reserved.

   The documentation of Pregexp is Copyright (C) 1999-2005 Dorai
Sitaram.  All rights reserved.

   The documentation of the library '(vicare formations)' is derived
from the documentation of Guile.  Copyright (C) 1996-2005, 2009-2013
Free Software Foundation.

     This program is free software: you can redistribute it and/or
     modify it under the terms of the GNU General Public License version
     3 as published by the Free Software Foundation.

     This program is distributed in the hope that it will be useful, but
     WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
     General Public License for more details.

     You should have received a copy of the GNU General Public License
     along with this program.  If not, see
     <http://www.gnu.org/licenses/>.

   Trademarks used herein are the property of their respective owners.
INFO-DIR-SECTION Development
START-INFO-DIR-ENTRY
* vicare-scheme: (vicare-scheme).  Vicare Scheme.
END-INFO-DIR-ENTRY



File: vicare-scheme.info,  Node: history,  Next: references,  Prev: Package License,  Up: Top

Appendix M History
******************

The original version of this document is by Abdulaziz Ghuloum, who wrote
it in the years 2006-2010, under the title "Ikarus Scheme User's Guide".

   In 2008 the original document in TeX format was transformed in
Texinfo format by Marco Maggi.

   Starting with 2010 the Texinfo document was renamed to "Vicare
Scheme" and further developed to be the users's and developer's guide
for Vicare Scheme, a fork of the original Ikarus Scheme.

   The documentation of the SRFI libraries was written by the original
SRFI authors, transformed to Texinfo format and adapted for inclusion in
this document.


File: vicare-scheme.info,  Node: references,  Next: concept index,  Prev: history,  Up: Top

Appendix N Bibliography and references
**************************************

* Menu:

* references general::          Publications on general topics.
* references expander::         On the expansion process.


File: vicare-scheme.info,  Node: references general,  Next: references expander,  Up: references

N.1 Publications on general topics
==================================

"Revised^6 Report on the Algorithmic Language Scheme."  Michael Sperber
and R. Kent Dybvig and Matthew Flatt and Anton Van Straaten (Editors).
2007.

"Revised^6 Report on the Algorithmic Language Scheme--Standard
Libraries."  Michael Sperber and R. Kent Dybvig and Matthew Flatt and
Anton Van Straaten (Editors).  2007.

"Scheme Request for Implementation 41: Streams."  Philip L. Bewig.
2007.  <http://srfi.schemers.org/srfi-41/srfi-41.html>

"Guardians in a generation-based garbage collector".  R. Kent Dybvig and
Carl Bruggeman and David Eby.  PLDI '93, pages 207-216, June 1993.
Introduces guardians and describes the implementation of guardians and
weak pairs in Chez Scheme.

"Don't stop the BiBOP: Flexible and efficient storage management for
dynamically-typed languages."  R. Kent Dybvig and David Eby and Carl
Bruggeman.  Technical Report 400, Indiana University, March 1994.
Describes Chez Scheme's storage management system.

"Generation Friendly Eq Hash Tables."  Abdulaziz Ghuloum and R. Kent
Dybvig.  In "Proceedings of the 2007 Workshop on Scheme and Functional
Programming", pages 207-216.  Universite Laval Technical Report
DIUL-RT-0701, 2007.

"Extending the Scope of Syntactic Abstraction."  Oscar Waddell.  PhD
thesis, Indiana University Computer Science Department, August 1999.
<http://www.cs.indiana.edu/~owaddell/papers/thesis.ps.gz>

"Extending the Scope of Syntactic Abstraction."  Oscar Waddell and R.
Kent Dybvig.  In "Conference Record of POPL'99: The 26th ACM
SIGPLAN-SIGACT Symposium on Principles of Programming Languages", pages
203-213, January 1999.
<http://www.cs.indiana.edu/~dyb/papers/popl99.ps.gz>

"Chez Scheme Version 7 User's Guide."  R. Kent Dybvig.  Cadence Research
Systems, 2005.  User's guide and reference manual for Chez Scheme
Version 7.  <http://www.scheme.com/csug7/>

"Implicit phasing for R6RS libraries."  Abdulaziz Ghuloum and R. Kent
Dybvig.  In "ICFP '07: Proceedings of the 2007 ACM SIGPLAN international
conference on Functional programming", pages 303-314.  New York, NY,
USA, 2007.  ACM.

Michael D. Adams and R. Kent Dybvig.  "Efficient nondestructive equality
checking for trees and graphs."  In ICFP '08: Proceeding of the 13th ACM
SIGPLAN international conference on Functional programming, pages
179-188.  ACM, New York, NY, USA, 2008.  ISBN 978-1-59593-919-7.  doi:
10.1145/1411204.1411230.

Oscar Waddell, Dipanwita Sarkar, R. Kent Dybvig.  "Fixing Letrec: A
Faithful Yet Efficient Implementation of Scheme's Recursive Binding
Construct".

Abdulaziz Ghuloum, R. Kent Dybvig.  "Fixing Letrec (reloaded)".
Workshop on Scheme and Functional Programming '09.

J. Michael Ashley, R. Kent Dybvig.  "An Efficient Implementation of
Multiple Return Values in Scheme".  Proceedings of the 1994 ACM
Conference on LISP and Functional Programming, 140-149, 1994.  Copyright
(C) 1994 ACM.

[HDBControl] Robert Hieb, R. Kent Dybvig, Carl Bruggeman.  "Representing
Control in the Presence of First-Class Continuations".  Proceedings of
the SIGPLAN '90 Conference on Programming Language Design and
Implementation, 66-77, June 1990.  Copyright (C) 1990 ACM.

[HFWCoro] Haynes, Friedman, Wand.  "Continuations and Coroutines".
Computer Science Department, Indiana University.  Technical Report No.
158.  June, 1984.


File: vicare-scheme.info,  Node: references expander,  Prev: references general,  Up: references

N.2 On the expansion process
============================

There are multiple documents we can study to get a better understanding
of the expander's code.  Most likely the top document is:

     [exp1] Abdulaziz Ghuloum.  "Implicit Phasing for Library
     Dependencies".  Ph.D. thesis.  Department of Computer Science,
     Indiana University.  December 2008.

from the very author of the expander library; it is quite long.  Here
are some papers on 'syntax-case' macros and R6RS libraries:

     [exp2] R. Kent Dybvig.  "Writing Hygienic Macros in Scheme with
     Syntax-Case".  Department of Computer Science, Indiana University.
     Technical Report 356.  June 1992.

     [exp3] Abdulaziz Ghuloum, R. Kent Dybvig.  "Implicit Phasing for
     R6RS Libraries".  Department of Computer Science, Indiana
     University.

and the very paper that introduced hygienic macros:

     [exp4] Eugene Kohlbecker, Daniel P. Friedman, Matthias Felleisen,
     Bruce aDuba.  "Hygienic Macro Expansion".  Department of Computer
     Science, Indiana University.  1986.

   Here is another long document covering muliple components of this
Scheme implementation:

     [exp5] Oscar Waddell.  "Extending the Scope of Syntactic
     Abstraction".  Ph.D. thesis.  Department of Computer Science,
     Indiana University.  August 1999.

   A discussion of syntax parameters as implemented in Racket is in the
paper:

     [exp6] Eli Barzilay, Ryan Culpepper, Matthew Flatt.  "Keeping it
     clean with syntax parameters".  2011.


File: vicare-scheme.info,  Node: concept index,  Next: function index,  Prev: references,  Up: Top

Appendix O An entry for each concept
************************************

 [index ]
* Menu:

* #!bwp:                                 iklib reader mode.   (line  19)
* #!eof:                                 iklib reader mode.   (line  11)
* #!unbound:                             iklib reader mode.   (line  17)
* #!void:                                iklib reader mode.   (line  13)
* #!would-block:                         iklib reader mode.   (line  15)
* $core-condition-object-type-name, syntactic binding type: expander lexenv prim conditions.
                                                              (line   6)
* $core-label-type-name, syntactic binding type: expander lexenv prim labels.
                                                              (line   6)
* $core-rcd, syntactic binding type:     expander lexenv prim rcd.
                                                              (line   6)
* $core-record-type-name, syntactic binding type: expander lexenv prim records.
                                                              (line   6)
* $core-rtd, syntactic binding type:     expander lexenv prim rtd.
                                                              (line   6)
* $core-type-descriptor, syntactic binding type: expander lexenv prim btd.
                                                              (line   6)
* $core-type-name, syntactic binding type: expander lexenv prim bio.
                                                              (line   6)
* $fluid, syntactic binding type:        expander lexenv prim fluids.
                                                              (line   6)
* $fluid, syntactic binding type <1>:    expander lexenv imported fluids.
                                                              (line   6)
* $fluid, syntactic binding type <2>:    expander lexenv internal fluids.
                                                              (line   6)
* $module, syntactic binding type:       expander lexenv imported modules.
                                                              (line   6)
* $module, syntactic binding type <1>:   expander lexenv internal modules.
                                                              (line   6)
* $record-type-name, syntactic binding type: expander lexenv imported rtn.
                                                              (line   6)
* $record-type-name, syntactic binding type <1>: expander lexenv internal rtn.
                                                              (line   6)
* $struct-type-name, syntactic binding type: expander lexenv imported stn.
                                                              (line   6)
* $struct-type-name, syntactic binding type <1>: expander lexenv internal stn.
                                                              (line   6)
* $synonym, syntactic binding type:      expander lexenv imported synonyms.
                                                              (line   6)
* $synonym, syntactic binding type <1>:  expander lexenv internal synonym.
                                                              (line   6)
* (psyntax system $all), library:        expander lexenv prim.
                                                              (line   6)
* (rnrs arithmetic bitwise (6)), library: stdlib arithmetic exact bitwise.
                                                              (line   6)
* (rnrs arithmetic fixnums (6)), library: stdlib arithmetic fixnums.
                                                              (line   6)
* (rnrs arithmetic flonums (6)), library: stdlib arithmetic flonums.
                                                              (line   6)
* (rnrs base (6)), library:              baselib.             (line   6)
* (rnrs bytevectors (6)), library:       stdlib bytevector.   (line   6)
* (rnrs conditions (6)), library:        stdlib exceptions conditions.
                                                              (line   6)
* (rnrs control (6)), library:           stdlib control.      (line   6)
* (rnrs enums (6)), library:             stdlib enum.         (line   6)
* (rnrs eval (6)), library:              stdlib eval.         (line   6)
* (rnrs exceptions (6)), library:        stdlib exceptions exceptions.
                                                              (line   6)
* (rnrs files (6)), library:             stdlib files.        (line   6)
* (rnrs hashtables (6)), library:        stdlib hashtable.    (line   6)
* (rnrs io ports (6)), library:          stdlib io.           (line   6)
* (rnrs io ports (6)), library <1>:      stdlib io port.      (line   6)
* (rnrs io simple (6)), library:         stdlib io.           (line   6)
* (rnrs io simple (6)), library <1>:     stdlib io simple.    (line   6)
* (rnrs lists (6)), library:             stdlib list.         (line   6)
* (rnrs mutable-pairs (6)), library:     stdlib mutable pairs.
                                                              (line   6)
* (rnrs mutable-strings (6)), library:   stdlib mutable strings.
                                                              (line   6)
* (rnrs programs (6)), library:          stdlib programlib.   (line   6)
* (rnrs r5rs (6)), library:              stdlib rfive compat. (line   6)
* (rnrs records inspection (6)), library: stdlib records inspection.
                                                              (line   6)
* (rnrs records procedural (6)), library: stdlib records procedural layer.
                                                              (line   6)
* (rnrs records syntactic (6)), library: stdlib records syntactic layer.
                                                              (line   6)
* (rnrs sorting (6)), library:           stdlib sorting.      (line   6)
* (rnrs syntax-case (6)), library:       stdlib syntax-case.  (line   6)
* (rnrs unicode (6)), library:           stdlib unicode.      (line   6)
* (vicare compiler), library:            compiler.            (line   6)
* (vicare expander), library:            expander.            (line   6)
* (vicare ffi foreign-pointer-wrapper), library: ffi foreign wrapper.
                                                              (line   6)
* (vicare ffi), library:                 ffi.                 (line   6)
* (vicare language-extensions), library: iklib.               (line   6)
* (vicare libraries), library:           libutils.            (line   6)
* (vicare numerics constants), library:  iklib numerics constants.
                                                              (line   6)
* (vicare platform features), library:   iklib.               (line  28)
* (vicare programs), library:            progutils.           (line   6)
* (vicare system $bignums), library:     syslib bignums.      (line   6)
* (vicare system $booleans), library:    syslib booleans.     (line   6)
* (vicare system $bytevectors), library: syslib bytevectors.  (line   6)
* (vicare system $chars), library:       syslib chars.        (line   6)
* (vicare system $codes), library:       syslib codes unsafe. (line   6)
* (vicare system $codes), library <1>:   syslib closures.     (line   6)
* (vicare system $compnums), library:    syslib compnums.     (line   6)
* (vicare system $compnums), library <1>: syslib cflonums.    (line   6)
* (vicare system $flonums), library:     syslib flonums.      (line   6)
* (vicare system $fx), library:          syslib fixnums.      (line   6)
* (vicare system $hashtables), library:  syslib hashtables.   (line   6)
* (vicare system $io), library:          syslib ports.        (line   6)
* (vicare system $keywords), library:    syslib keywords.     (line   6)
* (vicare system $lists), library:       syslib lists.        (line   6)
* (vicare system $numerics), library:    syslib numerics.     (line   6)
* (vicare system $pairs), library:       syslib pairs.        (line   6)
* (vicare system $pointers), library:    syslib pointers.     (line   6)
* (vicare system $ratnums), library:     syslib ratnums.      (line   6)
* (vicare system $records), library:     syslib records.      (line   6)
* (vicare system $runtime), library:     iklib runtime.       (line   6)
* (vicare system $strings), library:     syslib strings.      (line   6)
* (vicare system $structs), library:     syslib structs unsafe.
                                                              (line   6)
* (vicare system $symbols), library:     syslib symbols.      (line   6)
* (vicare system $tcbuckets), library:   syslib tcbuckets.    (line   6)
* (vicare system $transcoders), library: syslib transcoders.  (line   6)
* (vicare system $vectors), library:     syslib vectors.      (line   6)
* (vicare system code-objects), library: syslib codes safe.   (line   6)
* (vicare system comparison-procedures), library: syslib compar.
                                                              (line   6)
* (vicare system structs), library:      syslib structs safe. (line   6)
* (vicare unsafe unicode), library:      iklib chars unicode. (line   6)
* (vicare), library:                     iklib.               (line   6)
* --, command line option:               using invoking.      (line 394)
* --binary-program, command line option: using invoking.      (line  41)
* --boot, command line option:           using invoking.      (line 100)
* --build-directory, command line option: using invoking.     (line 155)
* --compile, command line option:        using invoking.      (line  82)
* --compile-dependencies, command line option: using invoking.
                                                              (line  59)
* --compile-library, command line option: using invoking.     (line  68)
* --compile-program, command line option: using invoking.     (line  45)
* --help, command line option:           using invoking.      (line 391)
* --library-locator, command line option: using invoking.     (line 148)
* --library-path, command line option:   using invoking.      (line 144)
* --license, command line option:        using invoking.      (line 387)
* --load-library, command line option:   using invoking.      (line 128)
* --more-file-extensions, command line option: using invoking.
                                                              (line 160)
* --no-rcfile, command line option:      using invoking.      (line 108)
* --optimizer-passes-count, command line option: using invoking.
                                                              (line 375)
* --option, command line option:         using invoking.      (line 186)
* --output, command line option:         using invoking.      (line 121)
* --prompt, command line option:         using invoking.      (line 166)
* --r6rs-script, command line option:    using invoking.      (line  28)
* --raw-repl, command line option:       using invoking.      (line 176)
* --rcfile, command line option:         using invoking.      (line 111)
* --repl-on-sigint, command line option: using invoking.      (line 171)
* --scheme-heap-nursery-size, command line option: using invoking.
                                                              (line 352)
* --scheme-stack-size, command line option: using invoking.   (line 359)
* --silent, command line option:         using invoking.      (line 403)
* --source-path, command line option:    using invoking.      (line 135)
* --verbose, command line option:        using invoking.      (line 399)
* --version, command line option:        using invoking.      (line 380)
* --version-only, command line option:   using invoking.      (line 383)
* -A, command line option:               using invoking.      (line 135)
* -b, command line option:               using invoking.      (line 100)
* -c, command line option:               using invoking.      (line  82)
* -d, command line option:               using invoking.      (line 181)
* -g, command line option:               using invoking.      (line 181)
* -h, command line option:               using invoking.      (line 391)
* -I, command line option:               using invoking.      (line 139)
* -l, command line option:               using invoking.      (line 128)
* -L, command line option:               using invoking.      (line 144)
* -O, command line option:               using invoking.      (line 366)
* -O, command line option <1>:           using invoking.      (line 371)
* -V, command line option:               using invoking.      (line 380)
* -v, command line option:               using invoking.      (line 399)
* -Wall, command line option:            using invoking.      (line 315)
* -Wextra, command line option:          using invoking.      (line 321)
* -Wlogic-constants, command line option: using invoking.     (line 328)
* -Wno-logic-constants, command line option: using invoking.  (line 328)
* -Wno-not-returning, command line option: using invoking.    (line 334)
* -Wno-overloaded-function-late-binding, command line option: using invoking.
                                                              (line 346)
* -Wno-unused-variables, command line option: using invoking. (line 340)
* -Wnot-returning, command line option:  using invoking.      (line 334)
* -Woverloaded-function-late-binding, command line option: using invoking.
                                                              (line 346)
* -Wunused-variables, command line option: using invoking.    (line 340)
* AA-REGISTER, Accumulator and Arguments count Register: machinery registers.
                                                              (line  10)
* AAR, Accumulator and Arguments count Register: machinery registers.
                                                              (line  10)
* Accumulator and Arguments count Register, AAR: machinery registers.
                                                              (line  10)
* Allocation Pointer Register, APR:      machinery registers. (line  28)
* AP-REGISTER, Allocation Pointer Register: machinery registers.
                                                              (line  28)
* APR, Allocation Pointer Register:      machinery registers. (line  28)
* Asynchronous resources, releasing:     iklib compensations. (line   6)
* Automatic finalisation of records:     iklib records final. (line   6)
* Automatic finalisation of structs:     syslib structs safe final.
                                                              (line   6)
* basic-letrec-pass, command line option: using invoking.     (line 310)
* begin-for-syntax, syntactic binding type: expander lexenv internal bfs.
                                                              (line   6)
* Binary executables, kernel support:    binfmt overview.     (line   6)
* Binary formats, kernel support:        binfmt overview.     (line   6)
* Binary library source path:            using libraries paths.
                                                              (line   6)
* Binary programs:                       using programs.      (line   6)
* Binding constructs, definition of:     scheme basic variables keywords regions.
                                                              (line   6)
* Binding syntactic keywords:            baselib syntax binding.
                                                              (line   6)
* bindings, syntactic:                   expander intro bindings.
                                                              (line   6)
* Body, library:                         scheme library form. (line   6)
* Body, top-level:                       scheme programs syntax.
                                                              (line   6)
* Build directory:                       libutils compiling special build.
                                                              (line   6)
* Catching exceptions:                   stdlib exceptions exceptions.
                                                              (line   6)
* check-compiler-pass-preconditions, command line option: using invoking.
                                                              (line 224)
* Closure Pointer Register, CPR:         machinery registers. (line  33)
* Command line:                          using.               (line  10)
* Command line option --:                using invoking.      (line 394)
* Command line option --binary-program:  using invoking.      (line  41)
* Command line option --boot:            using invoking.      (line 100)
* Command line option --build-directory: using invoking.      (line 155)
* Command line option --compile:         using invoking.      (line  82)
* Command line option --compile-dependencies: using invoking. (line  59)
* Command line option --compile-library: using invoking.      (line  68)
* Command line option --compile-program: using invoking.      (line  45)
* Command line option --help:            using invoking.      (line 391)
* Command line option --library-locator: using invoking.      (line 148)
* Command line option --library-path:    using invoking.      (line 144)
* Command line option --license:         using invoking.      (line 387)
* Command line option --load-library:    using invoking.      (line 128)
* Command line option --more-file-extensions: using invoking. (line 160)
* Command line option --no-rcfile:       using invoking.      (line 108)
* Command line option --optimizer-passes-count: using invoking.
                                                              (line 375)
* Command line option --option:          using invoking.      (line 186)
* Command line option --output:          using invoking.      (line 121)
* Command line option --prompt:          using invoking.      (line 166)
* Command line option --r6rs-script:     using invoking.      (line  28)
* Command line option --raw-repl:        using invoking.      (line 176)
* Command line option --rcfile:          using invoking.      (line 111)
* Command line option --repl-on-sigint:  using invoking.      (line 171)
* Command line option --scheme-heap-nursery-size: using invoking.
                                                              (line 352)
* Command line option --scheme-stack-size: using invoking.    (line 359)
* Command line option --silent:          using invoking.      (line 403)
* Command line option --source-path:     using invoking.      (line 135)
* Command line option --verbose:         using invoking.      (line 399)
* Command line option --version:         using invoking.      (line 380)
* Command line option --version-only:    using invoking.      (line 383)
* Command line option -A:                using invoking.      (line 135)
* Command line option -b:                using invoking.      (line 100)
* Command line option -c:                using invoking.      (line  82)
* Command line option -d:                using invoking.      (line 181)
* Command line option -g:                using invoking.      (line 181)
* Command line option -h:                using invoking.      (line 391)
* Command line option -I:                using invoking.      (line 139)
* Command line option -l:                using invoking.      (line 128)
* Command line option -L:                using invoking.      (line 144)
* Command line option -O:                using invoking.      (line 366)
* Command line option -O <1>:            using invoking.      (line 371)
* Command line option -V:                using invoking.      (line 380)
* Command line option -v:                using invoking.      (line 399)
* Command line option -Wall:             using invoking.      (line 315)
* Command line option -Wextra:           using invoking.      (line 321)
* Command line option -Wlogic-constants: using invoking.      (line 328)
* Command line option -Wno-logic-constants: using invoking.   (line 328)
* Command line option -Wno-not-returning: using invoking.     (line 334)
* Command line option -Wno-overloaded-function-late-binding: using invoking.
                                                              (line 346)
* Command line option -Wno-unused-variables: using invoking.  (line 340)
* Command line option -Wnot-returning:   using invoking.      (line 334)
* Command line option -Woverloaded-function-late-binding: using invoking.
                                                              (line 346)
* Command line option -Wunused-variables: using invoking.     (line 340)
* Command line option basic-letrec-pass: using invoking.      (line 310)
* Command line option check-compiler-pass-preconditions: using invoking.
                                                              (line 224)
* Command line option compiler-core-type-inference: using invoking.
                                                              (line 274)
* Command line option compiler-descriptive-labels: using invoking.
                                                              (line 270)
* Command line option compiler-introduce-primrefs: using invoking.
                                                              (line 281)
* Command line option debug:             using invoking.      (line 197)
* Command line option debug-messages:    using invoking.      (line 254)
* Command line option disable-automatic-gc: using invoking.   (line 288)
* Command line option disable-runtime-messages: using invoking.
                                                              (line 303)
* Command line option drop-assertions:   using invoking.      (line 205)
* Command line option enable-automatic-gc: using invoking.    (line 288)
* Command line option enable-runtime-messages: using invoking.
                                                              (line 303)
* Command line option expander-descriptive-gensyms: using invoking.
                                                              (line 263)
* Command line option expander-descriptive-marks: using invoking.
                                                              (line 267)
* Command line option gc-integrity-checks: using invoking.    (line 231)
* Command line option library-debug-messages: using invoking. (line 259)
* Command line option no-check-compiler-pass-preconditions: using invoking.
                                                              (line 224)
* Command line option no-debug-messages: using invoking.      (line 254)
* Command line option no-drop-assertions: using invoking.     (line 205)
* Command line option no-library-debug-messages: using invoking.
                                                              (line 259)
* Command line option no-print-loaded-libraries: using invoking.
                                                              (line 246)
* Command line option no-strict-r6rs:    using invoking.      (line 191)
* Command line option print-assembly:    using invoking.      (line 236)
* Command line option print-loaded-libraries: using invoking. (line 246)
* Command line option print-optimizer:   using invoking.      (line 241)
* Command line option scc-letrec-pass:   using invoking.      (line 310)
* Command line option strict-r6rs:       using invoking.      (line 191)
* Command line option waddell-letrec-pass: using invoking.    (line 310)
* Common Lisp style macros:              stdlib syntax-case lisp.
                                                              (line   6)
* comparison-procedure, record-type definition clause: iklib records defs comparison.
                                                              (line   6)
* Compensation stacks:                   iklib compensations. (line   6)
* Compiled libraries, stale with respect to source: iklib syntaxes stale.
                                                              (line   6)
* Compiler passes:                       compiler.            (line   6)
* compiler-core-type-inference, command line option: using invoking.
                                                              (line 274)
* compiler-descriptive-labels, command line option: using invoking.
                                                              (line 270)
* compiler-introduce-primrefs, command line option: using invoking.
                                                              (line 281)
* Compiling Scheme scripts:              using programs.      (line   6)
* Conditionally importing libraries, import: iklib expander local import.
                                                              (line   6)
* Conjugate of a complex number:         iklib numerics math. (line 102)
* constructor-signature, record-type definition clause: iklib records defs consig.
                                                              (line   6)
* Core language:                         compiler intro.      (line   6)
* core-macro, syntactic binding type:    expander lexenv prim cmacros.
                                                              (line   6)
* core-prim, syntactic binding type:     expander lexenv prim primitives.
                                                              (line   6)
* Coroutines, running parallel processes: iklib coroutines parallel.
                                                              (line   6)
* CP-REGISTER, Closure Pointer Register: machinery registers. (line  33)
* CPR, Closure Pointer Register:         machinery registers. (line  33)
* CPU registers with special roles:      machinery registers. (line   6)
* custom-printer, record-type definition clause: iklib records defs printer.
                                                              (line   6)
* Data records, automatic finalisation:  iklib records final. (line   6)
* Data records, destructors:             iklib records final. (line   6)
* debug, command line option:            using invoking.      (line 197)
* debug-messages, command line option:   using invoking.      (line 254)
* define-type-descriptors, record-type definition clause: iklib records defs descriptors.
                                                              (line   6)
* Definition of binding constructs:      scheme basic variables keywords regions.
                                                              (line   6)
* Definition of definitions:             scheme basic variables keywords regions.
                                                              (line   6)
* Definition of dynamic environment:     scheme basic dynamic extent.
                                                              (line   6)
* Definition of dynamic extent:          scheme basic dynamic extent.
                                                              (line   6)
* Definition of environment:             scheme basic variables keywords regions.
                                                              (line   6)
* Definition of identifier:              scheme lex syntax identifiers.
                                                              (line   6)
* Definition of initial environment:     expander intro bindings.
                                                              (line   6)
* Definition of keyword:                 scheme basic variables keywords regions.
                                                              (line   6)
* Definition of lexical bindings:        expander intro bindings.
                                                              (line   6)
* Definition of local bindings:          expander intro bindings.
                                                              (line   6)
* Definition of macro transformer:       scheme syntax macros.
                                                              (line   6)
* Definition of region:                  scheme basic variables keywords regions.
                                                              (line   6)
* Definition of syntactic bindings:      expander intro bindings.
                                                              (line   6)
* Definition of syntactic bindings <1>:  expander intro bindings.
                                                              (line   6)
* Definition of top level bindings:      expander intro bindings.
                                                              (line   6)
* Definition of transformer:             scheme syntax macros.
                                                              (line   6)
* Definition of variable:                scheme basic variables keywords regions.
                                                              (line   6)
* Definitions, definition of:            scheme basic variables keywords regions.
                                                              (line   6)
* Delimited continuations:               iklib syntaxes delimcc.
                                                              (line   6)
* Destruction of objects through guardians: iklib guardians.  (line   6)
* destructor-protocol, record-type definition clause: iklib records defs destructor.
                                                              (line   6)
* Destructors for data records:          iklib records final. (line   6)
* Destructors for structs:               syslib structs safe final.
                                                              (line   6)
* Destructors, objects and guardians:    iklib guardians.     (line   6)
* Directory, build:                      libutils compiling special build.
                                                              (line   6)
* disable-automatic-gc, command line option: using invoking.  (line 288)
* disable-runtime-messages, command line option: using invoking.
                                                              (line 303)
* Disinstalling Vicare:                  overview install.    (line   6)
* Disinstalling Vicare <1>:              overview install uninstall.
                                                              (line   6)
* displaced-lexical, syntactic binding type: expander lexenv internal displaced.
                                                              (line   6)
* drop-assertions, command line option:  using invoking.      (line 205)
* Dynamic environment, definition of:    scheme basic dynamic extent.
                                                              (line   6)
* Dynamic extent, definition of:         scheme basic dynamic extent.
                                                              (line   6)
* enable-automatic-gc, command line option: using invoking.   (line 288)
* enable-runtime-messages, command line option: using invoking.
                                                              (line 303)
* Environment variable VICARE_ARGUMENTS_VALIDATION: overview install details.
                                                              (line  76)
* Environment variable VICARE_LIBRARY_PATH: libutils file-system paths.
                                                              (line  46)
* Environment variable VICARE_SOURCE_PATH: libutils file-system paths.
                                                              (line  88)
* Environment variable VICARE_STORE_DIRECTORY: libutils compiling special build.
                                                              (line  46)
* Environment, definition of:            scheme basic variables keywords regions.
                                                              (line   6)
* Environment, interaction:              iklib environment.   (line   6)
* equality-predicate, record-type definition clause: iklib records defs equality.
                                                              (line   6)
* expander-descriptive-gensyms, command line option: using invoking.
                                                              (line 263)
* expander-descriptive-marks, command line option: using invoking.
                                                              (line 267)
* Expanding expressions inline:          iklib syntaxes integrable.
                                                              (line   6)
* Expanding functions inline:            iklib syntaxes integrable.
                                                              (line   6)
* Expression inlining:                   iklib syntaxes integrable.
                                                              (line   6)
* Expression integration:                iklib syntaxes integrable.
                                                              (line   6)
* FASL file source path:                 using libraries paths.
                                                              (line   6)
* FFI, foreign functions interface:      ffi.                 (line   6)
* Finalisation of data records:          iklib records final. (line   6)
* Finalisation of objects through guardians: iklib guardians. (line   6)
* Finalisation of structs:               syslib structs safe final.
                                                              (line   6)
* Finalisers, objects and guardians:     iklib guardians.     (line   6)
* Foreign functions interface, FFI:      ffi.                 (line   6)
* foreign-library, library clause:       iklib libraries foreign.
                                                              (line   6)
* foreign-library, library clause <1>:   foreign.             (line   6)
* foreign-library, program clause:       iklib programs foreign.
                                                              (line   6)
* foreign-library, program clause <1>:   foreign.             (line   6)
* FP-REGISTER, Frame Pointer Register:   machinery registers. (line  41)
* FPR, Frame Pointer Register:           machinery registers. (line  41)
* Frame Pointer Register, FPR:           machinery registers. (line  41)
* Function inlining:                     iklib syntaxes integrable.
                                                              (line   6)
* Function integration:                  iklib syntaxes integrable.
                                                              (line   6)
* fx_shift, C preprocessor symbol:       objects fixnums.     (line  54)
* gc-integrity-checks, command line option: using invoking.   (line 231)
* global, syntactic binding type:        expander lexenv imported variables.
                                                              (line   6)
* global-etv, syntactic binding type:    expander lexenv imported etv.
                                                              (line   6)
* global-macro!, syntactic binding type: expander lexenv imported vmacros.
                                                              (line   6)
* global-macro, syntactic binding type:  expander lexenv imported nvmacros.
                                                              (line   6)
* Guarded values:                        iklib guardians.     (line   6)
* Guardians and garbage collection:      iklib guardians.     (line   6)
* hash-function, record-type definition clause: iklib records defs hash.
                                                              (line   6)
* Heap nursery size configuration:       iklib runtime.       (line   6)
* How to deal with NaN:                  notes nan.           (line   6)
* Identifier, definition of:             scheme lex syntax identifiers.
                                                              (line   6)
* IK_CHUNK_SIZE, C preprocessor symbol:  objects memory pages.
                                                              (line   6)
* IK_MMAP_ALLOCATION_GRANULARITY, C preprocessor symbol: objects memory pages.
                                                              (line   6)
* IK_PAGESHIFT, C preprocessor symbol:   objects memory pages.
                                                              (line   6)
* IK_PAGESIZE, C preprocessor symbol:    objects memory pages.
                                                              (line   6)
* IK_SEGMENT_SHIFT, C preprocessor symbol: objects memory segments.
                                                              (line   6)
* IK_SEGMENT_SIZE, C preprocessor symbol: objects memory segments.
                                                              (line   6)
* implements, record-type definition clause: iklib records defs implements.
                                                              (line   6)
* Import set, library form:              scheme library form import.
                                                              (line  25)
* import, conditionally importing libraries: iklib expander local import.
                                                              (line   6)
* import, importing alternative libraries: iklib expander local import.
                                                              (line   6)
* import, local library imports:         iklib expander local import.
                                                              (line   6)
* Importing alternative libraries, import: iklib expander local import.
                                                              (line   6)
* Importing libraries at read-time:      iklib reader extensions.
                                                              (line   6)
* Include files:                         includes.            (line   6)
* Initial environment, definition of:    expander intro bindings.
                                                              (line   6)
* Inlining of functions and expressions: iklib syntaxes integrable.
                                                              (line   6)
* Input/output ports in non-blocking mode: iklib io non-blocking.
                                                              (line   6)
* Installing Vicare:                     overview install.    (line   6)
* integrated-macro, syntactic binding type: expander lexenv prim integrated.
                                                              (line   6)
* Integration of functions and expressions: iklib syntaxes integrable.
                                                              (line   6)
* Invoking Vicare:                       using.               (line  10)
* Keyword, definition of:                scheme basic variables keywords regions.
                                                              (line   6)
* Lexical bindings, definition of:       expander intro bindings.
                                                              (line   6)
* lexical, syntactic binding type:       expander lexenv internal variables.
                                                              (line   6)
* Libraries, stale with respect to source: iklib syntaxes stale.
                                                              (line   6)
* Library (psyntax system $all):         expander lexenv prim.
                                                              (line   6)
* Library (vicare compiler):             compiler.            (line   6)
* Library (vicare expander):             expander.            (line   6)
* Library (vicare ffi foreign-pointer-wrapper): ffi foreign wrapper.
                                                              (line   6)
* Library (vicare ffi):                  ffi.                 (line   6)
* Library (vicare language-extensions):  iklib.               (line   6)
* Library (vicare libraries):            libutils.            (line   6)
* Library (vicare numerics constants):   iklib numerics constants.
                                                              (line   6)
* Library (vicare platform features):    iklib.               (line  28)
* Library (vicare programs):             progutils.           (line   6)
* Library (vicare system $bignums):      syslib bignums.      (line   6)
* Library (vicare system $booleans):     syslib booleans.     (line   6)
* Library (vicare system $bytevectors):  syslib bytevectors.  (line   6)
* Library (vicare system $chars):        syslib chars.        (line   6)
* Library (vicare system $codes):        syslib codes unsafe. (line   6)
* Library (vicare system $codes) <1>:    syslib closures.     (line   6)
* Library (vicare system $compnums):     syslib compnums.     (line   6)
* Library (vicare system $compnums) <1>: syslib cflonums.     (line   6)
* Library (vicare system $flonums):      syslib flonums.      (line   6)
* Library (vicare system $fx):           syslib fixnums.      (line   6)
* Library (vicare system $hashtables):   syslib hashtables.   (line   6)
* Library (vicare system $io):           syslib ports.        (line   6)
* Library (vicare system $keywords):     syslib keywords.     (line   6)
* Library (vicare system $lists):        syslib lists.        (line   6)
* Library (vicare system $numerics):     syslib numerics.     (line   6)
* Library (vicare system $pairs):        syslib pairs.        (line   6)
* Library (vicare system $pointers):     syslib pointers.     (line   6)
* Library (vicare system $ratnums):      syslib ratnums.      (line   6)
* Library (vicare system $records):      syslib records.      (line   6)
* Library (vicare system $runtime):      iklib runtime.       (line   6)
* Library (vicare system $strings):      syslib strings.      (line   6)
* Library (vicare system $structs):      syslib structs unsafe.
                                                              (line   6)
* Library (vicare system $symbols):      syslib symbols.      (line   6)
* Library (vicare system $tcbuckets):    syslib tcbuckets.    (line   6)
* Library (vicare system $transcoders):  syslib transcoders.  (line   6)
* Library (vicare system $vectors):      syslib vectors.      (line   6)
* Library (vicare system code-objects):  syslib codes safe.   (line   6)
* Library (vicare system comparison-procedures): syslib compar.
                                                              (line   6)
* Library (vicare system structs):       syslib structs safe. (line   6)
* Library (vicare unsafe unicode):       iklib chars unicode. (line   6)
* Library (vicare):                      iklib.               (line   6)
* Library body:                          scheme library form. (line   6)
* Library clause foreign-library:        iklib libraries foreign.
                                                              (line   6)
* Library clause foreign-library <1>:    foreign.             (line   6)
* Library clause options:                iklib libraries options.
                                                              (line   6)
* library form, the:                     scheme library form. (line   6)
* Library name, library form:            scheme library form names.
                                                              (line   6)
* Library reference, library form:       scheme library form import.
                                                              (line  36)
* Library source path:                   using libraries paths.
                                                              (line   6)
* Library, (rnrs arithmetic bitwise (6)): stdlib arithmetic exact bitwise.
                                                              (line   6)
* Library, (rnrs arithmetic fixnums (6)): stdlib arithmetic fixnums.
                                                              (line   6)
* Library, (rnrs arithmetic flonums (6)): stdlib arithmetic flonums.
                                                              (line   6)
* Library, (rnrs base (6)):              baselib.             (line   6)
* Library, (rnrs bytevectors (6)):       stdlib bytevector.   (line   6)
* Library, (rnrs conditions (6)):        stdlib exceptions conditions.
                                                              (line   6)
* Library, (rnrs control (6)):           stdlib control.      (line   6)
* Library, (rnrs enums (6)):             stdlib enum.         (line   6)
* Library, (rnrs eval (6)):              stdlib eval.         (line   6)
* Library, (rnrs exceptions (6)):        stdlib exceptions exceptions.
                                                              (line   6)
* Library, (rnrs files (6)):             stdlib files.        (line   6)
* Library, (rnrs hashtables (6)):        stdlib hashtable.    (line   6)
* Library, (rnrs io ports (6)):          stdlib io.           (line   6)
* Library, (rnrs io ports (6)) <1>:      stdlib io port.      (line   6)
* Library, (rnrs io simple (6)):         stdlib io.           (line   6)
* Library, (rnrs io simple (6)) <1>:     stdlib io simple.    (line   6)
* Library, (rnrs lists (6)):             stdlib list.         (line   6)
* Library, (rnrs mutable-pairs (6)):     stdlib mutable pairs.
                                                              (line   6)
* Library, (rnrs mutable-strings (6)):   stdlib mutable strings.
                                                              (line   6)
* Library, (rnrs programs (6)):          stdlib programlib.   (line   6)
* Library, (rnrs r5rs (6)):              stdlib rfive compat. (line   6)
* Library, (rnrs record inspection (6)): stdlib records inspection.
                                                              (line   6)
* Library, (rnrs records procedural (6)): stdlib records procedural layer.
                                                              (line   6)
* Library, (rnrs records syntactic (6)): stdlib records syntactic layer.
                                                              (line   6)
* Library, (rnrs sorting (6)):           stdlib sorting.      (line   6)
* Library, (rnrs syntax-case (6)):       stdlib syntax-case.  (line   6)
* Library, (rnrs unicode (6)):           stdlib unicode.      (line   6)
* library, standalone syntax:            iklib syntaxes libraries.
                                                              (line   6)
* library-binary-search-path:            using libraries paths.
                                                              (line   6)
* library-debug-messages, command line option: using invoking.
                                                              (line 259)
* library-source-search-path:            using libraries paths.
                                                              (line   6)
* Loading include files:                 includes.            (line   6)
* Local bindings, definition of:         expander intro bindings.
                                                              (line   6)
* Local library imports, import:         iklib expander local import.
                                                              (line   6)
* local-etv, syntactic binding type:     expander lexenv internal etv.
                                                              (line   6)
* local-macro!, syntactic binding type:  expander lexenv internal vmacros.
                                                              (line   6)
* local-macro, syntactic binding type:   expander lexenv internal nvmacro.
                                                              (line   6)
* Macro transformer, definition of:      scheme syntax macros.
                                                              (line   6)
* Macro transformers:                    baselib transformers.
                                                              (line   6)
* macro, syntactic binding type:         expander lexenv prim ncmacros.
                                                              (line   6)
* method, record-type definition clause: iklib records defs methods.
                                                              (line   6)
* mixins, record-type definition clause: iklib records defs mixins.
                                                              (line   6)
* Named let:                             baselib iteration.   (line   6)
* NaN, how to deal with it:              notes nan.           (line   6)
* no-check-compiler-pass-preconditions, command line option: using invoking.
                                                              (line 224)
* no-debug-messages, command line option: using invoking.     (line 254)
* no-drop-assertions, command line option: using invoking.    (line 205)
* no-library-debug-messages, command line option: using invoking.
                                                              (line 259)
* no-print-loaded-libraries, command line option: using invoking.
                                                              (line 246)
* no-strict-r6rs, command line option:   using invoking.      (line 191)
* Non-blocking mode, input/output ports: iklib io non-blocking.
                                                              (line   6)
* Objects destruction through guardians: iklib guardians.     (line   6)
* Objects finalisation through guardians: iklib guardians.    (line   6)
* options, library clause:               iklib libraries options.
                                                              (line   6)
* options, program clause:               iklib programs options.
                                                              (line   6)
* Parameter bytevector-port-buffer-size: iklib io buffer.     (line  10)
* Parameter cafe-input-port:             iklib cafe.          (line  37)
* Parameter check-for-illegal-letrec:    compiler letrec api. (line  15)
* Parameter command-line-arguments:      iklib cmdline.       (line   9)
* Parameter cp0-effort-limit:            compiler optimisation.
                                                              (line  42)
* Parameter cp0-size-limit:              compiler optimisation.
                                                              (line  49)
* Parameter current-error-port:          iklib io textual.    (line  19)
* Parameter current-input-port:          iklib io textual.    (line   9)
* Parameter current-letrec-pass:         compiler letrec api. (line  25)
* Parameter current-output-port:         iklib io textual.    (line  14)
* Parameter debug-print-enabled?:        iklib printing debug.
                                                              (line  12)
* Parameter engine-handler:              iklib engines.       (line  10)
* Parameter exit-hooks:                  iklib misc.          (line 110)
* Parameter filename->string-func:       iklib io pathnames.  (line  20)
* Parameter generate-debug-calls:        debug int intro.     (line  22)
* Parameter generate-descriptive-labels: compiler options.    (line  13)
* Parameter gensym-count:                iklib printing pretty.
                                                              (line 168)
* Parameter gensym-prefix:               iklib printing pretty.
                                                              (line 138)
* Parameter input-file-buffer-size:      iklib io buffer.     (line  20)
* Parameter input/output-file-buffer-size: iklib io buffer.   (line  30)
* Parameter input/output-socket-buffer-size: iklib io buffer. (line  36)
* Parameter interrupt-handler:           iklib engines.       (line   7)
* Parameter native-transcoder:           iklib io codecs.     (line  15)
* Parameter optimize-level:              compiler optimisation.
                                                              (line  38)
* Parameter output-file-buffer-size:     iklib io buffer.     (line  25)
* Parameter pathname->string-func:       iklib io pathnames.  (line  20)
* Parameter perform-core-type-inference?: compiler type inference.
                                                              (line  57)
* Parameter perform-unsafe-primrefs-introduction?: compiler unsafe primrefs.
                                                              (line  46)
* Parameter post-gc-hooks:               iklib guardians api. (line  44)
* Parameter pretty-width:                iklib printing pretty.
                                                              (line  71)
* Parameter print-gensym:                iklib printing pretty.
                                                              (line 111)
* Parameter print-graph:                 iklib shared.        (line  32)
* Parameter print-unicode:               iklib printing pretty.
                                                              (line  97)
* Parameter printer-integer-radix:       iklib printing pretty.
                                                              (line 103)
* Parameter record-guardian-logger:      iklib records final. (line  63)
* Parameter source-optimizer-passes-count: compiler optimisation.
                                                              (line  28)
* Parameter string->filename-func:       iklib io pathnames.  (line  14)
* Parameter string->pathname-func:       iklib io pathnames.  (line  14)
* Parameter string-port-buffer-size:     iklib io buffer.     (line  15)
* Parameter struct-guardian-logger:      syslib structs safe final.
                                                              (line  52)
* Parameter verbose-timer:               iklib timing.        (line  72)
* Parameter waiter-prompt-string:        iklib cafe.          (line  34)
* Passes, compiler:                      compiler.            (line   6)
* pattern-variable, syntactic binding type: expander lexenv internal pvars.
                                                              (line   6)
* PC-REGISTER, Process Control Register: machinery registers. (line  48)
* PCR, Process Control Register:         machinery registers. (line  48)
* print-assembly, command line option:   using invoking.      (line 236)
* print-loaded-libraries, command line option: using invoking.
                                                              (line 246)
* print-optimizer, command line option:  using invoking.      (line 241)
* Process Control Register, PCR:         machinery registers. (line  48)
* Processes, running in parallel:        iklib coroutines parallel.
                                                              (line   6)
* Program clause foreign-library:        iklib programs foreign.
                                                              (line   6)
* Program clause foreign-library <1>:    foreign.             (line   6)
* Program clause options:                iklib programs options.
                                                              (line   6)
* program top-level program form:        iklib programs form. (line   6)
* R6RS programs:                         using programs.      (line   6)
* Read-time, importing libraries:        iklib reader extensions.
                                                              (line   6)
* Reader extensions:                     iklib reader extensions.
                                                              (line   6)
* Reader lexical environment, reader-import: iklib reader extensions.
                                                              (line   6)
* reader-import, reader lexical environment: iklib reader extensions.
                                                              (line   6)
* Records, automatic finalisation:       iklib records final. (line   6)
* Records, destructors:                  iklib records final. (line   6)
* Region, definition of:                 scheme basic variables keywords regions.
                                                              (line   6)
* Releasing asynchronous resources:      iklib compensations. (line   6)
* Relocation vector, foreign address records: objects codes reloc foreign.
                                                              (line   6)
* Relocation vector, jump to label-offset records: objects codes reloc jump.
                                                              (line   6)
* Relocation vector, offset in object records: objects codes reloc offset.
                                                              (line   6)
* Relocation vector, vanilla object records: objects codes reloc vanilla.
                                                              (line   6)
* rlwrap:                                using rlwrap.        (line   6)
* Running parallel processes, coroutines: iklib coroutines parallel.
                                                              (line   6)
* scc-letrec-pass, command line option:  using invoking.      (line 310)
* Scheme heap nursery size configuration: iklib runtime.      (line   6)
* Scheme programs:                       using programs.      (line   6)
* Scheme scripts:                        using programs.      (line   6)
* Scheme stack size configuration:       iklib runtime.       (line   6)
* Source library source path:            using libraries paths.
                                                              (line   6)
* Special CPU registers:                 machinery registers. (line   6)
* Stack size configuration:              iklib runtime.       (line   6)
* Stacks of compensation thunks:         iklib compensations. (line   6)
* Stale libraries:                       iklib syntaxes stale.
                                                              (line   6)
* strict-r6rs, command line option:      using invoking.      (line 191)
* strip-angular-parentheses, record-type definition clause: iklib records defs angular.
                                                              (line   6)
* Structs, automatic finalisation:       syslib structs safe final.
                                                              (line   6)
* Structs, destructors:                  syslib structs safe final.
                                                              (line   6)
* super-protocol, record-type definition clause: iklib records defs super-proto.
                                                              (line   6)
* Syntactic binding types, $core-condition-object-type-name: expander lexenv prim conditions.
                                                              (line   6)
* Syntactic binding types, $core-label-type-name: expander lexenv prim labels.
                                                              (line   6)
* Syntactic binding types, $core-rcd:    expander lexenv prim rcd.
                                                              (line   6)
* Syntactic binding types, $core-record-type-name: expander lexenv prim records.
                                                              (line   6)
* Syntactic binding types, $core-rtd:    expander lexenv prim rtd.
                                                              (line   6)
* Syntactic binding types, $core-type-descriptor: expander lexenv prim btd.
                                                              (line   6)
* Syntactic binding types, $core-type-name: expander lexenv prim bio.
                                                              (line   6)
* Syntactic binding types, $fluid:       expander lexenv prim fluids.
                                                              (line   6)
* Syntactic binding types, $fluid <1>:   expander lexenv imported fluids.
                                                              (line   6)
* Syntactic binding types, $fluid <2>:   expander lexenv internal fluids.
                                                              (line   6)
* Syntactic binding types, $module:      expander lexenv imported modules.
                                                              (line   6)
* Syntactic binding types, $module <1>:  expander lexenv internal modules.
                                                              (line   6)
* Syntactic binding types, $record-type-name: expander lexenv imported rtn.
                                                              (line   6)
* Syntactic binding types, $record-type-name <1>: expander lexenv internal rtn.
                                                              (line   6)
* Syntactic binding types, $struct-type-name: expander lexenv imported stn.
                                                              (line   6)
* Syntactic binding types, $struct-type-name <1>: expander lexenv internal stn.
                                                              (line   6)
* Syntactic binding types, $synonym:     expander lexenv imported synonyms.
                                                              (line   6)
* Syntactic binding types, $synonym <1>: expander lexenv internal synonym.
                                                              (line   6)
* Syntactic binding types, begin-for-syntax: expander lexenv internal bfs.
                                                              (line   6)
* Syntactic binding types, core-macro:   expander lexenv prim cmacros.
                                                              (line   6)
* Syntactic binding types, core-prim:    expander lexenv prim primitives.
                                                              (line   6)
* Syntactic binding types, displaced-lexical: expander lexenv internal displaced.
                                                              (line   6)
* Syntactic binding types, global:       expander lexenv imported variables.
                                                              (line   6)
* Syntactic binding types, global-etv:   expander lexenv imported etv.
                                                              (line   6)
* Syntactic binding types, global-macro: expander lexenv imported nvmacros.
                                                              (line   6)
* Syntactic binding types, global-macro!: expander lexenv imported vmacros.
                                                              (line   6)
* Syntactic binding types, integrated-macro: expander lexenv prim integrated.
                                                              (line   6)
* Syntactic binding types, lexical:      expander lexenv internal variables.
                                                              (line   6)
* Syntactic binding types, local-etv:    expander lexenv internal etv.
                                                              (line   6)
* Syntactic binding types, local-macro:  expander lexenv internal nvmacro.
                                                              (line   6)
* Syntactic binding types, local-macro!: expander lexenv internal vmacros.
                                                              (line   6)
* Syntactic binding types, macro:        expander lexenv prim ncmacros.
                                                              (line   6)
* Syntactic binding types, pattern-variable: expander lexenv internal pvars.
                                                              (line   6)
* Syntactic bindings, definition of:     expander intro bindings.
                                                              (line   6)
* Syntactic bindings, definition of <1>: expander intro bindings.
                                                              (line   6)
* Syntactic keywords, binding:           baselib syntax binding.
                                                              (line   6)
* Syntax library:                        iklib syntaxes libraries.
                                                              (line   6)
* System environment variable VICARE_LIBRARY_PATH: libutils file-system paths.
                                                              (line  46)
* System environment variable VICARE_SOURCE_PATH: libutils file-system paths.
                                                              (line  88)
* System environment variable VICARE_STORE_DIRECTORY: libutils compiling special build.
                                                              (line  46)
* Tail call:                             baselib tail call.   (line   6)
* Tail contexts:                         baselib tail call.   (line   6)
* The library form:                      scheme library form. (line   6)
* Top level bindings, definition of:     expander intro bindings.
                                                              (line   6)
* Top-level body:                        scheme programs syntax.
                                                              (line   6)
* Top-level lexical environment:         expander examples top-level.
                                                              (line   6)
* top-level program form program:        iklib programs form. (line   6)
* Transformer, definition of:            scheme syntax macros.
                                                              (line   6)
* Transformers, macro:                   baselib transformers.
                                                              (line   6)
* type-predicate, record-type definition clause: iklib records defs predicate.
                                                              (line   6)
* Uninstalling Vicare:                   overview install.    (line   6)
* Uninstalling Vicare <1>:               overview install uninstall.
                                                              (line   6)
* Unique objects, would-block object:    iklib io non-blocking.
                                                              (line   6)
* Variable, definition of:               scheme basic variables keywords regions.
                                                              (line   6)
* Vicare, disinstalling:                 overview install.    (line   6)
* Vicare, disinstalling <1>:             overview install uninstall.
                                                              (line   6)
* Vicare, installing:                    overview install.    (line   6)
* Vicare, uninstalling:                  overview install.    (line   6)
* Vicare, uninstalling <1>:              overview install uninstall.
                                                              (line   6)
* VICARE_ARGUMENTS_VALIDATION environment variable: overview install details.
                                                              (line  76)
* VICARE_LIBRARY_PATH, system environment variable: libutils file-system paths.
                                                              (line  46)
* VICARE_SOURCE_PATH, system environment variable: libutils file-system paths.
                                                              (line  88)
* VICARE_STORE_DIRECTORY, system environment variable: libutils compiling special build.
                                                              (line  46)
* virtual-method, record-type definition clause: iklib records defs methods.
                                                              (line   6)
* waddell-letrec-pass, command line option: using invoking.   (line 310)
* Would-block object:                    iklib io non-blocking.
                                                              (line   6)
* Writing reader extensions:             iklib reader extensions.
                                                              (line   6)


File: vicare-scheme.info,  Node: function index,  Next: variable index,  Prev: concept index,  Up: Top

Appendix P An entry for each function
*************************************

 [index ]
* Menu:

* !=:                                    iklib numerics compar.
                                                              (line   6)
* #!(char-names (?NAME . ?CHAR) ...):    iklib reader chars.  (line   9)
* #!eof:                                 iklib reader misc.   (line  79)
* #!ikarus:                              iklib reader mode.   (line   7)
* #!vicare:                              iklib reader mode.   (line   6)
* #:SYMBOL:                              iklib reader misc.   (line  74)
* #<?SYMBOL:                             iklib reader extensions.
                                                              (line  60)
* #ci:                                   iklib reader misc.   (line 118)
* #cs:                                   iklib reader misc.   (line 119)
* #vc4b(CFLONUM ...):                    iklib reader bv.     (line  62)
* #vc4l(CFLONUM ...):                    iklib reader bv.     (line  61)
* #vc4n(CFLONUM ...):                    iklib reader bv.     (line  63)
* #vc8b(CFLONUM ...):                    iklib reader bv.     (line  68)
* #vc8l(CFLONUM ...):                    iklib reader bv.     (line  67)
* #vc8n(CFLONUM ...):                    iklib reader bv.     (line  69)
* #ve(ENCODING DATA):                    iklib reader bv.     (line  73)
* #vf4b(FLONUM ...):                     iklib reader bv.     (line  50)
* #vf4l(FLONUM ...):                     iklib reader bv.     (line  49)
* #vf4n(FLONUM ...):                     iklib reader bv.     (line  51)
* #vf8b(FLONUM ...):                     iklib reader bv.     (line  56)
* #vf8l(FLONUM ...):                     iklib reader bv.     (line  55)
* #vf8n(FLONUM ...):                     iklib reader bv.     (line  57)
* #vs16b(WORD ...):                      iklib reader bv.     (line  20)
* #vs16l(WORD ...):                      iklib reader bv.     (line  19)
* #vs16n(WORD ...):                      iklib reader bv.     (line  21)
* #vs32b(WORD ...):                      iklib reader bv.     (line  32)
* #vs32l(WORD ...):                      iklib reader bv.     (line  31)
* #vs32n(WORD ...):                      iklib reader bv.     (line  33)
* #vs64b(WORD ...):                      iklib reader bv.     (line  44)
* #vs64l(WORD ...):                      iklib reader bv.     (line  43)
* #vs64n(WORD ...):                      iklib reader bv.     (line  45)
* #vs8(BYTE ...):                        iklib reader bv.     (line   9)
* #vu16b(WORD ...):                      iklib reader bv.     (line  14)
* #vu16l(WORD ...):                      iklib reader bv.     (line  13)
* #vu16n(WORD ...):                      iklib reader bv.     (line  15)
* #vu32b(WORD ...):                      iklib reader bv.     (line  26)
* #vu32l(WORD ...):                      iklib reader bv.     (line  25)
* #vu32n(WORD ...):                      iklib reader bv.     (line  27)
* #vu64b(WORD ...):                      iklib reader bv.     (line  38)
* #vu64l(WORD ...):                      iklib reader bv.     (line  37)
* #vu64n(WORD ...):                      iklib reader bv.     (line  39)
* #\{?NAME}:                             iklib reader chars.  (line  18)
* #{pretty-name unique-name}:            iklib reader misc.   (line  44)
* #{unique-name}:                        iklib reader misc.   (line  43)
* $abs-bignum:                           syslib numerics abs. (line   9)
* $abs-fixnum:                           syslib numerics abs. (line   6)
* $abs-flonum:                           syslib numerics abs. (line  12)
* $abs-ratnum:                           syslib numerics abs. (line  15)
* $acos-bignum:                          syslib numerics acos.
                                                              (line  10)
* $acos-cflonum:                         syslib numerics acos.
                                                              (line  22)
* $acos-compnum:                         syslib numerics acos.
                                                              (line  25)
* $acos-fixnum:                          syslib numerics acos.
                                                              (line   6)
* $acos-flonum:                          syslib numerics acos.
                                                              (line  18)
* $acos-ratnum:                          syslib numerics acos.
                                                              (line  14)
* $acosh-bignum:                         syslib numerics acosh.
                                                              (line  10)
* $acosh-cflonum:                        syslib numerics acosh.
                                                              (line  28)
* $acosh-compnum:                        syslib numerics acosh.
                                                              (line  24)
* $acosh-fixnum:                         syslib numerics acosh.
                                                              (line   6)
* $acosh-flonum:                         syslib numerics acosh.
                                                              (line  18)
* $acosh-ratnum:                         syslib numerics acosh.
                                                              (line  14)
* $add-bignum-bignum:                    syslib numerics add. (line  81)
* $add-bignum-cflonum:                   syslib numerics add. (line  94)
* $add-bignum-compnum:                   syslib numerics add. (line  91)
* $add-bignum-fixnum:                    syslib numerics add. (line  77)
* $add-bignum-flonum:                    syslib numerics add. (line  85)
* $add-bignum-number:                    syslib numerics add. (line  15)
* $add-bignum-ratnum:                    syslib numerics add. (line  88)
* $add-cflonum-bignum:                   syslib numerics add. (line 170)
* $add-cflonum-cflonum:                  syslib numerics add. (line 182)
* $add-cflonum-compnum:                  syslib numerics add. (line 179)
* $add-cflonum-fixnum:                   syslib numerics add. (line 167)
* $add-cflonum-flonum:                   syslib numerics add. (line 176)
* $add-cflonum-number:                   syslib numerics add. (line  27)
* $add-cflonum-ratnum:                   syslib numerics add. (line 173)
* $add-compnum-bignum:                   syslib numerics add. (line 147)
* $add-compnum-cflonum:                  syslib numerics add. (line 161)
* $add-compnum-compnum:                  syslib numerics add. (line 153)
* $add-compnum-fixnum:                   syslib numerics add. (line 144)
* $add-compnum-flonum:                   syslib numerics add. (line 157)
* $add-compnum-number:                   syslib numerics add. (line  24)
* $add-compnum-ratnum:                   syslib numerics add. (line 150)
* $add-fixnum-bignum:                    syslib numerics add. (line  58)
* $add-fixnum-cflonum:                   syslib numerics add. (line  71)
* $add-fixnum-compnum:                   syslib numerics add. (line  68)
* $add-fixnum-fixnum:                    syslib numerics add. (line  54)
* $add-fixnum-flonum:                    syslib numerics add. (line  62)
* $add-fixnum-number:                    syslib numerics add. (line  12)
* $add-fixnum-ratnum:                    syslib numerics add. (line  65)
* $add-flonum-bignum:                    syslib numerics add. (line 103)
* $add-flonum-cflonum:                   syslib numerics add. (line 116)
* $add-flonum-compnum:                   syslib numerics add. (line 112)
* $add-flonum-fixnum:                    syslib numerics add. (line 100)
* $add-flonum-flonum:                    syslib numerics add. (line 106)
* $add-flonum-number:                    syslib numerics add. (line  18)
* $add-flonum-ratnum:                    syslib numerics add. (line 109)
* $add-number-bignum:                    syslib numerics add. (line  36)
* $add-number-cflonum:                   syslib numerics add. (line  48)
* $add-number-compnum:                   syslib numerics add. (line  45)
* $add-number-fixnum:                    syslib numerics add. (line  33)
* $add-number-flonum:                    syslib numerics add. (line  39)
* $add-number-number:                    syslib numerics add. (line   6)
* $add-number-ratnum:                    syslib numerics add. (line  42)
* $add-ratnum-bignum:                    syslib numerics add. (line 125)
* $add-ratnum-cflonum:                   syslib numerics add. (line 138)
* $add-ratnum-compnum:                   syslib numerics add. (line 135)
* $add-ratnum-fixnum:                    syslib numerics add. (line 122)
* $add-ratnum-flonum:                    syslib numerics add. (line 128)
* $add-ratnum-number:                    syslib numerics add. (line  21)
* $add-ratnum-ratnum:                    syslib numerics add. (line 131)
* $add1-bignum:                          syslib numerics add1.
                                                              (line   9)
* $add1-fixnum:                          syslib numerics add1.
                                                              (line  12)
* $add1-integer:                         syslib numerics add1.
                                                              (line   6)
* $angle-bignum:                         syslib numerics angle.
                                                              (line   9)
* $angle-cflonum:                        syslib numerics angle.
                                                              (line  21)
* $angle-compnum:                        syslib numerics angle.
                                                              (line  18)
* $angle-fixnum:                         syslib numerics angle.
                                                              (line   6)
* $angle-flonum:                         syslib numerics angle.
                                                              (line  15)
* $angle-ratnum:                         syslib numerics angle.
                                                              (line  12)
* $annotated-procedure-annotation:       syslib closures.     (line  45)
* $ascii->string:                        syslib strings.      (line 137)
* $ascii-encoded-bytevector?:            syslib bytevectors encodings.
                                                              (line   9)
* $ascii-encoded-string?:                syslib strings.      (line 150)
* $asin-bignum:                          syslib numerics asin.
                                                              (line  10)
* $asin-cflonum:                         syslib numerics asin.
                                                              (line  22)
* $asin-compnum:                         syslib numerics asin.
                                                              (line  25)
* $asin-fixnum:                          syslib numerics asin.
                                                              (line   6)
* $asin-flonum:                          syslib numerics asin.
                                                              (line  18)
* $asin-ratnum:                          syslib numerics asin.
                                                              (line  14)
* $asinh-bignum:                         syslib numerics asinh.
                                                              (line   9)
* $asinh-cflonum:                        syslib numerics asinh.
                                                              (line  22)
* $asinh-compnum:                        syslib numerics asinh.
                                                              (line  19)
* $asinh-fixnum:                         syslib numerics asinh.
                                                              (line   6)
* $asinh-flonum:                         syslib numerics asinh.
                                                              (line  15)
* $asinh-ratnum:                         syslib numerics asinh.
                                                              (line  12)
* $atan-bignum:                          syslib numerics atan.
                                                              (line  30)
* $atan-cflonum:                         syslib numerics atan.
                                                              (line  39)
* $atan-compnum:                         syslib numerics atan.
                                                              (line  42)
* $atan-fixnum:                          syslib numerics atan.
                                                              (line  27)
* $atan-flonum:                          syslib numerics atan.
                                                              (line  36)
* $atan-ratnum:                          syslib numerics atan.
                                                              (line  33)
* $atan2-real-real:                      syslib numerics atan.
                                                              (line   6)
* $atanh-bignum:                         syslib numerics atanh.
                                                              (line  10)
* $atanh-cflonum:                        syslib numerics atanh.
                                                              (line  28)
* $atanh-compnum:                        syslib numerics atanh.
                                                              (line  24)
* $atanh-fixnum:                         syslib numerics atanh.
                                                              (line   6)
* $atanh-flonum:                         syslib numerics atanh.
                                                              (line  18)
* $atanh-ratnum:                         syslib numerics atanh.
                                                              (line  14)
* $base64->bytevector:                   syslib bytevectors encodings.
                                                              (line  46)
* $bignum->flonum:                       syslib bignums.      (line  30)
* $bignum-byte-ref:                      syslib bignums.      (line  22)
* $bignum-even?:                         syslib bignums.      (line  18)
* $bignum-hash:                          syslib hashtables.   (line 136)
* $bignum-negative?:                     syslib bignums.      (line  11)
* $bignum-non-negative?:                 syslib bignums.      (line  15)
* $bignum-non-positive?:                 syslib bignums.      (line  14)
* $bignum-odd?:                          syslib bignums.      (line  19)
* $bignum-positive?:                     syslib bignums.      (line  10)
* $bignum-size:                          syslib bignums.      (line  26)
* $bitwise-and-bignum-bignum:            syslib numerics bitand.
                                                              (line  24)
* $bitwise-and-bignum-fixnum:            syslib numerics bitand.
                                                              (line  21)
* $bitwise-and-bignum-number:            syslib numerics bitand.
                                                              (line  10)
* $bitwise-and-fixnum-bignum:            syslib numerics bitand.
                                                              (line  18)
* $bitwise-and-fixnum-fixnum:            syslib numerics bitand.
                                                              (line  14)
* $bitwise-and-fixnum-number:            syslib numerics bitand.
                                                              (line   6)
* $bitwise-ior-bignum-bignum:            syslib numerics bitior.
                                                              (line  26)
* $bitwise-ior-bignum-fixnum:            syslib numerics bitior.
                                                              (line  22)
* $bitwise-ior-bignum-number:            syslib numerics bitior.
                                                              (line  10)
* $bitwise-ior-fixnum-bignum:            syslib numerics bitior.
                                                              (line  18)
* $bitwise-ior-fixnum-fixnum:            syslib numerics bitior.
                                                              (line  14)
* $bitwise-ior-fixnum-number:            syslib numerics bitior.
                                                              (line   6)
* $bitwise-not-bignum:                   syslib numerics bitnot.
                                                              (line   9)
* $bitwise-not-fixnum:                   syslib numerics bitnot.
                                                              (line   6)
* $bitwise-xor-bignum-bignum:            syslib numerics bitxor.
                                                              (line  26)
* $bitwise-xor-bignum-fixnum:            syslib numerics bitxor.
                                                              (line  22)
* $bitwise-xor-bignum-number:            syslib numerics bitxor.
                                                              (line  10)
* $bitwise-xor-fixnum-bignum:            syslib numerics bitxor.
                                                              (line  18)
* $bitwise-xor-fixnum-fixnum:            syslib numerics bitxor.
                                                              (line  14)
* $bitwise-xor-fixnum-number:            syslib numerics bitxor.
                                                              (line   6)
* $boolean!=:                            syslib booleans.     (line  16)
* $boolean-max:                          syslib booleans.     (line  35)
* $boolean-min:                          syslib booleans.     (line  34)
* $boolean<:                             syslib booleans.     (line  21)
* $boolean<=:                            syslib booleans.     (line  23)
* $boolean=:                             syslib booleans.     (line  12)
* $boolean>:                             syslib booleans.     (line  22)
* $boolean>=:                            syslib booleans.     (line  24)
* $bytevector!=:                         syslib bytevectors comparison.
                                                              (line  10)
* $bytevector->base64:                   syslib bytevectors encodings.
                                                              (line  47)
* $bytevector->string-base64:            syslib strings.      (line 168)
* $bytevector-concatenate:               syslib bytevectors concatenating.
                                                              (line  14)
* $bytevector-copy:                      syslib bytevectors copying.
                                                              (line  30)
* $bytevector-copy!:                     syslib bytevectors copying.
                                                              (line  33)
* $bytevector-copy!/count:               syslib bytevectors copying.
                                                              (line  38)
* $bytevector-empty?:                    syslib bytevectors predicates.
                                                              (line   6)
* $bytevector-hash:                      syslib hashtables.   (line  46)
* $bytevector-hash <1>:                  syslib hashtables.   (line  47)
* $bytevector-ieee-double-big-ref:       syslib bytevectors accessors double.
                                                              (line  14)
* $bytevector-ieee-double-big-set!:      syslib bytevectors accessors double.
                                                              (line  15)
* $bytevector-ieee-double-little-ref:    syslib bytevectors accessors double.
                                                              (line  19)
* $bytevector-ieee-double-little-set!:   syslib bytevectors accessors double.
                                                              (line  20)
* $bytevector-ieee-double-native-ref:    syslib bytevectors accessors double.
                                                              (line  24)
* $bytevector-ieee-double-native-set!:   syslib bytevectors accessors double.
                                                              (line  25)
* $bytevector-ieee-double-nonnative-ref: syslib bytevectors accessors double.
                                                              (line  29)
* $bytevector-ieee-double-nonnative-set!: syslib bytevectors accessors double.
                                                              (line  30)
* $bytevector-ieee-double-ref:           syslib bytevectors accessors double.
                                                              (line  35)
* $bytevector-ieee-double-set!:          syslib bytevectors accessors double.
                                                              (line  36)
* $bytevector-ieee-single-big-ref:       syslib bytevectors accessors single.
                                                              (line  14)
* $bytevector-ieee-single-big-set!:      syslib bytevectors accessors single.
                                                              (line  15)
* $bytevector-ieee-single-little-ref:    syslib bytevectors accessors single.
                                                              (line  19)
* $bytevector-ieee-single-little-set!:   syslib bytevectors accessors single.
                                                              (line  20)
* $bytevector-ieee-single-native-ref:    syslib bytevectors accessors single.
                                                              (line  24)
* $bytevector-ieee-single-native-set!:   syslib bytevectors accessors single.
                                                              (line  25)
* $bytevector-ieee-single-nonnative-ref: syslib bytevectors accessors single.
                                                              (line  29)
* $bytevector-ieee-single-nonnative-set!: syslib bytevectors accessors single.
                                                              (line  30)
* $bytevector-ieee-single-ref:           syslib bytevectors accessors single.
                                                              (line  35)
* $bytevector-ieee-single-set!:          syslib bytevectors accessors single.
                                                              (line  36)
* $bytevector-length:                    syslib bytevectors inspection.
                                                              (line   6)
* $bytevector-reverse-and-concatenate:   syslib bytevectors concatenating.
                                                              (line  19)
* $bytevector-s16-ref:                   syslib bytevectors accessors 16-bit.
                                                              (line  51)
* $bytevector-s16-set!:                  syslib bytevectors accessors 16-bit.
                                                              (line  52)
* $bytevector-s16b-ref:                  syslib bytevectors accessors 16-bit.
                                                              (line  38)
* $bytevector-s16b-set!:                 syslib bytevectors accessors 16-bit.
                                                              (line  39)
* $bytevector-s16l-ref:                  syslib bytevectors accessors 16-bit.
                                                              (line  34)
* $bytevector-s16l-set!:                 syslib bytevectors accessors 16-bit.
                                                              (line  35)
* $bytevector-s16n-ref:                  syslib bytevectors accessors 16-bit.
                                                              (line  42)
* $bytevector-s16n-set!:                 syslib bytevectors accessors 16-bit.
                                                              (line  43)
* $bytevector-s32-ref:                   syslib bytevectors accessors 32-bit.
                                                              (line  52)
* $bytevector-s32-set!:                  syslib bytevectors accessors 32-bit.
                                                              (line  53)
* $bytevector-s32b-ref:                  syslib bytevectors accessors 32-bit.
                                                              (line  39)
* $bytevector-s32b-set!:                 syslib bytevectors accessors 32-bit.
                                                              (line  40)
* $bytevector-s32l-ref:                  syslib bytevectors accessors 32-bit.
                                                              (line  35)
* $bytevector-s32l-set!:                 syslib bytevectors accessors 32-bit.
                                                              (line  36)
* $bytevector-s32n-ref:                  syslib bytevectors accessors 32-bit.
                                                              (line  43)
* $bytevector-s32n-set!:                 syslib bytevectors accessors 32-bit.
                                                              (line  44)
* $bytevector-s64-ref:                   syslib bytevectors accessors 64-bit.
                                                              (line  52)
* $bytevector-s64-set!:                  syslib bytevectors accessors 64-bit.
                                                              (line  53)
* $bytevector-s64b-ref:                  syslib bytevectors accessors 64-bit.
                                                              (line  39)
* $bytevector-s64b-set!:                 syslib bytevectors accessors 64-bit.
                                                              (line  40)
* $bytevector-s64l-ref:                  syslib bytevectors accessors 64-bit.
                                                              (line  35)
* $bytevector-s64l-set!:                 syslib bytevectors accessors 64-bit.
                                                              (line  36)
* $bytevector-s64n-ref:                  syslib bytevectors accessors 64-bit.
                                                              (line  43)
* $bytevector-s64n-set!:                 syslib bytevectors accessors 64-bit.
                                                              (line  44)
* $bytevector-s8-max:                    syslib bytevectors comparison.
                                                              (line  35)
* $bytevector-s8-min:                    syslib bytevectors comparison.
                                                              (line  36)
* $bytevector-s8-ref:                    syslib bytevectors accessors 8-bit.
                                                              (line  14)
* $bytevector-s8-set!:                   syslib bytevectors accessors 8-bit.
                                                              (line  19)
* $bytevector-s8<:                       syslib bytevectors comparison.
                                                              (line  22)
* $bytevector-s8<=:                      syslib bytevectors comparison.
                                                              (line  24)
* $bytevector-s8>:                       syslib bytevectors comparison.
                                                              (line  23)
* $bytevector-s8>=:                      syslib bytevectors comparison.
                                                              (line  25)
* $bytevector-self-copy-backwards!/count: syslib bytevectors copying.
                                                              (line  51)
* $bytevector-self-copy-forwards!/count: syslib bytevectors copying.
                                                              (line  43)
* $bytevector-set!:                      syslib bytevectors accessors 8-bit.
                                                              (line  17)
* $bytevector-total-length:              syslib bytevectors concatenating.
                                                              (line   6)
* $bytevector-u16-ref:                   syslib bytevectors accessors 16-bit.
                                                              (line  46)
* $bytevector-u16-set!:                  syslib bytevectors accessors 16-bit.
                                                              (line  47)
* $bytevector-u16b-ref:                  syslib bytevectors accessors 16-bit.
                                                              (line  26)
* $bytevector-u16b-set!:                 syslib bytevectors accessors 16-bit.
                                                              (line  27)
* $bytevector-u16l-ref:                  syslib bytevectors accessors 16-bit.
                                                              (line  22)
* $bytevector-u16l-set!:                 syslib bytevectors accessors 16-bit.
                                                              (line  23)
* $bytevector-u16n-ref:                  syslib bytevectors accessors 16-bit.
                                                              (line  30)
* $bytevector-u16n-set!:                 syslib bytevectors accessors 16-bit.
                                                              (line  31)
* $bytevector-u32-ref:                   syslib bytevectors accessors 32-bit.
                                                              (line  47)
* $bytevector-u32-set!:                  syslib bytevectors accessors 32-bit.
                                                              (line  48)
* $bytevector-u32b-ref:                  syslib bytevectors accessors 32-bit.
                                                              (line  27)
* $bytevector-u32b-set!:                 syslib bytevectors accessors 32-bit.
                                                              (line  28)
* $bytevector-u32l-ref:                  syslib bytevectors accessors 32-bit.
                                                              (line  23)
* $bytevector-u32l-set!:                 syslib bytevectors accessors 32-bit.
                                                              (line  24)
* $bytevector-u32n-ref:                  syslib bytevectors accessors 32-bit.
                                                              (line  31)
* $bytevector-u32n-set!:                 syslib bytevectors accessors 32-bit.
                                                              (line  32)
* $bytevector-u64-ref:                   syslib bytevectors accessors 64-bit.
                                                              (line  47)
* $bytevector-u64-set!:                  syslib bytevectors accessors 64-bit.
                                                              (line  48)
* $bytevector-u64b-ref:                  syslib bytevectors accessors 64-bit.
                                                              (line  27)
* $bytevector-u64b-set!:                 syslib bytevectors accessors 64-bit.
                                                              (line  28)
* $bytevector-u64l-ref:                  syslib bytevectors accessors 64-bit.
                                                              (line  23)
* $bytevector-u64l-set!:                 syslib bytevectors accessors 64-bit.
                                                              (line  24)
* $bytevector-u64n-ref:                  syslib bytevectors accessors 64-bit.
                                                              (line  31)
* $bytevector-u64n-set!:                 syslib bytevectors accessors 64-bit.
                                                              (line  32)
* $bytevector-u8-max:                    syslib bytevectors comparison.
                                                              (line  30)
* $bytevector-u8-min:                    syslib bytevectors comparison.
                                                              (line  31)
* $bytevector-u8-ref:                    syslib bytevectors accessors 8-bit.
                                                              (line  11)
* $bytevector-u8-set!:                   syslib bytevectors accessors 8-bit.
                                                              (line  18)
* $bytevector-u8<:                       syslib bytevectors comparison.
                                                              (line  14)
* $bytevector-u8<=:                      syslib bytevectors comparison.
                                                              (line  16)
* $bytevector-u8>:                       syslib bytevectors comparison.
                                                              (line  15)
* $bytevector-u8>=:                      syslib bytevectors comparison.
                                                              (line  17)
* $bytevector=:                          syslib bytevectors comparison.
                                                              (line   6)
* $car:                                  syslib pairs.        (line  10)
* $cbrt-bignum:                          syslib numerics cbrt.
                                                              (line  10)
* $cbrt-cflonum:                         syslib numerics cbrt.
                                                              (line  26)
* $cbrt-compnum:                         syslib numerics cbrt.
                                                              (line  22)
* $cbrt-fixnum:                          syslib numerics cbrt.
                                                              (line   6)
* $cbrt-flonum:                          syslib numerics cbrt.
                                                              (line  18)
* $cbrt-ratnum:                          syslib numerics cbrt.
                                                              (line  14)
* $cdr:                                  syslib pairs.        (line  13)
* $ceiling-bignum:                       syslib numerics ceiling.
                                                              (line  10)
* $ceiling-fixnum:                       syslib numerics ceiling.
                                                              (line   6)
* $ceiling-flonum:                       syslib numerics ceiling.
                                                              (line  14)
* $ceiling-ratnum:                       syslib numerics ceiling.
                                                              (line  17)
* $cflonum-hash:                         syslib hashtables.   (line 148)
* $cflonum-imag:                         syslib cflonums.     (line  19)
* $cflonum-real:                         syslib cflonums.     (line  16)
* $char!=:                               syslib chars.        (line  17)
* $char->fixnum:                         syslib fixnums.      (line 260)
* $char->fixnum <1>:                     syslib chars.        (line  43)
* $char-ci-hash:                         syslib hashtables.   (line 130)
* $char-hash:                            syslib hashtables.   (line 129)
* $char<:                                syslib chars.        (line  21)
* $char<=:                               syslib chars.        (line  24)
* $char=:                                syslib chars.        (line  14)
* $char>:                                syslib chars.        (line  27)
* $char>=:                               syslib chars.        (line  30)
* $chmax:                                syslib chars.        (line  34)
* $chmin:                                syslib chars.        (line  33)
* $closure-code:                         syslib closures.     (line  10)
* $code->closure:                        syslib codes unsafe. (line  26)
* $code-annotation:                      syslib codes unsafe. (line  22)
* $code-freevars:                        syslib codes unsafe. (line  10)
* $code-ref:                             syslib codes unsafe. (line  29)
* $code-reloc-vector:                    syslib codes unsafe. (line  14)
* $code-set!:                            syslib codes unsafe. (line  32)
* $code-size:                            syslib codes unsafe. (line  18)
* $complex-conjugate-cflonum:            syslib numerics conjugate.
                                                              (line   9)
* $complex-conjugate-compnum:            syslib numerics conjugate.
                                                              (line   6)
* $compnum->cflonum:                     syslib compnums.     (line  27)
* $compnum-hash:                         syslib hashtables.   (line 151)
* $compnum-imag:                         syslib compnums.     (line  24)
* $compnum-real:                         syslib compnums.     (line  21)
* $cos-bignum:                           syslib numerics cos. (line   9)
* $cos-cflonum:                          syslib numerics cos. (line  19)
* $cos-compnum:                          syslib numerics cos. (line  22)
* $cos-fixnum:                           syslib numerics cos. (line   6)
* $cos-flonum:                           syslib numerics cos. (line  15)
* $cos-ratnum:                           syslib numerics cos. (line  12)
* $cosh-bignum:                          syslib numerics cosh.
                                                              (line   9)
* $cosh-cflonum:                         syslib numerics cosh.
                                                              (line  22)
* $cosh-compnum:                         syslib numerics cosh.
                                                              (line  19)
* $cosh-fixnum:                          syslib numerics cosh.
                                                              (line   6)
* $cosh-flonum:                          syslib numerics cosh.
                                                              (line  15)
* $cosh-ratnum:                          syslib numerics cosh.
                                                              (line  12)
* $cpref:                                syslib closures.     (line  13)
* $cube-bignum:                          syslib numerics cube.
                                                              (line  13)
* $cube-cflonum:                         syslib numerics cube.
                                                              (line  23)
* $cube-compnum:                         syslib numerics cube.
                                                              (line  19)
* $cube-fixnum:                          syslib numerics cube.
                                                              (line   9)
* $cube-ratnum:                          syslib numerics cube.
                                                              (line  16)
* $data->transcoder:                     syslib transcoders.  (line  10)
* $denominator-bignum:                   syslib numerics denominator.
                                                              (line   9)
* $denominator-fixnum:                   syslib numerics denominator.
                                                              (line   6)
* $denominator-flonum:                   syslib numerics denominator.
                                                              (line  12)
* $denominator-ratnum:                   syslib numerics denominator.
                                                              (line  16)
* $div-bignum-bignum:                    syslib numerics div. (line  81)
* $div-bignum-cflonum:                   syslib numerics div. (line  95)
* $div-bignum-compnum:                   syslib numerics div. (line  92)
* $div-bignum-fixnum:                    syslib numerics div. (line  77)
* $div-bignum-flonum:                    syslib numerics div. (line  85)
* $div-bignum-number:                    syslib numerics div. (line  15)
* $div-bignum-ratnum:                    syslib numerics div. (line  88)
* $div-cflonum-bignum:                   syslib numerics div. (line 170)
* $div-cflonum-cflonum:                  syslib numerics div. (line 182)
* $div-cflonum-compnum:                  syslib numerics div. (line 179)
* $div-cflonum-fixnum:                   syslib numerics div. (line 167)
* $div-cflonum-flonum:                   syslib numerics div. (line 176)
* $div-cflonum-number:                   syslib numerics div. (line  27)
* $div-cflonum-ratnum:                   syslib numerics div. (line 173)
* $div-compnum-bignum:                   syslib numerics div. (line 149)
* $div-compnum-cflonum:                  syslib numerics div. (line 161)
* $div-compnum-compnum:                  syslib numerics div. (line 155)
* $div-compnum-fixnum:                   syslib numerics div. (line 146)
* $div-compnum-flonum:                   syslib numerics div. (line 158)
* $div-compnum-number:                   syslib numerics div. (line  24)
* $div-compnum-ratnum:                   syslib numerics div. (line 152)
* $div-fixnum-bignum:                    syslib numerics div. (line  58)
* $div-fixnum-cflonum:                   syslib numerics div. (line  71)
* $div-fixnum-compnum:                   syslib numerics div. (line  68)
* $div-fixnum-fixnum:                    syslib numerics div. (line  54)
* $div-fixnum-flonum:                    syslib numerics div. (line  61)
* $div-fixnum-number:                    syslib numerics div. (line  12)
* $div-fixnum-ratnum:                    syslib numerics div. (line  64)
* $div-flonum-bignum:                    syslib numerics div. (line 104)
* $div-flonum-cflonum:                   syslib numerics div. (line 116)
* $div-flonum-compnum:                   syslib numerics div. (line 113)
* $div-flonum-fixnum:                    syslib numerics div. (line 101)
* $div-flonum-flonum:                    syslib numerics div. (line 107)
* $div-flonum-number:                    syslib numerics div. (line  18)
* $div-flonum-ratnum:                    syslib numerics div. (line 110)
* $div-number-bignum:                    syslib numerics div. (line  36)
* $div-number-cflonum:                   syslib numerics div. (line  48)
* $div-number-compnum:                   syslib numerics div. (line  45)
* $div-number-fixnum:                    syslib numerics div. (line  33)
* $div-number-flonum:                    syslib numerics div. (line  39)
* $div-number-number:                    syslib numerics div. (line   6)
* $div-number-ratnum:                    syslib numerics div. (line  42)
* $div-ratnum-bignum:                    syslib numerics div. (line 126)
* $div-ratnum-cflonum:                   syslib numerics div. (line 140)
* $div-ratnum-compnum:                   syslib numerics div. (line 137)
* $div-ratnum-fixnum:                    syslib numerics div. (line 122)
* $div-ratnum-flonum:                    syslib numerics div. (line 130)
* $div-ratnum-number:                    syslib numerics div. (line  21)
* $div-ratnum-ratnum:                    syslib numerics div. (line 133)
* $enum-set-hash:                        syslib hashtables.   (line 157)
* $exact-bignum:                         syslib numerics exact.
                                                              (line   9)
* $exact-cflonum:                        syslib numerics exact.
                                                              (line  24)
* $exact-compnum:                        syslib numerics exact.
                                                              (line  19)
* $exact-fixnum:                         syslib numerics exact.
                                                              (line   6)
* $exact-flonum:                         syslib numerics exact.
                                                              (line  12)
* $exact-integer-hash:                   syslib hashtables.   (line 139)
* $exact-integer-sqrt-bignum:            syslib numerics sqrt.
                                                              (line  75)
* $exact-integer-sqrt-fixnum:            syslib numerics sqrt.
                                                              (line  71)
* $exact-ratnum:                         syslib numerics exact.
                                                              (line  16)
* $exp-bignum:                           syslib numerics exp. (line   9)
* $exp-cflonum:                          syslib numerics exp. (line  22)
* $exp-compnum:                          syslib numerics exp. (line  19)
* $exp-fixnum:                           syslib numerics exp. (line   6)
* $exp-flonum:                           syslib numerics exp. (line  15)
* $exp-ratnum:                           syslib numerics exp. (line  12)
* $expt-bignum-bignum:                   syslib numerics expt bignums.
                                                              (line  10)
* $expt-bignum-cflonum:                  syslib numerics expt bignums.
                                                              (line  23)
* $expt-bignum-compnum:                  syslib numerics expt bignums.
                                                              (line  19)
* $expt-bignum-fixnum:                   syslib numerics expt bignums.
                                                              (line   6)
* $expt-bignum-flonum:                   syslib numerics expt bignums.
                                                              (line  16)
* $expt-bignum-negative-fixnum:          syslib numerics expt nega.
                                                              (line  14)
* $expt-bignum-positive-fixnum:          syslib numerics expt posi.
                                                              (line  14)
* $expt-bignum-ratnum:                   syslib numerics expt bignums.
                                                              (line  13)
* $expt-cflonum-bignum:                  syslib numerics expt cflonums.
                                                              (line   9)
* $expt-cflonum-cflonum:                 syslib numerics expt cflonums.
                                                              (line  21)
* $expt-cflonum-compnum:                 syslib numerics expt cflonums.
                                                              (line  18)
* $expt-cflonum-fixnum:                  syslib numerics expt cflonums.
                                                              (line   6)
* $expt-cflonum-flonum:                  syslib numerics expt cflonums.
                                                              (line  15)
* $expt-cflonum-negative-fixnum:         syslib numerics expt nega.
                                                              (line  30)
* $expt-cflonum-positive-fixnum:         syslib numerics expt posi.
                                                              (line  30)
* $expt-cflonum-ratnum:                  syslib numerics expt cflonums.
                                                              (line  12)
* $expt-cflonum-zero-fixnum:             syslib numerics expt zero.
                                                              (line  20)
* $expt-compnum-bignum:                  syslib numerics expt compnums.
                                                              (line   9)
* $expt-compnum-cflonum:                 syslib numerics expt compnums.
                                                              (line  21)
* $expt-compnum-compnum:                 syslib numerics expt compnums.
                                                              (line  18)
* $expt-compnum-fixnum:                  syslib numerics expt compnums.
                                                              (line   6)
* $expt-compnum-flonum:                  syslib numerics expt compnums.
                                                              (line  15)
* $expt-compnum-negative-fixnum:         syslib numerics expt nega.
                                                              (line  26)
* $expt-compnum-positive-fixnum:         syslib numerics expt posi.
                                                              (line  26)
* $expt-compnum-ratnum:                  syslib numerics expt compnums.
                                                              (line  12)
* $expt-compnum-zero-fixnum:             syslib numerics expt zero.
                                                              (line  16)
* $expt-fixnum-bignum:                   syslib numerics expt fixnums.
                                                              (line   9)
* $expt-fixnum-cflonum:                  syslib numerics expt fixnums.
                                                              (line  21)
* $expt-fixnum-compnum:                  syslib numerics expt fixnums.
                                                              (line  18)
* $expt-fixnum-fixnum:                   syslib numerics expt fixnums.
                                                              (line   6)
* $expt-fixnum-flonum:                   syslib numerics expt fixnums.
                                                              (line  15)
* $expt-fixnum-negative-fixnum:          syslib numerics expt nega.
                                                              (line  10)
* $expt-fixnum-positive-fixnum:          syslib numerics expt posi.
                                                              (line  10)
* $expt-fixnum-ratnum:                   syslib numerics expt fixnums.
                                                              (line  12)
* $expt-fixnum-zero-fixnum:              syslib numerics expt zero.
                                                              (line  10)
* $expt-flonum-bignum:                   syslib numerics expt flonums.
                                                              (line  10)
* $expt-flonum-cflonum:                  syslib numerics expt flonums.
                                                              (line  24)
* $expt-flonum-compnum:                  syslib numerics expt flonums.
                                                              (line  20)
* $expt-flonum-fixnum:                   syslib numerics expt flonums.
                                                              (line   6)
* $expt-flonum-flonum:                   syslib numerics expt flonums.
                                                              (line  16)
* $expt-flonum-negative-fixnum:          syslib numerics expt nega.
                                                              (line  22)
* $expt-flonum-positive-fixnum:          syslib numerics expt posi.
                                                              (line  22)
* $expt-flonum-ratnum:                   syslib numerics expt flonums.
                                                              (line  13)
* $expt-flonum-zero-fixnum:              syslib numerics expt zero.
                                                              (line  13)
* $expt-number-bignum:                   syslib numerics expt any.
                                                              (line  10)
* $expt-number-cflonum:                  syslib numerics expt any.
                                                              (line  26)
* $expt-number-compnum:                  syslib numerics expt any.
                                                              (line  22)
* $expt-number-fixnum:                   syslib numerics expt any.
                                                              (line   6)
* $expt-number-flonum:                   syslib numerics expt any.
                                                              (line  14)
* $expt-number-negative-fixnum:          syslib numerics expt nega.
                                                              (line   6)
* $expt-number-positive-fixnum:          syslib numerics expt posi.
                                                              (line   6)
* $expt-number-ratnum:                   syslib numerics expt any.
                                                              (line  18)
* $expt-number-zero-fixnum:              syslib numerics expt zero.
                                                              (line   6)
* $expt-ratnum-bignum:                   syslib numerics expt ratnums.
                                                              (line  10)
* $expt-ratnum-cflonum:                  syslib numerics expt ratnums.
                                                              (line  24)
* $expt-ratnum-compnum:                  syslib numerics expt ratnums.
                                                              (line  20)
* $expt-ratnum-fixnum:                   syslib numerics expt ratnums.
                                                              (line   6)
* $expt-ratnum-flonum:                   syslib numerics expt ratnums.
                                                              (line  17)
* $expt-ratnum-negative-fixnum:          syslib numerics expt nega.
                                                              (line  18)
* $expt-ratnum-positive-fixnum:          syslib numerics expt posi.
                                                              (line  18)
* $expt-ratnum-ratnum:                   syslib numerics expt ratnums.
                                                              (line  13)
* $fill-vector-from-list!:               syslib vectors conversion.
                                                              (line  10)
* $fixnum->char:                         syslib fixnums.      (line 257)
* $fixnum->char <1>:                     syslib chars.        (line  40)
* $fixnum->flonum:                       syslib fixnums.      (line 263)
* $fixnum->flonum <1>:                   syslib flonums conversion.
                                                              (line  17)
* $fixnum->string:                       syslib fixnums.      (line 253)
* $fixnum->string <1>:                   syslib strings.      (line 116)
* $fixnum-hash:                          syslib hashtables.   (line 133)
* $fl!=:                                 syslib flonums comparison.
                                                              (line  13)
* $fl*:                                  syslib flonums arithmetic.
                                                              (line   7)
* $fl+:                                  syslib flonums arithmetic.
                                                              (line   6)
* $fl-:                                  syslib flonums arithmetic.
                                                              (line  11)
* $fl- <1>:                              syslib flonums arithmetic.
                                                              (line  12)
* $fl/:                                  syslib flonums arithmetic.
                                                              (line   8)
* $fl<:                                  syslib flonums comparison.
                                                              (line   7)
* $fl<=:                                 syslib flonums comparison.
                                                              (line   8)
* $fl=:                                  syslib flonums comparison.
                                                              (line   6)
* $fl>:                                  syslib flonums comparison.
                                                              (line   9)
* $fl>=:                                 syslib flonums comparison.
                                                              (line  10)
* $flabs:                                syslib flonums parts.
                                                              (line  10)
* $flacos:                               syslib flonums trigon.
                                                              (line  12)
* $flacosh:                              syslib flonums hyperbol.
                                                              (line  12)
* $flasin:                               syslib flonums trigon.
                                                              (line  11)
* $flasinh:                              syslib flonums hyperbol.
                                                              (line  11)
* $flatan:                               syslib flonums trigon.
                                                              (line  13)
* $flatan <1>:                           syslib flonums trigon.
                                                              (line  14)
* $flatan2:                              syslib flonums trigon.
                                                              (line  20)
* $flatanh:                              syslib flonums hyperbol.
                                                              (line  13)
* $flcbrt:                               syslib flonums log.  (line   6)
* $flceiling:                            syslib flonums rounding.
                                                              (line  13)
* $flcos:                                syslib flonums trigon.
                                                              (line   7)
* $flcosh:                               syslib flonums hyperbol.
                                                              (line   7)
* $flcube:                               syslib flonums power.
                                                              (line  15)
* $fldenominator:                        syslib flonums parts.
                                                              (line   7)
* $fldiv:                                syslib flonums arithmetic.
                                                              (line  16)
* $fldiv-and-mod:                        syslib flonums arithmetic.
                                                              (line  20)
* $fldiv0:                               syslib flonums arithmetic.
                                                              (line  18)
* $fldiv0-and-mod0:                      syslib flonums arithmetic.
                                                              (line  21)
* $fleven?:                              syslib flonums predicates.
                                                              (line  44)
* $flexact:                              syslib flonums conversion.
                                                              (line  11)
* $flexp:                                syslib flonums log.  (line   9)
* $flexpm1:                              syslib flonums log.  (line  26)
* $flexpt:                               syslib flonums power.
                                                              (line   6)
* $flfloor:                              syslib flonums rounding.
                                                              (line  10)
* $flhypot:                              syslib flonums log.  (line  32)
* $flinfinite?:                          syslib flonums predicates.
                                                              (line  10)
* $fllog:                                syslib flonums log.  (line  12)
* $fllog <1>:                            syslib flonums log.  (line  13)
* $fllog1p:                              syslib flonums log.  (line  29)
* $fllog2:                               syslib flonums log.  (line  23)
* $flmax:                                syslib flonums comparison.
                                                              (line  19)
* $flmin:                                syslib flonums comparison.
                                                              (line  22)
* $flmod:                                syslib flonums arithmetic.
                                                              (line  17)
* $flmod0:                               syslib flonums arithmetic.
                                                              (line  19)
* $flnan?:                               syslib flonums predicates.
                                                              (line   6)
* $flnegative?:                          syslib flonums predicates.
                                                              (line  29)
* $flnonnegative?:                       syslib flonums predicates.
                                                              (line  40)
* $flnonpositive?:                       syslib flonums predicates.
                                                              (line  36)
* $flnumerator:                          syslib flonums parts.
                                                              (line   6)
* $flodd?:                               syslib flonums predicates.
                                                              (line  47)
* $flonum->maybe-exact:                  syslib flonums conversion.
                                                              (line   6)
* $flonum-hash:                          syslib hashtables.   (line 145)
* $flonum-integer?:                      syslib flonums predicates.
                                                              (line  50)
* $flonum-rational?:                     syslib flonums predicates.
                                                              (line  53)
* $flonum-sbe:                           syslib flonums inspect.
                                                              (line  24)
* $flonum-set!:                          syslib flonums inspect.
                                                              (line  20)
* $flonum-u8-ref:                        syslib flonums inspect.
                                                              (line   6)
* $floor-bignum:                         syslib numerics floor.
                                                              (line  10)
* $floor-fixnum:                         syslib numerics floor.
                                                              (line   6)
* $floor-flonum:                         syslib numerics floor.
                                                              (line  14)
* $floor-ratnum:                         syslib numerics floor.
                                                              (line  17)
* $flpositive?:                          syslib flonums predicates.
                                                              (line  22)
* $flround:                              syslib flonums rounding.
                                                              (line   6)
* $flsin:                                syslib flonums trigon.
                                                              (line   6)
* $flsinh:                               syslib flonums hyperbol.
                                                              (line   6)
* $flsqrt:                               syslib flonums power.
                                                              (line   9)
* $flsquare:                             syslib flonums power.
                                                              (line  12)
* $fltan:                                syslib flonums trigon.
                                                              (line   8)
* $fltanh:                               syslib flonums hyperbol.
                                                              (line   8)
* $fltruncate:                           syslib flonums rounding.
                                                              (line  16)
* $flzero?:                              syslib flonums predicates.
                                                              (line  14)
* $flzero?/negative:                     syslib flonums predicates.
                                                              (line  19)
* $flzero?/positive:                     syslib flonums predicates.
                                                              (line  18)
* $fx*:                                  syslib fixnums.      (line  89)
* $fx+:                                  syslib fixnums.      (line  69)
* $fx-:                                  syslib fixnums.      (line  74)
* $fx- <1>:                              syslib fixnums.      (line  75)
* $fx<:                                  syslib fixnums.      (line  41)
* $fx<=:                                 syslib fixnums.      (line  44)
* $fx=:                                  syslib fixnums.      (line  35)
* $fx=!:                                 syslib fixnums.      (line  38)
* $fx>:                                  syslib fixnums.      (line  47)
* $fx>=:                                 syslib fixnums.      (line  50)
* $fxabs:                                syslib fixnums.      (line 194)
* $fxadd1:                               syslib fixnums.      (line  60)
* $fxand:                                syslib fixnums.      (line 208)
* $fxbit-field:                          syslib fixnums.      (line 247)
* $fxcopy-bit:                           syslib fixnums.      (line 238)
* $fxcopy-bit-field:                     syslib fixnums.      (line 241)
* $fxdiv:                                syslib fixnums.      (line  95)
* $fxdiv-and-mod:                        syslib fixnums.      (line  99)
* $fxdiv0:                               syslib fixnums.      (line  96)
* $fxdiv0-and-mod0:                      syslib fixnums.      (line 100)
* $fxeven?:                              syslib fixnums.      (line  28)
* $fxif:                                 syslib fixnums.      (line 219)
* $fxinthash:                            syslib fixnums.      (line 270)
* $fxior:                                syslib fixnums.      (line 211)
* $fxmax:                                syslib fixnums.      (line  53)
* $fxmin:                                syslib fixnums.      (line  54)
* $fxmod:                                syslib fixnums.      (line  97)
* $fxmod0:                               syslib fixnums.      (line  98)
* $fxmodulo:                             syslib fixnums.      (line 152)
* $fxnegative?:                          syslib fixnums.      (line  17)
* $fxnonnegative?:                       syslib fixnums.      (line  21)
* $fxnonpositive?:                       syslib fixnums.      (line  20)
* $fxnot:                                syslib fixnums.      (line 205)
* $fxodd?:                               syslib fixnums.      (line  29)
* $fxpositive?:                          syslib fixnums.      (line  16)
* $fxquotient:                           syslib fixnums.      (line 141)
* $fxrotate-bit-field:                   syslib fixnums.      (line 244)
* $fxsign:                               syslib fixnums.      (line  24)
* $fxsll:                                syslib fixnums.      (line 230)
* $fxsra:                                syslib fixnums.      (line 234)
* $fxsub1:                               syslib fixnums.      (line  63)
* $fxxor:                                syslib fixnums.      (line 215)
* $fxzero?:                              syslib fixnums.      (line  13)
* $gcd-bignum-bignum:                    syslib numerics gcd. (line  66)
* $gcd-bignum-fixnum:                    syslib numerics gcd. (line  62)
* $gcd-bignum-flonum:                    syslib numerics gcd. (line  70)
* $gcd-bignum-number:                    syslib numerics gcd. (line  21)
* $gcd-fixnum-bignum:                    syslib numerics gcd. (line  51)
* $gcd-fixnum-fixnum:                    syslib numerics gcd. (line  47)
* $gcd-fixnum-flonum:                    syslib numerics gcd. (line  55)
* $gcd-fixnum-number:                    syslib numerics gcd. (line  17)
* $gcd-flonum-bignum:                    syslib numerics gcd. (line  81)
* $gcd-flonum-fixnum:                    syslib numerics gcd. (line  77)
* $gcd-flonum-flonum:                    syslib numerics gcd. (line  85)
* $gcd-flonum-number:                    syslib numerics gcd. (line  25)
* $gcd-number:                           syslib numerics gcd. (line   6)
* $gcd-number-bignum:                    syslib numerics gcd. (line  36)
* $gcd-number-fixnum:                    syslib numerics gcd. (line  32)
* $gcd-number-flonum:                    syslib numerics gcd. (line  40)
* $gcd-number-number:                    syslib numerics gcd. (line  10)
* $getprop:                              syslib symbols plists.
                                                              (line  17)
* $hashtable-type-descriptor:            syslib hashtables.   (line 174)
* $hashtable-type-descriptor-set!:       syslib hashtables.   (line 175)
* $inexact-bignum:                       syslib numerics inexact.
                                                              (line   9)
* $inexact-cflonum:                      syslib numerics inexact.
                                                              (line  21)
* $inexact-compnum:                      syslib numerics inexact.
                                                              (line  18)
* $inexact-fixnum:                       syslib numerics inexact.
                                                              (line   6)
* $inexact-flonum:                       syslib numerics inexact.
                                                              (line  12)
* $inexact-ratnum:                       syslib numerics inexact.
                                                              (line  15)
* $init-symbol-function!:                syslib symbols value.
                                                              (line  40)
* $interned-strings:                     syslib strings.      (line 188)
* $inv-bignum:                           syslib numerics inv. (line  15)
* $inv-cflonum:                          syslib numerics inv. (line  30)
* $inv-compnum:                          syslib numerics inv. (line  26)
* $inv-fixnum:                           syslib numerics inv. (line  11)
* $inv-flonum:                           syslib numerics inv. (line  18)
* $inv-number:                           syslib numerics inv. (line   8)
* $inv-ratnum:                           syslib numerics inv. (line  21)
* $ipair-hash:                           syslib hashtables.   (line 126)
* $keyword->string:                      syslib keywords.     (line  14)
* $keyword->symbol:                      syslib keywords.     (line  11)
* $keyword-hash:                         syslib keywords.     (line  22)
* $keyword=?:                            syslib keywords.     (line  17)
* $latin1->string:                       syslib strings.      (line 121)
* $latin1-encoded-bytevector?:           syslib bytevectors encodings.
                                                              (line  16)
* $latin1-encoded-string?:               syslib strings.      (line 157)
* $lcm-bignum-bignum:                    syslib numerics lcm. (line  66)
* $lcm-bignum-fixnum:                    syslib numerics lcm. (line  62)
* $lcm-bignum-flonum:                    syslib numerics lcm. (line  70)
* $lcm-bignum-number:                    syslib numerics lcm. (line  21)
* $lcm-fixnum-bignum:                    syslib numerics lcm. (line  51)
* $lcm-fixnum-fixnum:                    syslib numerics lcm. (line  47)
* $lcm-fixnum-flonum:                    syslib numerics lcm. (line  55)
* $lcm-fixnum-number:                    syslib numerics lcm. (line  17)
* $lcm-flonum-bignum:                    syslib numerics lcm. (line  81)
* $lcm-flonum-fixnum:                    syslib numerics lcm. (line  77)
* $lcm-flonum-flonum:                    syslib numerics lcm. (line  85)
* $lcm-flonum-number:                    syslib numerics lcm. (line  25)
* $lcm-number:                           syslib numerics lcm. (line   6)
* $lcm-number-bignum:                    syslib numerics lcm. (line  36)
* $lcm-number-fixnum:                    syslib numerics lcm. (line  32)
* $lcm-number-flonum:                    syslib numerics lcm. (line  40)
* $lcm-number-number:                    syslib numerics lcm. (line  10)
* $length:                               syslib lists.        (line   9)
* $list-hash:                            syslib hashtables.   (line  99)
* $list-hash <1>:                        syslib hashtables.   (line 100)
* $log-bignum:                           syslib numerics log. (line  10)
* $log-cflonum:                          syslib numerics log. (line  28)
* $log-compnum:                          syslib numerics log. (line  24)
* $log-fixnum:                           syslib numerics log. (line   6)
* $log-flonum:                           syslib numerics log. (line  14)
* $log-ratnum:                           syslib numerics log. (line  20)
* $log-symbol-table-status:              syslib symbols table.
                                                              (line  12)
* $magnitude-bignum:                     syslib numerics magnitude.
                                                              (line   9)
* $magnitude-cflonum:                    syslib numerics magnitude.
                                                              (line  21)
* $magnitude-compnum:                    syslib numerics magnitude.
                                                              (line  18)
* $magnitude-fixnum:                     syslib numerics magnitude.
                                                              (line   6)
* $magnitude-flonum:                     syslib numerics magnitude.
                                                              (line  15)
* $magnitude-ratnum:                     syslib numerics magnitude.
                                                              (line  12)
* $make-annotated-procedure:             syslib closures.     (line  38)
* $make-bytevector:                      syslib bytevectors constructors.
                                                              (line   6)
* $make-cflonum:                         syslib cflonums.     (line  11)
* $make-clean-struct:                    syslib structs unsafe.
                                                              (line  32)
* $make-clean-vector:                    syslib vectors makers.
                                                              (line  19)
* $make-compnum:                         syslib compnums.     (line  11)
* $make-flonum:                          syslib flonums constr.
                                                              (line   6)
* $make-port:                            syslib ports.        (line  13)
* $make-ratnum:                          syslib ratnums.      (line  11)
* $make-rectangular:                     syslib compnums.     (line  16)
* $make-string:                          syslib strings.      (line  14)
* $make-struct:                          syslib structs unsafe.
                                                              (line  22)
* $make-symbol:                          syslib symbols constructors.
                                                              (line   6)
* $make-tcbucket:                        syslib tcbuckets.    (line  12)
* $make-vector:                          syslib vectors makers.
                                                              (line  10)
* $max-bignum-bignum:                    syslib numerics max. (line  59)
* $max-bignum-fixnum:                    syslib numerics max. (line  56)
* $max-bignum-flonum:                    syslib numerics max. (line  65)
* $max-bignum-number:                    syslib numerics max. (line  29)
* $max-bignum-ratnum:                    syslib numerics max. (line  62)
* $max-fixnum-bignum:                    syslib numerics max. (line  44)
* $max-fixnum-fixnum:                    syslib numerics max. (line  41)
* $max-fixnum-flonum:                    syslib numerics max. (line  47)
* $max-fixnum-number:                    syslib numerics max. (line  26)
* $max-fixnum-ratnum:                    syslib numerics max. (line  50)
* $max-flonum-bignum:                    syslib numerics max. (line  74)
* $max-flonum-fixnum:                    syslib numerics max. (line  71)
* $max-flonum-flonum:                    syslib numerics max. (line  80)
* $max-flonum-number:                    syslib numerics max. (line  32)
* $max-flonum-ratnum:                    syslib numerics max. (line  77)
* $max-number-bignum:                    syslib numerics max. (line  14)
* $max-number-fixnum:                    syslib numerics max. (line  11)
* $max-number-flonum:                    syslib numerics max. (line  20)
* $max-number-ratnum:                    syslib numerics max. (line  17)
* $max-ratnum-bignum:                    syslib numerics max. (line  89)
* $max-ratnum-fixnum:                    syslib numerics max. (line  86)
* $max-ratnum-flonum:                    syslib numerics max. (line  95)
* $max-ratnum-number:                    syslib numerics max. (line  35)
* $max-ratnum-ratnum:                    syslib numerics max. (line  92)
* $min-bignum-bignum:                    syslib numerics min. (line  59)
* $min-bignum-fixnum:                    syslib numerics min. (line  56)
* $min-bignum-flonum:                    syslib numerics min. (line  65)
* $min-bignum-number:                    syslib numerics min. (line  29)
* $min-bignum-ratnum:                    syslib numerics min. (line  62)
* $min-fixnum-bignum:                    syslib numerics min. (line  44)
* $min-fixnum-fixnum:                    syslib numerics min. (line  41)
* $min-fixnum-flonum:                    syslib numerics min. (line  47)
* $min-fixnum-number:                    syslib numerics min. (line  26)
* $min-fixnum-ratnum:                    syslib numerics min. (line  50)
* $min-flonum-bignum:                    syslib numerics min. (line  74)
* $min-flonum-fixnum:                    syslib numerics min. (line  71)
* $min-flonum-flonum:                    syslib numerics min. (line  80)
* $min-flonum-number:                    syslib numerics min. (line  32)
* $min-flonum-ratnum:                    syslib numerics min. (line  77)
* $min-number-bignum:                    syslib numerics min. (line  14)
* $min-number-fixnum:                    syslib numerics min. (line  11)
* $min-number-flonum:                    syslib numerics min. (line  20)
* $min-number-ratnum:                    syslib numerics min. (line  17)
* $min-ratnum-bignum:                    syslib numerics min. (line  89)
* $min-ratnum-fixnum:                    syslib numerics min. (line  86)
* $min-ratnum-flonum:                    syslib numerics min. (line  95)
* $min-ratnum-number:                    syslib numerics min. (line  35)
* $min-ratnum-ratnum:                    syslib numerics min. (line  92)
* $modulo-bignum-bignum:                 syslib numerics modulo.
                                                              (line  69)
* $modulo-bignum-fixnum:                 syslib numerics modulo.
                                                              (line  65)
* $modulo-bignum-flonum:                 syslib numerics modulo.
                                                              (line  73)
* $modulo-bignum-number:                 syslib numerics modulo.
                                                              (line  37)
* $modulo-fixnum-bignum:                 syslib numerics modulo.
                                                              (line  54)
* $modulo-fixnum-fixnum:                 syslib numerics modulo.
                                                              (line  50)
* $modulo-fixnum-flonum:                 syslib numerics modulo.
                                                              (line  58)
* $modulo-fixnum-number:                 syslib numerics modulo.
                                                              (line  32)
* $modulo-flonum-bignum:                 syslib numerics modulo.
                                                              (line  84)
* $modulo-flonum-fixnum:                 syslib numerics modulo.
                                                              (line  80)
* $modulo-flonum-flonum:                 syslib numerics modulo.
                                                              (line  88)
* $modulo-flonum-number:                 syslib numerics modulo.
                                                              (line  42)
* $modulo-number-bignum:                 syslib numerics modulo.
                                                              (line  19)
* $modulo-number-fixnum:                 syslib numerics modulo.
                                                              (line  14)
* $modulo-number-flonum:                 syslib numerics modulo.
                                                              (line  24)
* $mul-bignum-bignum:                    syslib numerics mul. (line  82)
* $mul-bignum-cflonum:                   syslib numerics mul. (line  95)
* $mul-bignum-compnum:                   syslib numerics mul. (line  91)
* $mul-bignum-fixnum:                    syslib numerics mul. (line  79)
* $mul-bignum-flonum:                    syslib numerics mul. (line  85)
* $mul-bignum-number:                    syslib numerics mul. (line  15)
* $mul-bignum-ratnum:                    syslib numerics mul. (line  88)
* $mul-cflonum-bignum:                   syslib numerics mul. (line 177)
* $mul-cflonum-cflonum:                  syslib numerics mul. (line 193)
* $mul-cflonum-compnum:                  syslib numerics mul. (line 189)
* $mul-cflonum-fixnum:                   syslib numerics mul. (line 173)
* $mul-cflonum-flonum:                   syslib numerics mul. (line 185)
* $mul-cflonum-number:                   syslib numerics mul. (line  27)
* $mul-cflonum-ratnum:                   syslib numerics mul. (line 181)
* $mul-compnum-bignum:                   syslib numerics mul. (line 151)
* $mul-compnum-cflonum:                  syslib numerics mul. (line 166)
* $mul-compnum-compnum:                  syslib numerics mul. (line 159)
* $mul-compnum-fixnum:                   syslib numerics mul. (line 147)
* $mul-compnum-flonum:                   syslib numerics mul. (line 163)
* $mul-compnum-number:                   syslib numerics mul. (line  24)
* $mul-compnum-ratnum:                   syslib numerics mul. (line 155)
* $mul-fixnum-bignum:                    syslib numerics mul. (line  58)
* $mul-fixnum-cflonum:                   syslib numerics mul. (line  72)
* $mul-fixnum-compnum:                   syslib numerics mul. (line  68)
* $mul-fixnum-fixnum:                    syslib numerics mul. (line  54)
* $mul-fixnum-flonum:                    syslib numerics mul. (line  62)
* $mul-fixnum-number:                    syslib numerics mul. (line  12)
* $mul-fixnum-ratnum:                    syslib numerics mul. (line  65)
* $mul-flonum-bignum:                    syslib numerics mul. (line 105)
* $mul-flonum-cflonum:                   syslib numerics mul. (line 117)
* $mul-flonum-compnum:                   syslib numerics mul. (line 114)
* $mul-flonum-fixnum:                    syslib numerics mul. (line 102)
* $mul-flonum-flonum:                    syslib numerics mul. (line 108)
* $mul-flonum-number:                    syslib numerics mul. (line  18)
* $mul-flonum-ratnum:                    syslib numerics mul. (line 111)
* $mul-number-bignum:                    syslib numerics mul. (line  36)
* $mul-number-cflonum:                   syslib numerics mul. (line  48)
* $mul-number-compnum:                   syslib numerics mul. (line  45)
* $mul-number-fixnum:                    syslib numerics mul. (line  33)
* $mul-number-flonum:                    syslib numerics mul. (line  39)
* $mul-number-number:                    syslib numerics mul. (line   6)
* $mul-number-ratnum:                    syslib numerics mul. (line  42)
* $mul-ratnum-bignum:                    syslib numerics mul. (line 127)
* $mul-ratnum-cflonum:                   syslib numerics mul. (line 140)
* $mul-ratnum-compnum:                   syslib numerics mul. (line 136)
* $mul-ratnum-fixnum:                    syslib numerics mul. (line 124)
* $mul-ratnum-flonum:                    syslib numerics mul. (line 130)
* $mul-ratnum-number:                    syslib numerics mul. (line  21)
* $mul-ratnum-ratnum:                    syslib numerics mul. (line 133)
* $neg-bignum:                           syslib numerics neg. (line  13)
* $neg-cflonum:                          syslib numerics neg. (line  26)
* $neg-compnum:                          syslib numerics neg. (line  23)
* $neg-fixnum:                           syslib numerics neg. (line   9)
* $neg-flonum:                           syslib numerics neg. (line  17)
* $neg-number:                           syslib numerics neg. (line   6)
* $neg-ratnum:                           syslib numerics neg. (line  20)
* $numerator-bignum:                     syslib numerics numerator.
                                                              (line   9)
* $numerator-fixnum:                     syslib numerics numerator.
                                                              (line   6)
* $numerator-flonum:                     syslib numerics numerator.
                                                              (line  12)
* $numerator-ratnum:                     syslib numerics numerator.
                                                              (line  16)
* $octets->string:                       syslib strings.      (line 128)
* $octets-encoded-bytevector?:           syslib bytevectors encodings.
                                                              (line   6)
* $octets-encoded-string?:               syslib strings.      (line 143)
* $pair-hash:                            syslib hashtables.   (line 125)
* $percent-encoded-bytevector?:          syslib bytevectors encodings.
                                                              (line  42)
* $percent-encoded-string?:              syslib strings.      (line 176)
* $pointer!=?:                           syslib pointers.     (line  16)
* $pointer-hash:                         syslib hashtables.   (line 160)
* $pointer-max:                          syslib pointers.     (line  28)
* $pointer-min:                          syslib pointers.     (line  29)
* $pointer<:                             syslib pointers.     (line  20)
* $pointer<=:                            syslib pointers.     (line  22)
* $pointer=:                             syslib pointers.     (line  13)
* $pointer>:                             syslib pointers.     (line  21)
* $pointer>=:                            syslib pointers.     (line  23)
* $port-attrs:                           syslib ports.        (line  31)
* $port-buffer:                          syslib ports.        (line  20)
* $port-close:                           syslib ports.        (line  27)
* $port-cookie:                          syslib ports.        (line  28)
* $port-get-position:                    syslib ports.        (line  25)
* $port-id:                              syslib ports.        (line  22)
* $port-index:                           syslib ports.        (line  18)
* $port-read!:                           syslib ports.        (line  23)
* $port-set-position!:                   syslib ports.        (line  26)
* $port-size:                            syslib ports.        (line  19)
* $port-tag:                             syslib ports.        (line  35)
* $port-transcoder:                      syslib ports.        (line  21)
* $port-write!:                          syslib ports.        (line  24)
* $promise-hash:                         syslib hashtables.   (line 163)
* $property-list:                        syslib symbols plists.
                                                              (line  24)
* $putprop:                              syslib symbols plists.
                                                              (line  10)
* $quotient+remainder-bignum-bignum:     syslib numerics quorem.
                                                              (line  94)
* $quotient+remainder-bignum-fixnum:     syslib numerics quorem.
                                                              (line  90)
* $quotient+remainder-bignum-flonum:     syslib numerics quorem.
                                                              (line  98)
* $quotient+remainder-bignum-number:     syslib numerics quorem.
                                                              (line  62)
* $quotient+remainder-fixnum-bignum:     syslib numerics quorem.
                                                              (line  79)
* $quotient+remainder-fixnum-fixnum:     syslib numerics quorem.
                                                              (line  75)
* $quotient+remainder-fixnum-flonum:     syslib numerics quorem.
                                                              (line  83)
* $quotient+remainder-fixnum-number:     syslib numerics quorem.
                                                              (line  57)
* $quotient+remainder-flonum-bignum:     syslib numerics quorem.
                                                              (line 109)
* $quotient+remainder-flonum-fixnum:     syslib numerics quorem.
                                                              (line 105)
* $quotient+remainder-flonum-flonum:     syslib numerics quorem.
                                                              (line 113)
* $quotient+remainder-flonum-number:     syslib numerics quorem.
                                                              (line  67)
* $quotient+remainder-number-bignum:     syslib numerics quorem.
                                                              (line  44)
* $quotient+remainder-number-fixnum:     syslib numerics quorem.
                                                              (line  39)
* $quotient+remainder-number-flonum:     syslib numerics quorem.
                                                              (line  49)
* $quotient-bignum-bignum:               syslib numerics quotient.
                                                              (line  69)
* $quotient-bignum-fixnum:               syslib numerics quotient.
                                                              (line  65)
* $quotient-bignum-flonum:               syslib numerics quotient.
                                                              (line  73)
* $quotient-bignum-number:               syslib numerics quotient.
                                                              (line  37)
* $quotient-fixnum-bignum:               syslib numerics quotient.
                                                              (line  54)
* $quotient-fixnum-fixnum:               syslib numerics quotient.
                                                              (line  50)
* $quotient-fixnum-flonum:               syslib numerics quotient.
                                                              (line  58)
* $quotient-fixnum-number:               syslib numerics quotient.
                                                              (line  32)
* $quotient-flonum-bignum:               syslib numerics quotient.
                                                              (line  84)
* $quotient-flonum-fixnum:               syslib numerics quotient.
                                                              (line  80)
* $quotient-flonum-flonum:               syslib numerics quotient.
                                                              (line  88)
* $quotient-flonum-number:               syslib numerics quotient.
                                                              (line  42)
* $quotient-number-bignum:               syslib numerics quotient.
                                                              (line  19)
* $quotient-number-fixnum:               syslib numerics quotient.
                                                              (line  14)
* $quotient-number-flonum:               syslib numerics quotient.
                                                              (line  24)
* $ratnum->flonum:                       syslib ratnums.      (line  34)
* $ratnum-den:                           syslib ratnums.      (line  31)
* $ratnum-hash:                          syslib hashtables.   (line 142)
* $ratnum-negative?:                     syslib ratnums.      (line  38)
* $ratnum-non-negative?:                 syslib ratnums.      (line  43)
* $ratnum-non-positive?:                 syslib ratnums.      (line  42)
* $ratnum-num:                           syslib ratnums.      (line  28)
* $ratnum-positive?:                     syslib ratnums.      (line  37)
* $record-and-rtd?:                      syslib records.      (line  22)
* $record-comparison-procedure:          syslib records.      (line  40)
* $record-constructor:                   syslib records.      (line  26)
* $record-destructor:                    syslib records.      (line  29)
* $record-equality-predicate:            syslib records.      (line  36)
* $record-hash:                          syslib hashtables.   (line 166)
* $record-hash-function:                 syslib records.      (line  44)
* $record-method-retriever:              syslib records.      (line  48)
* $record-printer:                       syslib records.      (line  32)
* $record-ref:                           syslib records.      (line  18)
* $record-rtd:                           syslib records.      (line  15)
* $record-type-comparison-procedure:     syslib records.      (line  65)
* $record-type-comparison-procedure-set!: syslib records.     (line  64)
* $record-type-destructor:               syslib records.      (line  53)
* $record-type-destructor-set!:          syslib records.      (line  52)
* $record-type-equality-predicate:       syslib records.      (line  61)
* $record-type-equality-predicate-set!:  syslib records.      (line  60)
* $record-type-hash-function:            syslib records.      (line  70)
* $record-type-hash-function-set!:       syslib records.      (line  69)
* $record-type-method-retriever:         syslib records.      (line  74)
* $record-type-method-retriever-set!:    syslib records.      (line  73)
* $record-type-printer:                  syslib records.      (line  57)
* $record-type-printer-set!:             syslib records.      (line  56)
* $record=:                              syslib records.      (line  11)
* $remainder-bignum-bignum:              syslib numerics remainder.
                                                              (line  69)
* $remainder-bignum-fixnum:              syslib numerics remainder.
                                                              (line  65)
* $remainder-bignum-flonum:              syslib numerics remainder.
                                                              (line  73)
* $remainder-bignum-number:              syslib numerics remainder.
                                                              (line  37)
* $remainder-fixnum-bignum:              syslib numerics remainder.
                                                              (line  54)
* $remainder-fixnum-fixnum:              syslib numerics remainder.
                                                              (line  50)
* $remainder-fixnum-flonum:              syslib numerics remainder.
                                                              (line  58)
* $remainder-fixnum-number:              syslib numerics remainder.
                                                              (line  32)
* $remainder-flonum-bignum:              syslib numerics remainder.
                                                              (line  84)
* $remainder-flonum-fixnum:              syslib numerics remainder.
                                                              (line  80)
* $remainder-flonum-flonum:              syslib numerics remainder.
                                                              (line  88)
* $remainder-flonum-number:              syslib numerics remainder.
                                                              (line  42)
* $remainder-number-bignum:              syslib numerics remainder.
                                                              (line  19)
* $remainder-number-fixnum:              syslib numerics remainder.
                                                              (line  14)
* $remainder-number-flonum:              syslib numerics remainder.
                                                              (line  24)
* $remprop:                              syslib symbols plists.
                                                              (line  21)
* $round-bignum:                         syslib numerics round.
                                                              (line  10)
* $round-fixnum:                         syslib numerics round.
                                                              (line   6)
* $round-flonum:                         syslib numerics round.
                                                              (line  14)
* $round-ratnum:                         syslib numerics round.
                                                              (line  17)
* $set-car!:                             syslib pairs.        (line  16)
* $set-cdr!:                             syslib pairs.        (line  19)
* $set-code-annotation:                  syslib codes unsafe. (line  36)
* $set-port-attrs!:                      syslib ports.        (line  46)
* $set-port-index!:                      syslib ports.        (line  40)
* $set-port-size!:                       syslib ports.        (line  43)
* $set-std-destructor!:                  syslib structs unsafe.
                                                              (line  85)
* $set-std-fields!:                      syslib structs unsafe.
                                                              (line  69)
* $set-std-length!:                      syslib structs unsafe.
                                                              (line  64)
* $set-std-name!:                        syslib structs unsafe.
                                                              (line  59)
* $set-std-printer!:                     syslib structs unsafe.
                                                              (line  74)
* $set-std-std!:                         syslib structs unsafe.
                                                              (line  54)
* $set-std-symbol!:                      syslib structs unsafe.
                                                              (line  79)
* $set-symbol-plist!:                    syslib symbols plists.
                                                              (line   7)
* $set-symbol-proc!:                     syslib symbols value.
                                                              (line  34)
* $set-symbol-string!:                   syslib symbols accessors.
                                                              (line  10)
* $set-symbol-unique-string!:            syslib symbols accessors.
                                                              (line  11)
* $set-symbol-value!:                    syslib symbols value.
                                                              (line   7)
* $set-symbol-value/proc!:               syslib symbols value.
                                                              (line  37)
* $set-tcbucket-key!:                    syslib tcbuckets.    (line  21)
* $set-tcbucket-next!:                   syslib tcbuckets.    (line  29)
* $set-tcbucket-tconc!:                  syslib tcbuckets.    (line  17)
* $set-tcbucket-val!:                    syslib tcbuckets.    (line  25)
* $sign-bignum:                          syslib numerics sign.
                                                              (line  10)
* $sign-fixnum:                          syslib numerics sign.
                                                              (line   6)
* $sign-flonum:                          syslib numerics sign.
                                                              (line  14)
* $sign-ratnum:                          syslib numerics sign.
                                                              (line  19)
* $sin-bignum:                           syslib numerics sin. (line   9)
* $sin-cflonum:                          syslib numerics sin. (line  19)
* $sin-compnum:                          syslib numerics sin. (line  22)
* $sin-fixnum:                           syslib numerics sin. (line   6)
* $sin-flonum:                           syslib numerics sin. (line  15)
* $sin-ratnum:                           syslib numerics sin. (line  12)
* $sinh-bignum:                          syslib numerics sinh.
                                                              (line   9)
* $sinh-cflonum:                         syslib numerics sinh.
                                                              (line  22)
* $sinh-compnum:                         syslib numerics sinh.
                                                              (line  19)
* $sinh-fixnum:                          syslib numerics sinh.
                                                              (line   6)
* $sinh-flonum:                          syslib numerics sinh.
                                                              (line  15)
* $sinh-ratnum:                          syslib numerics sinh.
                                                              (line  12)
* $sqrt-bignum:                          syslib numerics sqrt.
                                                              (line  21)
* $sqrt-cflonum:                         syslib numerics sqrt.
                                                              (line  68)
* $sqrt-compnum:                         syslib numerics sqrt.
                                                              (line  64)
* $sqrt-fixnum:                          syslib numerics sqrt.
                                                              (line   6)
* $sqrt-flonum:                          syslib numerics sqrt.
                                                              (line  43)
* $sqrt-ratnum:                          syslib numerics sqrt.
                                                              (line  39)
* $square-bignum:                        syslib numerics square.
                                                              (line  13)
* $square-cflonum:                       syslib numerics square.
                                                              (line  23)
* $square-compnum:                       syslib numerics square.
                                                              (line  19)
* $square-fixnum:                        syslib numerics square.
                                                              (line   9)
* $square-ratnum:                        syslib numerics square.
                                                              (line  16)
* $std-destructor:                       syslib structs unsafe.
                                                              (line  84)
* $std-fields:                           syslib structs unsafe.
                                                              (line  68)
* $std-length:                           syslib structs unsafe.
                                                              (line  63)
* $std-name:                             syslib structs unsafe.
                                                              (line  58)
* $std-printer:                          syslib structs unsafe.
                                                              (line  73)
* $std-std:                              syslib structs unsafe.
                                                              (line  53)
* $std-symbol:                           syslib structs unsafe.
                                                              (line  78)
* $string:                               syslib strings.      (line  18)
* $string!=?:                            syslib strings.      (line  96)
* $string->ascii:                        syslib strings.      (line 136)
* $string->latin1:                       syslib strings.      (line 120)
* $string->octets:                       syslib strings.      (line 127)
* $string->symbol:                       syslib symbols conversion.
                                                              (line   6)
* $string-base64->bytevector:            syslib strings.      (line 167)
* $string-ci-hash:                       syslib hashtables.   (line  35)
* $string-ci-hash <1>:                   syslib hashtables.   (line  36)
* $string-concatenate:                   syslib strings.      (line  50)
* $string-copy:                          syslib strings.      (line  21)
* $string-copy!:                         syslib strings.      (line  25)
* $string-copy!/count:                   syslib strings.      (line  29)
* $string-empty?:                        syslib strings.      (line  86)
* $string-fill!:                         syslib strings.      (line  69)
* $string-hash:                          syslib hashtables.   (line   9)
* $string-hash <1>:                      syslib hashtables.   (line  10)
* $string-length:                        syslib strings.      (line  76)
* $string-max:                           syslib strings.      (line 108)
* $string-min:                           syslib strings.      (line 109)
* $string-ref:                           syslib strings.      (line  63)
* $string-reverse-and-concatenate:       syslib strings.      (line  55)
* $string-self-copy-backwards!/count:    syslib strings.      (line  40)
* $string-self-copy-forwards!/count:     syslib strings.      (line  34)
* $string-set!:                          syslib strings.      (line  66)
* $string-total-length:                  syslib strings.      (line  79)
* $string<:                              syslib strings.      (line 100)
* $string<=:                             syslib strings.      (line 102)
* $string=:                              syslib strings.      (line  92)
* $string>:                              syslib strings.      (line 101)
* $string>=:                             syslib strings.      (line 103)
* $struct:                               syslib structs unsafe.
                                                              (line  45)
* $struct-hash:                          syslib hashtables.   (line 167)
* $struct-ref:                           syslib structs unsafe.
                                                              (line  39)
* $struct-set!:                          syslib structs unsafe.
                                                              (line  42)
* $struct-std:                           syslib structs unsafe.
                                                              (line  36)
* $struct/rtd?:                          syslib structs unsafe.
                                                              (line  19)
* $struct?:                              syslib structs unsafe.
                                                              (line  16)
* $sub-bignum-bignum:                    syslib numerics sub. (line  83)
* $sub-bignum-cflonum:                   syslib numerics sub. (line  97)
* $sub-bignum-compnum:                   syslib numerics sub. (line  93)
* $sub-bignum-fixnum:                    syslib numerics sub. (line  79)
* $sub-bignum-flonum:                    syslib numerics sub. (line  87)
* $sub-bignum-number:                    syslib numerics sub. (line  15)
* $sub-bignum-ratnum:                    syslib numerics sub. (line  90)
* $sub-cflonum-bignum:                   syslib numerics sub. (line 181)
* $sub-cflonum-cflonum:                  syslib numerics sub. (line 197)
* $sub-cflonum-compnum:                  syslib numerics sub. (line 193)
* $sub-cflonum-fixnum:                   syslib numerics sub. (line 177)
* $sub-cflonum-flonum:                   syslib numerics sub. (line 189)
* $sub-cflonum-number:                   syslib numerics sub. (line  27)
* $sub-cflonum-ratnum:                   syslib numerics sub. (line 185)
* $sub-compnum-bignum:                   syslib numerics sub. (line 154)
* $sub-compnum-cflonum:                  syslib numerics sub. (line 170)
* $sub-compnum-compnum:                  syslib numerics sub. (line 162)
* $sub-compnum-fixnum:                   syslib numerics sub. (line 150)
* $sub-compnum-flonum:                   syslib numerics sub. (line 166)
* $sub-compnum-number:                   syslib numerics sub. (line  24)
* $sub-compnum-ratnum:                   syslib numerics sub. (line 158)
* $sub-fixnum-bignum:                    syslib numerics sub. (line  58)
* $sub-fixnum-cflonum:                   syslib numerics sub. (line  72)
* $sub-fixnum-compnum:                   syslib numerics sub. (line  68)
* $sub-fixnum-fixnum:                    syslib numerics sub. (line  54)
* $sub-fixnum-flonum:                    syslib numerics sub. (line  62)
* $sub-fixnum-number:                    syslib numerics sub. (line  12)
* $sub-fixnum-ratnum:                    syslib numerics sub. (line  65)
* $sub-flonum-bignum:                    syslib numerics sub. (line 107)
* $sub-flonum-cflonum:                   syslib numerics sub. (line 120)
* $sub-flonum-compnum:                   syslib numerics sub. (line 116)
* $sub-flonum-fixnum:                    syslib numerics sub. (line 104)
* $sub-flonum-flonum:                    syslib numerics sub. (line 110)
* $sub-flonum-number:                    syslib numerics sub. (line  18)
* $sub-flonum-ratnum:                    syslib numerics sub. (line 113)
* $sub-number-bignum:                    syslib numerics sub. (line  36)
* $sub-number-cflonum:                   syslib numerics sub. (line  48)
* $sub-number-compnum:                   syslib numerics sub. (line  45)
* $sub-number-fixnum:                    syslib numerics sub. (line  33)
* $sub-number-flonum:                    syslib numerics sub. (line  39)
* $sub-number-number:                    syslib numerics sub. (line   6)
* $sub-number-ratnum:                    syslib numerics sub. (line  42)
* $sub-ratnum-bignum:                    syslib numerics sub. (line 130)
* $sub-ratnum-cflonum:                   syslib numerics sub. (line 143)
* $sub-ratnum-compnum:                   syslib numerics sub. (line 139)
* $sub-ratnum-fixnum:                    syslib numerics sub. (line 127)
* $sub-ratnum-flonum:                    syslib numerics sub. (line 133)
* $sub-ratnum-number:                    syslib numerics sub. (line  21)
* $sub-ratnum-ratnum:                    syslib numerics sub. (line 136)
* $sub1-bignum:                          syslib numerics sub1.
                                                              (line   9)
* $sub1-fixnum:                          syslib numerics sub1.
                                                              (line  12)
* $sub1-integer:                         syslib numerics sub1.
                                                              (line   6)
* $subbytevector-s8:                     syslib bytevectors constructors.
                                                              (line  11)
* $subbytevector-s8/count:               syslib bytevectors constructors.
                                                              (line  17)
* $subbytevector-u8:                     syslib bytevectors constructors.
                                                              (line  10)
* $subbytevector-u8/count:               syslib bytevectors constructors.
                                                              (line  16)
* $substring:                            syslib strings.      (line  46)
* $subvector:                            syslib vectors makers.
                                                              (line  23)
* $symbol!=:                             syslib symbols comparison.
                                                              (line  10)
* $symbol->keyword:                      syslib keywords.     (line  10)
* $symbol->string:                       syslib symbols conversion.
                                                              (line   9)
* $symbol-hash:                          syslib hashtables.   (line  43)
* $symbol-max:                           syslib symbols comparison.
                                                              (line  22)
* $symbol-min:                           syslib symbols comparison.
                                                              (line  23)
* $symbol-plist:                         syslib symbols plists.
                                                              (line   6)
* $symbol-proc:                          syslib symbols value.
                                                              (line  33)
* $symbol-string:                        syslib symbols accessors.
                                                              (line   6)
* $symbol-table-size:                    syslib symbols table.
                                                              (line   9)
* $symbol-unique-string:                 syslib symbols accessors.
                                                              (line   7)
* $symbol-value:                         syslib symbols value.
                                                              (line   6)
* $symbol<:                              syslib symbols comparison.
                                                              (line  14)
* $symbol<=:                             syslib symbols comparison.
                                                              (line  16)
* $symbol=:                              syslib symbols comparison.
                                                              (line   6)
* $symbol>:                              syslib symbols comparison.
                                                              (line  15)
* $symbol>=:                             syslib symbols comparison.
                                                              (line  17)
* $tan-bignum:                           syslib numerics tan. (line   9)
* $tan-cflonum:                          syslib numerics tan. (line  19)
* $tan-compnum:                          syslib numerics tan. (line  22)
* $tan-fixnum:                           syslib numerics tan. (line   6)
* $tan-flonum:                           syslib numerics tan. (line  15)
* $tan-ratnum:                           syslib numerics tan. (line  12)
* $tanh-bignum:                          syslib numerics tanh.
                                                              (line   9)
* $tanh-cflonum:                         syslib numerics tanh.
                                                              (line  22)
* $tanh-compnum:                         syslib numerics tanh.
                                                              (line  19)
* $tanh-fixnum:                          syslib numerics tanh.
                                                              (line   6)
* $tanh-flonum:                          syslib numerics tanh.
                                                              (line  15)
* $tanh-ratnum:                          syslib numerics tanh.
                                                              (line  12)
* $tcbucket-key:                         syslib tcbuckets.    (line  20)
* $tcbucket-next:                        syslib tcbuckets.    (line  28)
* $tcbucket-tconc:                       syslib tcbuckets.    (line  16)
* $tcbucket-val:                         syslib tcbuckets.    (line  24)
* $transcoder!=:                         syslib transcoders.  (line  19)
* $transcoder->data:                     syslib transcoders.  (line  14)
* $transcoder-hash:                      syslib hashtables.   (line 154)
* $transcoder-max:                       syslib transcoders.  (line  27)
* $transcoder-min:                       syslib transcoders.  (line  26)
* $transcoder<:                          syslib transcoders.  (line  20)
* $transcoder<=:                         syslib transcoders.  (line  22)
* $transcoder=:                          syslib transcoders.  (line  18)
* $transcoder>:                          syslib transcoders.  (line  21)
* $transcoder>=:                         syslib transcoders.  (line  23)
* $truncate-bignum:                      syslib numerics truncate.
                                                              (line  10)
* $truncate-fixnum:                      syslib numerics truncate.
                                                              (line   6)
* $truncate-flonum:                      syslib numerics truncate.
                                                              (line  14)
* $truncate-ratnum:                      syslib numerics truncate.
                                                              (line  17)
* $unbound-object?:                      syslib symbols value.
                                                              (line  29)
* $uri-decode:                           syslib bytevectors encodings.
                                                              (line  26)
* $uri-encode:                           syslib bytevectors encodings.
                                                              (line  25)
* $uri-encoded-bytevector?:              syslib bytevectors encodings.
                                                              (line  41)
* $uri-encoded-string?:                  syslib strings.      (line 175)
* $uri-normalise-encoding:               syslib bytevectors encodings.
                                                              (line  36)
* $vector-copy-source-count!:            syslib vectors copying.
                                                              (line  28)
* $vector-copy-source-range!:            syslib vectors copying.
                                                              (line  22)
* $vector-empty?:                        syslib vectors inspect.
                                                              (line  13)
* $vector-for-all1:                      syslib vectors mapping.
                                                              (line  19)
* $vector-for-each1:                     syslib vectors mapping.
                                                              (line  15)
* $vector-for-exists1:                   syslib vectors mapping.
                                                              (line  25)
* $vector-hash:                          syslib hashtables.   (line  72)
* $vector-hash <1>:                      syslib hashtables.   (line  73)
* $vector-length:                        syslib vectors inspect.
                                                              (line  10)
* $vector-map1:                          syslib vectors mapping.
                                                              (line  10)
* $vector-ref:                           syslib vectors access.
                                                              (line  10)
* $vector-self-copy-backwards!:          syslib vectors copying.
                                                              (line  16)
* $vector-self-copy-forwards!:           syslib vectors copying.
                                                              (line  10)
* $vector-set!:                          syslib vectors access.
                                                              (line  13)
* $vector-set-void!:                     syslib vectors access.
                                                              (line  16)
* $vectors-of-same-length?:              syslib vectors inspect.
                                                              (line  17)
* &assertion:                            stdlib exceptions conditions types.
                                                              (line  94)
* &condition:                            stdlib exceptions conditions objects.
                                                              (line  19)
* &error:                                stdlib exceptions conditions types.
                                                              (line  71)
* &i/o:                                  stdlib io conditions.
                                                              (line  14)
* &i/o-decoding:                         stdlib io port transcoders.
                                                              (line  73)
* &i/o-encoding:                         stdlib io port transcoders.
                                                              (line  89)
* &i/o-file-already-exists:              stdlib io conditions.
                                                              (line 103)
* &i/o-file-does-not-exist:              stdlib io conditions.
                                                              (line 117)
* &i/o-file-is-read-only:                stdlib io conditions.
                                                              (line  89)
* &i/o-file-protection:                  stdlib io conditions.
                                                              (line  76)
* &i/o-filename:                         stdlib io conditions.
                                                              (line  62)
* &i/o-invalid-position:                 stdlib io conditions.
                                                              (line  46)
* &i/o-port:                             stdlib io conditions.
                                                              (line 131)
* &i/o-read:                             stdlib io conditions.
                                                              (line  24)
* &i/o-write:                            stdlib io conditions.
                                                              (line  35)
* &implementation-restriction:           stdlib exceptions conditions types.
                                                              (line 150)
* &irritants:                            stdlib exceptions conditions types.
                                                              (line 106)
* &lexical:                              stdlib exceptions conditions types.
                                                              (line 164)
* &message:                              stdlib exceptions conditions types.
                                                              (line  34)
* &no-infinities:                        stdlib arithmetic flonums.
                                                              (line 277)
* &no-nans:                              stdlib arithmetic flonums.
                                                              (line 280)
* &non-continuable:                      stdlib exceptions conditions types.
                                                              (line 138)
* &serious:                              stdlib exceptions conditions types.
                                                              (line  59)
* &syntax:                               stdlib exceptions conditions types.
                                                              (line 175)
* &undefined:                            stdlib exceptions conditions types.
                                                              (line 194)
* &violation:                            stdlib exceptions conditions types.
                                                              (line  83)
* &warning:                              stdlib exceptions conditions types.
                                                              (line  47)
* &who:                                  scheme entry other kinds.
                                                              (line  10)
* &who <1>:                              stdlib exceptions conditions types.
                                                              (line 122)
* *:                                     baselib math ops arithmetic.
                                                              (line   7)
* +:                                     baselib math ops arithmetic.
                                                              (line   6)
* ++:                                    iklib syntaxes increments.
                                                              (line   6)
* ++ <1>:                                iklib syntaxes increments.
                                                              (line   7)
* +greek-pi:                             iklib numerics constants.
                                                              (line  22)
* +greek-pi*2:                           iklib numerics constants.
                                                              (line  51)
* +greek-pi*2/3:                         iklib numerics constants.
                                                              (line  57)
* +greek-pi*3/4:                         iklib numerics constants.
                                                              (line  63)
* +greek-pi/2:                           iklib numerics constants.
                                                              (line  27)
* +greek-pi/3:                           iklib numerics constants.
                                                              (line  33)
* +greek-pi/4:                           iklib numerics constants.
                                                              (line  39)
* +greek-pi/6:                           iklib numerics constants.
                                                              (line  45)
* -:                                     baselib math ops arithmetic.
                                                              (line  52)
* - <1>:                                 baselib math ops arithmetic.
                                                              (line  53)
* --:                                    iklib syntaxes increments.
                                                              (line  39)
* -- <1>:                                iklib syntaxes increments.
                                                              (line  40)
* -greek-pi:                             iklib numerics constants.
                                                              (line  23)
* -greek-pi*2:                           iklib numerics constants.
                                                              (line  52)
* -greek-pi*2/3:                         iklib numerics constants.
                                                              (line  58)
* -greek-pi*3/4:                         iklib numerics constants.
                                                              (line  64)
* -greek-pi/2:                           iklib numerics constants.
                                                              (line  28)
* -greek-pi/3:                           iklib numerics constants.
                                                              (line  34)
* -greek-pi/4:                           iklib numerics constants.
                                                              (line  40)
* -greek-pi/6:                           iklib numerics constants.
                                                              (line  46)
* ...:                                   baselib lists.       (line  82)
* ... <1>:                               baselib transformers.
                                                              (line   8)
* ... <2>:                               stdlib syntax-case parsing.
                                                              (line  12)
* /:                                     baselib math ops arithmetic.
                                                              (line  78)
* / <1>:                                 baselib math ops arithmetic.
                                                              (line  79)
* <:                                     baselib math ops value pred.
                                                              (line   7)
* <=:                                    baselib math ops value pred.
                                                              (line   9)
* <>:                                    iklib syntaxes misc. (line  60)
* <> <1>:                                iklib compensations api.
                                                              (line  57)
* =:                                     baselib math ops value pred.
                                                              (line   6)
* =>:                                    baselib expressions derived cond.
                                                              (line   7)
* => <1>:                                baselib expressions derived cond.
                                                              (line  86)
* => <2>:                                stdlib exceptions exceptions.
                                                              (line  49)
* => <3>:                                iklib syntaxes control.
                                                              (line  22)
* >:                                     baselib math ops value pred.
                                                              (line   8)
* >=:                                    baselib math ops value pred.
                                                              (line  10)
* ?BOOLEAN:                              scheme syntax primitive.
                                                              (line  13)
* ?BYTEVECTOR:                           scheme syntax primitive.
                                                              (line  16)
* ?CHARACTER:                            scheme syntax primitive.
                                                              (line  14)
* ?NUMBER:                               scheme syntax primitive.
                                                              (line  12)
* ?OPERATOR:                             scheme syntax primitive.
                                                              (line  47)
* ?STRING:                               scheme syntax primitive.
                                                              (line  15)
* ?VARIABLE:                             scheme syntax primitive.
                                                              (line  32)
* \{?NAME}:                              iklib reader chars.  (line  25)
* _:                                     baselib transformers.
                                                              (line   7)
* _ <1>:                                 stdlib syntax-case parsing.
                                                              (line  11)
* __file__:                              iklib syntaxes misc. (line  44)
* __line__:                              iklib syntaxes misc. (line  48)
* __synner__:                            iklib syntaxes misc. (line  23)
* __who__:                               iklib syntaxes misc. (line  13)
* |SYMBOL|:                              iklib reader misc.   (line   9)
* abs:                                   baselib math ops arithmetic.
                                                              (line 104)
* acos:                                  baselib math ops trascend.
                                                              (line  13)
* acosh:                                 iklib numerics math. (line  94)
* add1:                                  iklib numerics math. (line  11)
* alist->hashtable!:                     iklib hashtables iterators.
                                                              (line 181)
* alist-type-spec.key-ots:               expander specs alist.
                                                              (line  22)
* alist-type-spec.val-ots:               expander specs alist.
                                                              (line  23)
* alist-type-spec?:                      expander specs alist.
                                                              (line  18)
* all-identifiers?:                      expander utils pairs.
                                                              (line  48)
* always-false:                          iklib misc.          (line  30)
* always-true:                           iklib misc.          (line  29)
* ancestor-of-type-spec.ancestor-ots*:   expander specs ancestor.
                                                              (line  26)
* ancestor-of-type-spec.item-ots:        expander specs ancestor.
                                                              (line  23)
* ancestor-of-type-spec?:                expander specs ancestor.
                                                              (line  19)
* and:                                   baselib expressions derived cond.
                                                              (line 169)
* andmap:                                iklib lists misc.    (line  31)
* andmap <1>:                            iklib lists misc.    (line  32)
* angle:                                 baselib math ops complex.
                                                              (line  11)
* append:                                baselib lists.       (line 118)
* append <1>:                            baselib lists.       (line 119)
* apply:                                 baselib control.     (line   9)
* apropos:                               iklib misc.          (line  42)
* argv->bytevectors:                     iklib cstrings.      (line 135)
* argv->strings:                         iklib cstrings.      (line 157)
* argv-length:                           iklib cstrings.      (line 162)
* array-ref-c-double:                    iklib arrays peek.   (line 101)
* array-ref-c-double-complex:            iklib arrays peek.   (line 105)
* array-ref-c-float:                     iklib arrays peek.   (line  95)
* array-ref-c-off_t:                     iklib arrays peek.   (line  84)
* array-ref-c-pointer:                   iklib arrays peek.   (line 113)
* array-ref-c-ptrdiff_t:                 iklib arrays peek.   (line  88)
* array-ref-c-signed-char:               iklib arrays peek.   (line  49)
* array-ref-c-signed-char <1>:           iklib arrays peek.   (line  50)
* array-ref-c-signed-int:                iklib arrays peek.   (line  60)
* array-ref-c-signed-long:               iklib arrays peek.   (line  65)
* array-ref-c-signed-long-long:          iklib arrays peek.   (line  70)
* array-ref-c-signed-short:              iklib arrays peek.   (line  54)
* array-ref-c-sint16:                    iklib arrays peek.   (line  27)
* array-ref-c-sint32:                    iklib arrays peek.   (line  32)
* array-ref-c-sint64:                    iklib arrays peek.   (line  37)
* array-ref-c-sint8:                     iklib arrays peek.   (line  22)
* array-ref-c-size_t:                    iklib arrays peek.   (line  76)
* array-ref-c-ssize_t:                   iklib arrays peek.   (line  80)
* array-ref-c-uint16:                    iklib arrays peek.   (line  28)
* array-ref-c-uint32:                    iklib arrays peek.   (line  33)
* array-ref-c-uint64:                    iklib arrays peek.   (line  38)
* array-ref-c-uint8:                     iklib arrays peek.   (line  23)
* array-ref-c-unsigned-int:              iklib arrays peek.   (line  61)
* array-ref-c-unsigned-long:             iklib arrays peek.   (line  66)
* array-ref-c-unsigned-long-long:        iklib arrays peek.   (line  71)
* array-ref-c-unsigned-short:            iklib arrays peek.   (line  55)
* array-set-c-double!:                   iklib arrays poke.   (line 103)
* array-set-c-double-complex!:           iklib arrays poke.   (line 107)
* array-set-c-float!:                    iklib arrays poke.   (line  97)
* array-set-c-off_t!:                    iklib arrays poke.   (line  86)
* array-set-c-pointer!:                  iklib arrays poke.   (line 114)
* array-set-c-ptrdiff_t!:                iklib arrays poke.   (line  90)
* array-set-c-signed-char!:              iklib arrays poke.   (line  53)
* array-set-c-signed-int!:               iklib arrays poke.   (line  63)
* array-set-c-signed-long!:              iklib arrays poke.   (line  68)
* array-set-c-signed-long-long!:         iklib arrays poke.   (line  73)
* array-set-c-signed-short!:             iklib arrays poke.   (line  58)
* array-set-c-sint16!:                   iklib arrays poke.   (line  28)
* array-set-c-sint32!:                   iklib arrays poke.   (line  34)
* array-set-c-sint64!:                   iklib arrays poke.   (line  40)
* array-set-c-sint8!:                    iklib arrays poke.   (line  22)
* array-set-c-size_t!:                   iklib arrays poke.   (line  78)
* array-set-c-ssize_t!:                  iklib arrays poke.   (line  82)
* array-set-c-uint16!:                   iklib arrays poke.   (line  29)
* array-set-c-uint32!:                   iklib arrays poke.   (line  35)
* array-set-c-uint64!:                   iklib arrays poke.   (line  41)
* array-set-c-uint8!:                    iklib arrays poke.   (line  23)
* array-set-c-unsigned-char!:            iklib arrays poke.   (line  54)
* array-set-c-unsigned-int!:             iklib arrays poke.   (line  64)
* array-set-c-unsigned-long!:            iklib arrays poke.   (line  69)
* array-set-c-unsigned-long-long!:       iklib arrays poke.   (line  74)
* array-set-c-unsigned-short!:           iklib arrays poke.   (line  59)
* ascii->string:                         iklib strings conversion.
                                                              (line  30)
* ascii-code-point?:                     iklib chars unicode ascii.
                                                              (line  14)
* ascii-decode:                          iklib chars unicode ascii.
                                                              (line  32)
* ascii-encode:                          iklib chars unicode ascii.
                                                              (line  19)
* ascii-encoded-bytevector?:             iklib bytevectors conversion.
                                                              (line 141)
* ascii-encoded-string?:                 iklib strings conversion.
                                                              (line  41)
* ascii-octet?:                          iklib chars unicode ascii.
                                                              (line  27)
* asin:                                  baselib math ops trascend.
                                                              (line  12)
* asinh:                                 iklib numerics math. (line  93)
* assemble-sources:                      compiler assember.   (line   8)
* assembly-of:                           iklib syntaxes assembly-of.
                                                              (line   6)
* assert:                                baselib errors.      (line  61)
* assertion-violation:                   baselib errors.      (line   7)
* assertion-violation?:                  stdlib exceptions conditions types.
                                                              (line  96)
* assoc:                                 stdlib list.         (line 352)
* assp:                                  stdlib list.         (line 351)
* assq:                                  stdlib list.         (line 354)
* assv:                                  stdlib list.         (line 353)
* atan:                                  baselib math ops trascend.
                                                              (line  14)
* atan <1>:                              baselib math ops trascend.
                                                              (line  15)
* atanh:                                 iklib numerics math. (line  95)
* automatic-collect:                     iklib gc.            (line  20)
* automatic-collect <1>:                 iklib gc.            (line  21)
* automatic-garbage-collection:          iklib gc.            (line  27)
* automatic-garbage-collection <1>:      iklib gc.            (line  28)
* base-rtd:                              syslib structs unsafe.
                                                              (line  12)
* base64->bytevector:                    iklib bytevectors conversion.
                                                              (line 166)
* begin:                                 baselib expressions sequencing.
                                                              (line   6)
* begin <1>:                             baselib expressions sequencing.
                                                              (line   7)
* begin-for-syntax:                      iklib syntaxes misc. (line  66)
* begin0:                                iklib syntaxes control.
                                                              (line   6)
* bignum->bytevector:                    iklib debug.         (line  34)
* bignum-even?:                          iklib numerics bignums.
                                                              (line  26)
* bignum-hash:                           iklib hashtables hashfun.
                                                              (line 101)
* bignum-negative?:                      iklib numerics bignums.
                                                              (line   7)
* bignum-non-negative?:                  iklib numerics bignums.
                                                              (line   8)
* bignum-non-positive?:                  iklib numerics bignums.
                                                              (line   9)
* bignum-odd?:                           iklib numerics bignums.
                                                              (line  22)
* bignum-positive?:                      iklib numerics bignums.
                                                              (line   6)
* bignum?:                               iklib numerics preds.
                                                              (line   8)
* binary-input-only-port?:               iklib io binary.     (line  14)
* binary-input-port?:                    iklib io binary.     (line   8)
* binary-input/output-port?:             iklib io binary.     (line  10)
* binary-output-only-port?:              iklib io binary.     (line  15)
* binary-output-port?:                   iklib io binary.     (line   9)
* binary-port?:                          stdlib io port io ports.
                                                              (line  21)
* bitwise-and:                           stdlib arithmetic exact bitwise.
                                                              (line  16)
* bitwise-arithmetic-shift:              stdlib arithmetic exact bitwise.
                                                              (line 130)
* bitwise-arithmetic-shift-left:         stdlib arithmetic exact bitwise.
                                                              (line 144)
* bitwise-arithmetic-shift-right:        stdlib arithmetic exact bitwise.
                                                              (line 145)
* bitwise-bit-count:                     stdlib arithmetic exact bitwise.
                                                              (line  37)
* bitwise-bit-field:                     stdlib arithmetic exact bitwise.
                                                              (line  90)
* bitwise-bit-set?:                      stdlib arithmetic exact bitwise.
                                                              (line  66)
* bitwise-copy-bit:                      stdlib arithmetic exact bitwise.
                                                              (line  78)
* bitwise-copy-bit-field:                stdlib arithmetic exact bitwise.
                                                              (line 105)
* bitwise-first-bit-set:                 stdlib arithmetic exact bitwise.
                                                              (line  58)
* bitwise-if:                            stdlib arithmetic exact bitwise.
                                                              (line  26)
* bitwise-ior:                           stdlib arithmetic exact bitwise.
                                                              (line  17)
* bitwise-length:                        stdlib arithmetic exact bitwise.
                                                              (line  44)
* bitwise-not:                           stdlib arithmetic exact bitwise.
                                                              (line  11)
* bitwise-reverse-bit-field:             stdlib arithmetic exact bitwise.
                                                              (line 184)
* bitwise-rotate-bit-field:              stdlib arithmetic exact bitwise.
                                                              (line 157)
* bitwise-xor:                           stdlib arithmetic exact bitwise.
                                                              (line  18)
* boolean!=?:                            iklib booleans.      (line  23)
* boolean-hash:                          iklib hashtables hashfun.
                                                              (line  95)
* boolean-max:                           iklib booleans.      (line  42)
* boolean-min:                           iklib booleans.      (line  41)
* boolean<=?:                            iklib booleans.      (line  30)
* boolean<?:                             iklib booleans.      (line  28)
* boolean=?:                             baselib booleans.    (line  32)
* boolean>=?:                            iklib booleans.      (line  31)
* boolean>?:                             iklib booleans.      (line  29)
* boolean?:                              baselib booleans.    (line  25)
* bound-identifier=?:                    stdlib syntax-case identifier.
                                                              (line  62)
* brace:                                 iklib syntaxes misc. (line  51)
* break:                                 iklib syntaxes loops while.
                                                              (line   8)
* break <1>:                             iklib syntaxes loops until.
                                                              (line   8)
* break <2>:                             iklib syntaxes loops for.
                                                              (line   8)
* break <3>:                             iklib syntaxes loops do.
                                                              (line  11)
* break <4>:                             iklib syntaxes loops fluids.
                                                              (line  11)
* buffer-mode:                           stdlib io port buffer modes.
                                                              (line  37)
* buffer-mode?:                          stdlib io port buffer modes.
                                                              (line  44)
* bwp-object:                            iklib lists weak.    (line  19)
* bwp-object?:                           iklib lists weak.    (line  22)
* byte-fixnum?:                          iklib fixnums predicates.
                                                              (line  28)
* bytevector!=?:                         iklib bytevectors comparison.
                                                              (line   6)
* bytevector->base64:                    iklib bytevectors conversion.
                                                              (line 167)
* bytevector->bignum:                    iklib debug.         (line  35)
* bytevector->c4b-list:                  iklib bytevectors conversion.
                                                              (line 122)
* bytevector->c4l-list:                  iklib bytevectors conversion.
                                                              (line 121)
* bytevector->c4n-list:                  iklib bytevectors conversion.
                                                              (line 123)
* bytevector->c8b-list:                  iklib bytevectors conversion.
                                                              (line 132)
* bytevector->c8l-list:                  iklib bytevectors conversion.
                                                              (line 131)
* bytevector->c8n-list:                  iklib bytevectors conversion.
                                                              (line 133)
* bytevector->cstring:                   iklib cstrings.      (line  12)
* bytevector->cstring*:                  iklib cstrings.      (line  24)
* bytevector->f4b-list:                  iklib bytevectors conversion.
                                                              (line 102)
* bytevector->f4l-list:                  iklib bytevectors conversion.
                                                              (line 101)
* bytevector->f4n-list:                  iklib bytevectors conversion.
                                                              (line 103)
* bytevector->f8b-list:                  iklib bytevectors conversion.
                                                              (line 112)
* bytevector->f8l-list:                  iklib bytevectors conversion.
                                                              (line 111)
* bytevector->f8n-list:                  iklib bytevectors conversion.
                                                              (line 113)
* bytevector->flonum:                    iklib debug.         (line  26)
* bytevector->guarded-cstring:           iklib cstrings.      (line  13)
* bytevector->guarded-cstring*:          iklib cstrings.      (line  25)
* bytevector->guarded-memory:            iklib memory ops.    (line  52)
* bytevector->hex:                       iklib bytevectors conversion.
                                                              (line 154)
* bytevector->memory:                    iklib memory ops.    (line  51)
* bytevector->s16b-list:                 iklib bytevectors conversion.
                                                              (line  57)
* bytevector->s16l-list:                 iklib bytevectors conversion.
                                                              (line  56)
* bytevector->s16n-list:                 iklib bytevectors conversion.
                                                              (line  58)
* bytevector->s32b-list:                 iklib bytevectors conversion.
                                                              (line  73)
* bytevector->s32l-list:                 iklib bytevectors conversion.
                                                              (line  72)
* bytevector->s32n-list:                 iklib bytevectors conversion.
                                                              (line  74)
* bytevector->s64b-list:                 iklib bytevectors conversion.
                                                              (line  89)
* bytevector->s64l-list:                 iklib bytevectors conversion.
                                                              (line  88)
* bytevector->s64n-list:                 iklib bytevectors conversion.
                                                              (line  90)
* bytevector->s8-list:                   iklib bytevectors conversion.
                                                              (line  46)
* bytevector->sint-list:                 stdlib bytevector integers.
                                                              (line  63)
* bytevector->string:                    stdlib io port transcoders.
                                                              (line 165)
* bytevector->string-base64:             iklib strings conversion.
                                                              (line  89)
* bytevector->string-hex:                iklib strings conversion.
                                                              (line  79)
* bytevector->u16b-list:                 iklib bytevectors conversion.
                                                              (line  60)
* bytevector->u16l-list:                 iklib bytevectors conversion.
                                                              (line  59)
* bytevector->u16n-list:                 iklib bytevectors conversion.
                                                              (line  61)
* bytevector->u32b-list:                 iklib bytevectors conversion.
                                                              (line  76)
* bytevector->u32l-list:                 iklib bytevectors conversion.
                                                              (line  75)
* bytevector->u32n-list:                 iklib bytevectors conversion.
                                                              (line  77)
* bytevector->u64b-list:                 iklib bytevectors conversion.
                                                              (line  92)
* bytevector->u64l-list:                 iklib bytevectors conversion.
                                                              (line  91)
* bytevector->u64n-list:                 iklib bytevectors conversion.
                                                              (line  93)
* bytevector->u8-list:                   stdlib bytevector bytes and octets.
                                                              (line  49)
* bytevector->uint-list:                 stdlib bytevector integers.
                                                              (line  62)
* bytevector-append:                     iklib bytevectors generic.
                                                              (line  12)
* bytevector-concatenate:                iklib bytevectors generic.
                                                              (line  16)
* bytevector-copy:                       stdlib bytevector general.
                                                              (line  87)
* bytevector-copy!:                      stdlib bytevector general.
                                                              (line  57)
* bytevector-empty?:                     iklib bytevectors generic.
                                                              (line   8)
* bytevector-fill!:                      stdlib bytevector general.
                                                              (line  51)
* bytevector-hash:                       iklib hashtables hashfun.
                                                              (line   6)
* bytevector-hash <1>:                   iklib hashtables hashfun.
                                                              (line   7)
* bytevector-ieee-double-native-ref:     stdlib bytevector flonum.
                                                              (line  16)
* bytevector-ieee-double-native-set!:    stdlib bytevector flonum.
                                                              (line  37)
* bytevector-ieee-double-ref:            stdlib bytevector flonum.
                                                              (line  17)
* bytevector-ieee-double-set!:           stdlib bytevector flonum.
                                                              (line  38)
* bytevector-ieee-single-native-ref:     stdlib bytevector flonum.
                                                              (line   6)
* bytevector-ieee-single-native-set!:    stdlib bytevector flonum.
                                                              (line  26)
* bytevector-ieee-single-ref:            stdlib bytevector flonum.
                                                              (line   7)
* bytevector-ieee-single-set!:           stdlib bytevector flonum.
                                                              (line  27)
* bytevector-index-for-double-flonum?:   iklib bytevectors valpred.
                                                              (line  39)
* bytevector-index-for-single-flonum?:   iklib bytevectors valpred.
                                                              (line  38)
* bytevector-index-for-word16?:          iklib bytevectors valpred.
                                                              (line  35)
* bytevector-index-for-word32?:          iklib bytevectors valpred.
                                                              (line  36)
* bytevector-index-for-word64?:          iklib bytevectors valpred.
                                                              (line  37)
* bytevector-index-for-word8?:           iklib bytevectors valpred.
                                                              (line  34)
* bytevector-index-for-word?:            iklib bytevectors valpred.
                                                              (line  27)
* bytevector-index?:                     iklib bytevectors valpred.
                                                              (line  10)
* bytevector-length:                     stdlib bytevector general.
                                                              (line  42)
* bytevector-length?:                    iklib bytevectors valpred.
                                                              (line   6)
* bytevector-port-buffer-size:           iklib io buffer.     (line   8)
* bytevector-port-buffer-size <1>:       iklib io buffer.     (line   9)
* bytevector-reverse-and-concatenate:    iklib bytevectors generic.
                                                              (line  21)
* bytevector-s16-native-ref:             stdlib bytevector integers 16.
                                                              (line   9)
* bytevector-s16-native-set!:            stdlib bytevector integers 16.
                                                              (line  13)
* bytevector-s16-ref:                    stdlib bytevector integers 16.
                                                              (line   7)
* bytevector-s16-set!:                   stdlib bytevector integers 16.
                                                              (line  11)
* bytevector-s32-native-ref:             stdlib bytevector integers 32.
                                                              (line   9)
* bytevector-s32-native-set!:            stdlib bytevector integers 32.
                                                              (line  13)
* bytevector-s32-ref:                    stdlib bytevector integers 32.
                                                              (line   7)
* bytevector-s32-set!:                   stdlib bytevector integers 32.
                                                              (line  11)
* bytevector-s64-native-ref:             stdlib bytevector integers 64.
                                                              (line   9)
* bytevector-s64-native-set!:            stdlib bytevector integers 64.
                                                              (line  13)
* bytevector-s64-ref:                    stdlib bytevector integers 64.
                                                              (line   7)
* bytevector-s64-set!:                   stdlib bytevector integers 64.
                                                              (line  11)
* bytevector-s8-max:                     iklib bytevectors comparison.
                                                              (line  32)
* bytevector-s8-min:                     iklib bytevectors comparison.
                                                              (line  33)
* bytevector-s8-ref:                     stdlib bytevector bytes and octets.
                                                              (line   7)
* bytevector-s8-set!:                    stdlib bytevector bytes and octets.
                                                              (line  26)
* bytevector-s8<=?:                      iklib bytevectors comparison.
                                                              (line  21)
* bytevector-s8<?:                       iklib bytevectors comparison.
                                                              (line  19)
* bytevector-s8>=?:                      iklib bytevectors comparison.
                                                              (line  22)
* bytevector-s8>?:                       iklib bytevectors comparison.
                                                              (line  20)
* bytevector-sint-ref:                   stdlib bytevector integers.
                                                              (line   7)
* bytevector-sint-set!:                  stdlib bytevector integers.
                                                              (line   9)
* bytevector-start-index-and-count-for-word16?: iklib bytevectors valpred.
                                                              (line  53)
* bytevector-start-index-and-count-for-word32?: iklib bytevectors valpred.
                                                              (line  54)
* bytevector-start-index-and-count-for-word64?: iklib bytevectors valpred.
                                                              (line  55)
* bytevector-start-index-and-count-for-word8?: iklib bytevectors valpred.
                                                              (line  52)
* bytevector-start-index-and-count-for-word?: iklib bytevectors valpred.
                                                              (line  43)
* bytevector-u16-native-ref:             stdlib bytevector integers 16.
                                                              (line   8)
* bytevector-u16-native-set!:            stdlib bytevector integers 16.
                                                              (line  12)
* bytevector-u16-ref:                    stdlib bytevector integers 16.
                                                              (line   6)
* bytevector-u16-set!:                   stdlib bytevector integers 16.
                                                              (line  10)
* bytevector-u32-native-ref:             stdlib bytevector integers 32.
                                                              (line   8)
* bytevector-u32-native-set!:            stdlib bytevector integers 32.
                                                              (line  12)
* bytevector-u32-ref:                    stdlib bytevector integers 32.
                                                              (line   6)
* bytevector-u32-set!:                   stdlib bytevector integers 32.
                                                              (line  10)
* bytevector-u64-native-ref:             stdlib bytevector integers 64.
                                                              (line   8)
* bytevector-u64-native-set!:            stdlib bytevector integers 64.
                                                              (line  12)
* bytevector-u64-ref:                    stdlib bytevector integers 64.
                                                              (line   6)
* bytevector-u64-set!:                   stdlib bytevector integers 64.
                                                              (line  10)
* bytevector-u8-max:                     iklib bytevectors comparison.
                                                              (line  27)
* bytevector-u8-min:                     iklib bytevectors comparison.
                                                              (line  28)
* bytevector-u8-ref:                     stdlib bytevector bytes and octets.
                                                              (line   6)
* bytevector-u8-set!:                    stdlib bytevector bytes and octets.
                                                              (line  25)
* bytevector-u8<=?:                      iklib bytevectors comparison.
                                                              (line  13)
* bytevector-u8<?:                       iklib bytevectors comparison.
                                                              (line  11)
* bytevector-u8>=?:                      iklib bytevectors comparison.
                                                              (line  14)
* bytevector-u8>?:                       iklib bytevectors comparison.
                                                              (line  12)
* bytevector-uint-ref:                   stdlib bytevector integers.
                                                              (line   6)
* bytevector-uint-set!:                  stdlib bytevector integers.
                                                              (line   8)
* bytevector-word-count?:                iklib bytevectors valpred.
                                                              (line  21)
* bytevector-word-size?:                 iklib bytevectors valpred.
                                                              (line  16)
* bytevector=?:                          stdlib bytevector general.
                                                              (line  46)
* bytevector?:                           stdlib bytevector general.
                                                              (line  29)
* bytevectors->argv:                     iklib cstrings.      (line 121)
* bytevectors->guarded-argv:             iklib cstrings.      (line 122)
* c-callback?:                           ffi call back.       (line  74)
* c4b-list->bytevector:                  iklib bytevectors conversion.
                                                              (line 119)
* c4l-list->bytevector:                  iklib bytevectors conversion.
                                                              (line 118)
* c4n-list->bytevector:                  iklib bytevectors conversion.
                                                              (line 120)
* c8b-list->bytevector:                  iklib bytevectors conversion.
                                                              (line 129)
* c8l-list->bytevector:                  iklib bytevectors conversion.
                                                              (line 128)
* c8n-list->bytevector:                  iklib bytevectors conversion.
                                                              (line 130)
* caar:                                  baselib lists.       (line  80)
* cadr:                                  baselib lists.       (line  81)
* cafe-input-port:                       iklib cafe.          (line  36)
* call-with-bytevector-output-port:      stdlib io port output ports.
                                                              (line  70)
* call-with-bytevector-output-port <1>:  stdlib io port output ports.
                                                              (line  71)
* call-with-current-continuation:        baselib control.     (line  30)
* call-with-input-file:                  stdlib io simple.    (line  19)
* call-with-input-file <1>:              iklib io codecs.     (line  15)
* call-with-output-file:                 stdlib io simple.    (line  20)
* call-with-output-file <1>:             iklib io codecs.     (line  15)
* call-with-port:                        stdlib io port io ports.
                                                              (line 104)
* call-with-string-output-port:          stdlib io port output ports.
                                                              (line 101)
* call-with-values:                      baselib control.     (line 109)
* call/cc:                               baselib control.     (line  31)
* calloc:                                iklib memory alloc.  (line  54)
* car:                                   baselib lists.       (line  65)
* case:                                  baselib expressions derived cond.
                                                              (line  85)
* case-define:                           iklib syntaxes defines.
                                                              (line   6)
* case-define*:                          iklib syntaxes defines.
                                                              (line 101)
* case-identifiers:                      iklib syntaxes control.
                                                              (line  20)
* case-lambda:                           stdlib control.      (line 125)
* case-lambda*:                          iklib syntaxes lambdas star.
                                                              (line 180)
* case-lambda-signature.clause-signature*: expander specs signatures case-lambda.
                                                              (line  23)
* case-lambda-signature?:                expander specs signatures case-lambda.
                                                              (line  19)
* catch:                                 iklib syntaxes try.  (line  14)
* cbrt:                                  iklib numerics math. (line  21)
* cdddar:                                baselib lists.       (line  83)
* cddddr:                                baselib lists.       (line  84)
* cdr:                                   baselib lists.       (line  73)
* ceiling:                               baselib math ops part.
                                                              (line  18)
* cflonum-hash:                          iklib hashtables hashfun.
                                                              (line 113)
* cflonum?:                              iklib numerics preds.
                                                              (line  16)
* char!=?:                               iklib chars comparison.
                                                              (line   8)
* char->fixnum:                          iklib fixnums conversion.
                                                              (line   7)
* char->integer:                         baselib characters.  (line  40)
* char-alphabetic?:                      stdlib unicode characters.
                                                              (line  71)
* char-ci!=?:                            iklib chars comparison.
                                                              (line  13)
* char-ci-hash:                          iklib hashtables hashfun.
                                                              (line  91)
* char-ci<=?:                            stdlib unicode characters.
                                                              (line  63)
* char-ci<?:                             stdlib unicode characters.
                                                              (line  61)
* char-ci=?:                             stdlib unicode characters.
                                                              (line  60)
* char-ci>=?:                            stdlib unicode characters.
                                                              (line  64)
* char-ci>?:                             stdlib unicode characters.
                                                              (line  62)
* char-downcase:                         stdlib unicode characters.
                                                              (line   7)
* char-foldcase:                         stdlib unicode characters.
                                                              (line   9)
* char-general-category:                 stdlib unicode characters.
                                                              (line  96)
* char-hash:                             iklib hashtables hashfun.
                                                              (line  90)
* char-in-ascii-range?:                  iklib chars predicates.
                                                              (line  12)
* char-lower-case?:                      stdlib unicode characters.
                                                              (line  75)
* char-numeric?:                         stdlib unicode characters.
                                                              (line  72)
* char-title-case?:                      stdlib unicode characters.
                                                              (line  76)
* char-titlecase:                        stdlib unicode characters.
                                                              (line   8)
* char-upcase:                           stdlib unicode characters.
                                                              (line   6)
* char-upper-case?:                      stdlib unicode characters.
                                                              (line  74)
* char-whitespace?:                      stdlib unicode characters.
                                                              (line  73)
* char<=?:                               baselib characters.  (line  56)
* char<?:                                baselib characters.  (line  54)
* char=?:                                baselib characters.  (line  53)
* char>=?:                               baselib characters.  (line  57)
* char>?:                                baselib characters.  (line  55)
* char?:                                 baselib characters.  (line  37)
* check-for-illegal-letrec:              compiler letrec api. (line  14)
* chmax:                                 iklib chars comparison.
                                                              (line  18)
* chmin:                                 iklib chars comparison.
                                                              (line  17)
* circular-list?:                        iklib lists misc.    (line   8)
* close-input-port:                      stdlib io simple.    (line  72)
* close-output-port:                     stdlib io simple.    (line  73)
* close-port:                            stdlib io port io ports.
                                                              (line  97)
* close-shared-object:                   ffi shared.          (line  34)
* closed-port?:                          iklib io misc.       (line  39)
* closure-type-spec.signature:           expander specs closure.
                                                              (line  21)
* closure-type-spec?:                    expander specs closure.
                                                              (line  17)
* code->thunk:                           syslib codes safe.   (line  45)
* code-freevars:                         syslib codes safe.   (line  26)
* code-ref:                              syslib codes safe.   (line  39)
* code-reloc-vector:                     syslib codes safe.   (line  31)
* code-reloc-vector->sexp:               syslib codes safe.   (line  51)
* code-set!:                             syslib codes safe.   (line  34)
* code-size:                             syslib codes safe.   (line  22)
* code?:                                 syslib codes safe.   (line  19)
* collect:                               iklib gc.            (line   6)
* collect <1>:                           iklib gc.            (line   7)
* collected-struct-type:                 ffi foreign wrapper syntax.
                                                              (line  14)
* collection-avoidance-list:             iklib gc.            (line 102)
* collector-struct-type:                 ffi foreign wrapper syntax.
                                                              (line  13)
* command-line:                          stdlib programlib.   (line   9)
* command-line-arguments:                iklib cmdline.       (line   8)
* compar-bignum:                         syslib compar numerics.
                                                              (line  12)
* compar-boolean:                        syslib compar misc.  (line   9)
* compar-char:                           syslib compar textual.
                                                              (line   9)
* compar-exact-integer:                  syslib compar numerics.
                                                              (line  15)
* compar-exact-real:                     syslib compar numerics.
                                                              (line  21)
* compar-false:                          syslib compar misc.  (line  14)
* compar-fixnum:                         syslib compar numerics.
                                                              (line   9)
* compar-flonum:                         syslib compar numerics.
                                                              (line  24)
* compar-pointer:                        syslib compar misc.  (line  23)
* compar-ratnum:                         syslib compar numerics.
                                                              (line  18)
* compar-real:                           syslib compar numerics.
                                                              (line  27)
* compar-string:                         syslib compar textual.
                                                              (line  12)
* compar-string-ci:                      syslib compar textual.
                                                              (line  15)
* compar-symbol:                         syslib compar textual.
                                                              (line  18)
* compar-transcoder:                     syslib compar misc.  (line  19)
* compar-true:                           syslib compar misc.  (line  13)
* comparison-procedure:                  iklib records defs.  (line  16)
* compensate:                            iklib compensations api.
                                                              (line  55)
* compile-core-expr->code:               compiler full.       (line  30)
* compile-time-library-locator:          libutils file-system locators compile.
                                                              (line 166)
* compiled-libraries-build-directory:    libutils compiling special build.
                                                              (line   8)
* compiler-options:                      iklib eval.          (line  30)
* complement-type-spec.item-ots:         expander specs complement.
                                                              (line  22)
* complement-type-spec?:                 expander specs complement.
                                                              (line  18)
* complex-conjugate:                     iklib numerics math. (line 101)
* complex?:                              baselib math ops type pred.
                                                              (line   7)
* compnum-hash:                          iklib hashtables hashfun.
                                                              (line 119)
* compnum?:                              iklib numerics preds.
                                                              (line  20)
* compound-condition-type-spec.component-ots*: expander specs condobj.
                                                              (line  23)
* compound-condition-type-spec?:         expander specs condobj.
                                                              (line  19)
* compound-condition?:                   iklib conditions misc.
                                                              (line   6)
* concurrently:                          iklib coroutines syntaxes.
                                                              (line   6)
* cond:                                  baselib expressions derived cond.
                                                              (line   6)
* condition:                             stdlib exceptions conditions objects.
                                                              (line  24)
* condition-accessor:                    stdlib exceptions conditions objects.
                                                              (line  56)
* condition-accessor <1>:                iklib conditions core.
                                                              (line   6)
* condition-accessor <2>:                iklib conditions core.
                                                              (line   7)
* condition-and-rtd?:                    iklib conditions misc.
                                                              (line  20)
* condition-errno:                       iklib conditions errno.
                                                              (line  19)
* condition-failed-expression:           iklib conditions failexpr.
                                                              (line  39)
* condition-irritants:                   stdlib exceptions conditions types.
                                                              (line 109)
* condition-message:                     stdlib exceptions conditions types.
                                                              (line  37)
* condition-one-based-return-value-index: iklib conditions exprindex.
                                                              (line  51)
* condition-predicate:                   stdlib exceptions conditions objects.
                                                              (line  47)
* condition-shared-object-closing-so-handle: ffi shared.      (line 109)
* condition-shared-object-lookup-foreign-symbol: ffi shared.  (line 136)
* condition-shared-object-lookup-so-handle: ffi shared.       (line 135)
* condition-shared-object-opening-name:  ffi shared.          (line  87)
* condition-who:                         stdlib exceptions conditions types.
                                                              (line 125)
* condition?:                            stdlib exceptions conditions objects.
                                                              (line  43)
* conforming-library-name-and-library-reference?: libutils refs conform.
                                                              (line 286)
* conforming-sub-version-and-sub-version-reference?: libutils refs conform.
                                                              (line   8)
* conforming-version-and-version-reference?: libutils refs conform.
                                                              (line 101)
* cons:                                  baselib lists.       (line  54)
* cons*:                                 stdlib list.         (line 413)
* cons* <1>:                             stdlib list.         (line 414)
* console-error-port:                    iklib io binary.     (line  57)
* console-error-port <1>:                iklib io binary.     (line  58)
* console-input-port:                    iklib io binary.     (line  32)
* console-input-port <1>:                iklib io binary.     (line  33)
* console-output-port:                   iklib io binary.     (line  45)
* console-output-port <1>:               iklib io binary.     (line  46)
* constructor-signature:                 iklib records defs.  (line  12)
* continue:                              iklib syntaxes loops while.
                                                              (line   7)
* continue <1>:                          iklib syntaxes loops until.
                                                              (line   7)
* continue <2>:                          iklib syntaxes loops for.
                                                              (line   7)
* continue <3>:                          iklib syntaxes loops do.
                                                              (line  10)
* continue <4>:                          iklib syntaxes loops fluids.
                                                              (line   6)
* core-type-spec.parent-and-child?:      expander specs core. (line  27)
* core-type-spec.type-descriptor-id:     expander specs core. (line  22)
* core-type-spec?:                       expander specs core. (line  18)
* coroutine:                             iklib coroutines basic.
                                                              (line   6)
* coroutine-uid:                         iklib coroutines uid.
                                                              (line   6)
* coroutine-uid?:                        iklib coroutines uid.
                                                              (line  10)
* cos:                                   baselib math ops trascend.
                                                              (line  10)
* cosh:                                  iklib numerics math. (line  89)
* cp0-effort-limit:                      compiler optimisation.
                                                              (line  41)
* cp0-size-limit:                        compiler optimisation.
                                                              (line  48)
* cpu-architecture:                      iklib env-inquiry.   (line  58)
* cstring->bytevector:                   iklib cstrings.      (line  30)
* cstring->bytevector <1>:               iklib cstrings.      (line  31)
* cstring->string:                       iklib cstrings.      (line  68)
* cstring->string <1>:                   iklib cstrings.      (line  69)
* cstring16->bytevector:                 iklib cstrings.      (line  49)
* cstring16be->string:                   iklib cstrings.      (line  57)
* cstring16le->string:                   iklib cstrings.      (line  56)
* cstring16n->string:                    iklib cstrings.      (line  55)
* cube:                                  iklib numerics math. (line  18)
* current-binary-library-loader:         libutils loading.    (line  92)
* current-error-port:                    stdlib io port output ports.
                                                              (line 124)
* current-error-port <1>:                stdlib io simple.    (line  41)
* current-error-port <2>:                iklib io textual.    (line  18)
* current-include-file-loader:           includes.            (line 157)
* current-include-file-locator:          includes.            (line 128)
* current-include-loader:                includes.            (line  87)
* current-inferior-lexenv:               expander lexenv internal.
                                                              (line  22)
* current-input-port:                    stdlib io port input ports.
                                                              (line  89)
* current-input-port <1>:                stdlib io simple.    (line  39)
* current-input-port <2>:                iklib io textual.    (line   8)
* current-letrec-pass:                   compiler letrec api. (line  24)
* current-library-binary-search-path-scanner: libutils file-system binary.
                                                              (line   8)
* current-library-loader:                libutils loading.    (line  14)
* current-library-locator:               libutils locating.   (line  15)
* current-library-source-search-path-scanner: libutils file-system source.
                                                              (line   8)
* current-output-port:                   stdlib io port output ports.
                                                              (line 123)
* current-output-port <1>:               stdlib io simple.    (line  40)
* current-output-port <2>:               iklib io textual.    (line  13)
* current-source-library-loader:         libutils loading.    (line  52)
* current-time:                          iklib time epoch.    (line  20)
* custom-printer:                        iklib records defs.  (line  14)
* date-string:                           iklib time date.     (line   8)
* datum->syntax:                         stdlib syntax-case conversion.
                                                              (line  18)
* debug-print:                           iklib printing debug.
                                                              (line   6)
* debug-print*:                          iklib printing debug.
                                                              (line  16)
* debug-print-enabled?:                  iklib printing debug.
                                                              (line  11)
* default-binary-library-loader:         libutils loading.    (line 105)
* default-include-file-loader:           includes.            (line 166)
* default-include-file-locator:          includes.            (line 140)
* default-include-loader:                includes.            (line 109)
* default-library-binary-search-path-scanner: libutils file-system binary.
                                                              (line  34)
* default-library-loader:                libutils loading.    (line  26)
* default-library-source-search-path-scanner: libutils file-system source.
                                                              (line  34)
* default-source-library-loader:         libutils loading.    (line  67)
* define:                                baselib definitions variables.
                                                              (line  10)
* define <1>:                            baselib definitions variables.
                                                              (line  11)
* define <2>:                            baselib definitions variables.
                                                              (line  12)
* define <3>:                            baselib definitions variables.
                                                              (line  13)
* define*:                               iklib syntaxes defines.
                                                              (line  13)
* define* <1>:                           iklib syntaxes defines.
                                                              (line  14)
* define* <2>:                           iklib syntaxes defines.
                                                              (line  15)
* define* <3>:                           iklib syntaxes defines.
                                                              (line  16)
* define-alias:                          iklib syntaxes defstxs.
                                                              (line  62)
* define-auxiliary-syntaxes:             iklib syntaxes defstxs.
                                                              (line  54)
* define-condition-type:                 stdlib exceptions conditions objects.
                                                              (line 115)
* define-constant:                       iklib syntaxes defstxs.
                                                              (line  35)
* define-constant-values:                iklib syntaxes defines.
                                                              (line 121)
* define-enumeration:                    stdlib enum.         (line 150)
* define-fluid-syntax:                   iklib expander fluids.
                                                              (line  24)
* define-foreign-pointer-wrapper:        ffi foreign wrapper syntax.
                                                              (line   9)
* define-inline:                         iklib syntaxes defines.
                                                              (line 133)
* define-inline <1>:                     iklib syntaxes integrable.
                                                              (line  29)
* define-inline-constant:                iklib syntaxes defines.
                                                              (line 148)
* define-integrable:                     iklib syntaxes defines.
                                                              (line 153)
* define-integrable <1>:                 iklib syntaxes integrable.
                                                              (line  45)
* define-macro:                          stdlib syntax-case lisp.
                                                              (line   6)
* define-record-type:                    stdlib records syntactic layer.
                                                              (line  16)
* define-record-type <1>:                iklib records defs.  (line   6)
* define-struct:                         syslib structs safe define.
                                                              (line   6)
* define-struct <1>:                     syslib structs safe define.
                                                              (line   7)
* define-struct <2>:                     syslib structs safe define.
                                                              (line   8)
* define-struct <3>:                     syslib structs safe define.
                                                              (line  10)
* define-syntax:                         baselib definitions syntax.
                                                              (line  10)
* define-syntax <1>:                     iklib syntaxes defstxs.
                                                              (line   6)
* define-syntax <2>:                     iklib syntaxes defstxs.
                                                              (line   7)
* define-syntax <3>:                     iklib syntaxes defstxs.
                                                              (line   8)
* define-syntax-parameter:               iklib expander parameters.
                                                              (line  59)
* define-syntax-rule:                    iklib syntaxes defstxs.
                                                              (line  42)
* define-type-descriptors:               iklib records defs.  (line  18)
* define-values:                         iklib syntaxes defines.
                                                              (line 111)
* delay:                                 stdlib rfive compat. (line  82)
* delete-duplicate-identifiers:          expander utils id.   (line 104)
* delete-duplicate-identifiers <1>:      expander utils id.   (line 105)
* delete-file:                           stdlib files.        (line  17)
* denominator:                           baselib math ops part.
                                                              (line   7)
* deprefix:                              iklib expander export specs.
                                                              (line  18)
* deprefix <1>:                          iklib expander import specs.
                                                              (line   6)
* destructor-protocol:                   iklib records defs.  (line  11)
* desuffix:                              iklib expander export specs.
                                                              (line  42)
* desuffix <1>:                          iklib expander import specs.
                                                              (line  29)
* directory+library-stem->library-binary-pathname: libutils file-system pathnames.
                                                              (line  38)
* directory+library-stem->library-source-pathname: libutils file-system pathnames.
                                                              (line  36)
* directory-exists?:                     iklib io pathnames.  (line  24)
* display:                               stdlib io simple.    (line 123)
* display <1>:                           stdlib io simple.    (line 124)
* div:                                   baselib math ops arithmetic.
                                                              (line 111)
* div-and-mod:                           baselib math ops arithmetic.
                                                              (line 110)
* div0:                                  baselib math ops arithmetic.
                                                              (line 114)
* div0-and-mod0:                         baselib math ops arithmetic.
                                                              (line 113)
* dlclose:                               ffi dl.              (line  52)
* dlerror:                               ffi dl.              (line  74)
* dlopen:                                ffi dl.              (line  11)
* dlopen <1>:                            ffi dl.              (line  12)
* dlopen <2>:                            ffi dl.              (line  13)
* dlsym:                                 ffi dl.              (line  64)
* do:                                    stdlib control.      (line  50)
* do <1>:                                iklib syntaxes loops do.
                                                              (line   6)
* do <2>:                                iklib syntaxes loops do.
                                                              (line   7)
* do*:                                   iklib syntaxes loops do*.
                                                              (line   6)
* dolist:                                iklib syntaxes loops dolist.
                                                              (line   6)
* dolist <1>:                            iklib syntaxes loops dolist.
                                                              (line   7)
* dotimes:                               iklib syntaxes loops dotimes.
                                                              (line   6)
* dotimes <1>:                           iklib syntaxes loops dotimes.
                                                              (line   7)
* dump-coroutines:                       iklib coroutines debug.
                                                              (line  10)
* duplicate-identifiers?:                expander utils id.   (line  94)
* duplicate-identifiers? <1>:            expander utils id.   (line  95)
* dynamic-wind:                          baselib control.     (line 133)
* else:                                  baselib expressions derived cond.
                                                              (line   8)
* else <1>:                              baselib expressions derived cond.
                                                              (line  87)
* else <2>:                              stdlib exceptions exceptions.
                                                              (line  50)
* else <3>:                              iklib syntaxes control.
                                                              (line  21)
* else <4>:                              iklib syntaxes try.  (line  16)
* empty-bytevector?:                     iklib bytevectors predicates.
                                                              (line  10)
* empty-string?:                         iklib strings predicates.
                                                              (line  18)
* empty-vector?:                         iklib vectors predicates.
                                                              (line  10)
* endianness:                            stdlib bytevector general.
                                                              (line   6)
* endianness <1>:                        iklib syntaxes misc. (line   6)
* engine-handler:                        iklib engines.       (line   9)
* enum-set->list:                        stdlib enum.         (line  68)
* enum-set-complement:                   stdlib enum.         (line 127)
* enum-set-constructor:                  stdlib enum.         (line  62)
* enum-set-difference:                   stdlib enum.         (line 106)
* enum-set-hash:                         iklib hashtables hashfun.
                                                              (line 139)
* enum-set-indexer:                      stdlib enum.         (line  37)
* enum-set-intersection:                 stdlib enum.         (line 105)
* enum-set-member?:                      stdlib enum.         (line  76)
* enum-set-projection:                   stdlib enum.         (line 136)
* enum-set-subset?:                      stdlib enum.         (line  77)
* enum-set-union:                        stdlib enum.         (line 104)
* enum-set-universe:                     stdlib enum.         (line  33)
* enum-set=?:                            stdlib enum.         (line  78)
* enum-set?:                             iklib enumerations.  (line   8)
* enumeration-type-spec.member?:         expander specs enum. (line  25)
* enumeration-type-spec.symbol*:         expander specs enum. (line  21)
* enumeration-type-spec?:                expander specs enum. (line  17)
* environ:                               iklib misc.          (line  86)
* environment:                           stdlib eval.         (line  23)
* environment-binding:                   iklib environment.   (line 178)
* environment-labels:                    iklib environment.   (line 168)
* environment-libraries:                 iklib environment.   (line 174)
* environment-symbols:                   iklib environment.   (line 152)
* environment?:                          iklib environment.   (line   8)
* eof-object:                            stdlib io port eof object.
                                                              (line   9)
* eof-object <1>:                        stdlib io simple.    (line  14)
* eof-object-hash:                       iklib hashtables hashfun.
                                                              (line 149)
* eof-object?:                           stdlib io port eof object.
                                                              (line  18)
* eof-object? <1>:                       stdlib io simple.    (line  15)
* eol-style:                             stdlib io port transcoders.
                                                              (line  38)
* epoch-time-addition:                   iklib time epoch.    (line  44)
* epoch-time-subtraction:                iklib time epoch.    (line  48)
* epoch-time?:                           iklib time epoch.    (line  30)
* eq?:                                   baselib predicates.  (line 171)
* equal-hash:                            stdlib hashtable hash functions.
                                                              (line  11)
* equal?:                                baselib predicates.  (line 203)
* equality-predicate:                    iklib records defs.  (line  15)
* eqv?:                                  baselib predicates.  (line  14)
* errno:                                 iklib errno.         (line  28)
* errno <1>:                             iklib errno.         (line  29)
* errno-condition?:                      iklib conditions errno.
                                                              (line  16)
* error:                                 baselib errors.      (line   6)
* error-handling-mode:                   stdlib io port transcoders.
                                                              (line 104)
* error?:                                stdlib exceptions conditions types.
                                                              (line  73)
* eval:                                  stdlib eval.         (line   9)
* eval <1>:                              iklib eval.          (line   8)
* eval <2>:                              iklib eval.          (line   9)
* even?:                                 baselib math ops value pred.
                                                              (line  52)
* exact:                                 baselib math ops exactness.
                                                              (line  25)
* exact->inexact:                        stdlib rfive compat. (line  11)
* exact-compnum?:                        iklib numerics preds.
                                                              (line  28)
* exact-integer-hash:                    iklib hashtables hashfun.
                                                              (line 104)
* exact-integer-sqrt:                    baselib math ops exponentiation.
                                                              (line  21)
* exact-integer?:                        iklib numerics preds.
                                                              (line  25)
* exact?:                                baselib math ops type pred.
                                                              (line 131)
* exists:                                stdlib list.         (line  32)
* exit:                                  stdlib programlib.   (line  15)
* exit <1>:                              stdlib programlib.   (line  16)
* exit-hooks:                            iklib misc.          (line 109)
* exp:                                   baselib math ops trascend.
                                                              (line   6)
* expand-form-to-core-language:          expander utils expanding.
                                                              (line   8)
* expand-library:                        libutils expanding.  (line   8)
* expand-library <1>:                    libutils expanding.  (line   9)
* expand-library <2>:                    libutils expanding.  (line  10)
* expand-library->sexp:                  libutils expanding.  (line  28)
* expand-time-expr:                      iklib syntaxes misc. (line  85)
* expand-time-value-object:              iklib expander etv.  (line  47)
* expand-time-value?:                    iklib expander etv.  (line  43)
* expand-top-level-program:              progutils expanding. (line   8)
* expand-top-level-program->sexp:        progutils expanding. (line  33)
* expander-options:                      iklib eval.          (line  14)
* expansion-of:                          iklib syntaxes expansion-of.
                                                              (line   6)
* expansion-of*:                         iklib syntaxes expansion-of.
                                                              (line  60)
* expect-single-argument-and-return-false: iklib misc.        (line  35)
* expect-single-argument-and-return-it:  iklib misc.          (line  33)
* expect-single-argument-and-return-true: iklib misc.         (line  34)
* export:                                iklib expander extended export.
                                                              (line  10)
* expression-return-value-violation:     iklib conditions exprret.
                                                              (line  18)
* expression-return-value-violation?:    iklib conditions exprret.
                                                              (line  14)
* expt:                                  baselib math ops exponentiation.
                                                              (line  28)
* f4b-list->bytevector:                  iklib bytevectors conversion.
                                                              (line  99)
* f4l-list->bytevector:                  iklib bytevectors conversion.
                                                              (line  98)
* f4n-list->bytevector:                  iklib bytevectors conversion.
                                                              (line 100)
* f8b-list->bytevector:                  iklib bytevectors conversion.
                                                              (line 109)
* f8l-list->bytevector:                  iklib bytevectors conversion.
                                                              (line 108)
* f8n-list->bytevector:                  iklib bytevectors conversion.
                                                              (line 110)
* factorial:                             iklib numerics math. (line  79)
* failed-expression-condition?:          iklib conditions failexpr.
                                                              (line  35)
* false-or-c-callback?:                  ffi call back.       (line  75)
* false-or-pointer?:                     iklib pointers pred. (line  12)
* false?:                                iklib booleans.      (line  12)
* faraway-time:                          iklib time epoch.    (line  26)
* fasl-read:                             fasl api.            (line  15)
* fasl-write:                            fasl api.            (line   8)
* fasl-write <1>:                        fasl api.            (line   9)
* fields:                                stdlib records syntactic layer.
                                                              (line  62)
* fields <1>:                            iklib records defs.  (line   7)
* fields <2>:                            ffi foreign wrapper syntax.
                                                              (line  11)
* file-absolute-pathname?:               iklib io pathnames.  (line  37)
* file-bytevector-absolute-pathname?:    iklib io pathnames.  (line  39)
* file-bytevector-colon-search-path?:    iklib io pathnames.  (line  80)
* file-bytevector-pathname?:             iklib io pathnames.  (line  33)
* file-bytevector-relative-pathname?:    iklib io pathnames.  (line  49)
* file-colon-search-path?:               iklib io pathnames.  (line  78)
* file-exists?:                          stdlib files.        (line  11)
* file-options:                          stdlib io port file options.
                                                              (line  12)
* file-options <1>:                      iklib io misc.       (line  67)
* file-pathname?:                        iklib io pathnames.  (line  31)
* file-relative-pathname?:               iklib io pathnames.  (line  47)
* file-string-absolute-pathname?:        iklib io pathnames.  (line  38)
* file-string-colon-search-path?:        iklib io pathnames.  (line  79)
* file-string-pathname?:                 iklib io pathnames.  (line  32)
* file-string-relative-pathname?:        iklib io pathnames.  (line  48)
* filename->string-func:                 iklib io pathnames.  (line  18)
* filter:                                stdlib list.         (line 112)
* finally:                               iklib syntaxes try.  (line  15)
* find:                                  stdlib list.         (line   9)
* find-library-by-descriptor:            libutils interning.  (line  46)
* find-library-by-name:                  libutils interning.  (line  26)
* find-library-by-reference:             libutils interning.  (line  36)
* find-library-in-collection-by-descriptor: libutils interning.
                                                              (line  77)
* find-library-in-collection-by-name:    libutils interning.  (line  65)
* find-library-in-collection-by-predicate: libutils interning.
                                                              (line  57)
* find-library-in-collection-by-reference: libutils interning.
                                                              (line  71)
* finish-coroutines:                     iklib coroutines basic.
                                                              (line  14)
* finish-coroutines <1>:                 iklib coroutines basic.
                                                              (line  15)
* finite?:                               baselib math ops value pred.
                                                              (line  53)
* fixnum->char:                          iklib fixnums conversion.
                                                              (line   6)
* fixnum->flonum:                        stdlib arithmetic flonums.
                                                              (line 299)
* fixnum->string:                        iklib fixnums conversion.
                                                              (line  10)
* fixnum->string <1>:                    iklib fixnums conversion.
                                                              (line  11)
* fixnum-hash:                           iklib hashtables hashfun.
                                                              (line  98)
* fixnum-in-character-range?:            iklib chars predicates.
                                                              (line  16)
* fixnum-width:                          stdlib arithmetic fixnums.
                                                              (line  26)
* fixnum?:                               stdlib arithmetic fixnums.
                                                              (line  22)
* fl!=?:                                 iklib flonums.       (line  52)
* fl*:                                   stdlib arithmetic flonums.
                                                              (line 101)
* fl+:                                   stdlib arithmetic flonums.
                                                              (line 100)
* fl-:                                   stdlib arithmetic flonums.
                                                              (line 112)
* fl- <1>:                               stdlib arithmetic flonums.
                                                              (line 113)
* fl/:                                   stdlib arithmetic flonums.
                                                              (line 114)
* fl/ <1>:                               stdlib arithmetic flonums.
                                                              (line 115)
* fl<=?:                                 stdlib arithmetic flonums.
                                                              (line  29)
* fl<?:                                  stdlib arithmetic flonums.
                                                              (line  28)
* fl=?:                                  stdlib arithmetic flonums.
                                                              (line  27)
* fl>=?:                                 stdlib arithmetic flonums.
                                                              (line  31)
* fl>?:                                  stdlib arithmetic flonums.
                                                              (line  30)
* flabs:                                 stdlib arithmetic flonums.
                                                              (line 137)
* flacos:                                stdlib arithmetic flonums.
                                                              (line 221)
* flacosh:                               iklib flonums.       (line  94)
* flasin:                                stdlib arithmetic flonums.
                                                              (line 220)
* flasinh:                               iklib flonums.       (line  93)
* flatan:                                stdlib arithmetic flonums.
                                                              (line 222)
* flatan <1>:                            stdlib arithmetic flonums.
                                                              (line 223)
* flatanh:                               iklib flonums.       (line  95)
* flcbrt:                                iklib flonums.       (line 107)
* flceiling:                             stdlib arithmetic flonums.
                                                              (line 186)
* flcos:                                 stdlib arithmetic flonums.
                                                              (line 218)
* flcosh:                                iklib flonums.       (line  89)
* flcube:                                iklib flonums.       (line 104)
* fldenominator:                         stdlib arithmetic flonums.
                                                              (line 168)
* fldiv:                                 stdlib arithmetic flonums.
                                                              (line 141)
* fldiv-and-mod:                         stdlib arithmetic flonums.
                                                              (line 140)
* fldiv0:                                stdlib arithmetic flonums.
                                                              (line 144)
* fldiv0-and-mod0:                       stdlib arithmetic flonums.
                                                              (line 143)
* fleven?:                               stdlib arithmetic flonums.
                                                              (line  50)
* flexp:                                 stdlib arithmetic flonums.
                                                              (line 214)
* flexpm1:                               iklib flonums.       (line  78)
* flexpt:                                stdlib arithmetic flonums.
                                                              (line 265)
* flfinite?:                             stdlib arithmetic flonums.
                                                              (line  51)
* flfloor:                               stdlib arithmetic flonums.
                                                              (line 185)
* flhypot:                               iklib flonums.       (line  81)
* flinfinite?:                           stdlib arithmetic flonums.
                                                              (line  52)
* flinteger?:                            stdlib arithmetic flonums.
                                                              (line  45)
* fllog:                                 stdlib arithmetic flonums.
                                                              (line 215)
* fllog <1>:                             stdlib arithmetic flonums.
                                                              (line 216)
* fllog1p:                               iklib flonums.       (line  75)
* flmax:                                 stdlib arithmetic flonums.
                                                              (line  94)
* flmin:                                 stdlib arithmetic flonums.
                                                              (line  95)
* flmod:                                 stdlib arithmetic flonums.
                                                              (line 142)
* flmod0:                                stdlib arithmetic flonums.
                                                              (line 145)
* flnan?:                                stdlib arithmetic flonums.
                                                              (line  53)
* flnegative?:                           stdlib arithmetic flonums.
                                                              (line  48)
* flnonnegative?:                        iklib flonums.       (line  16)
* flnonpositive?:                        iklib flonums.       (line  15)
* flnumerator:                           stdlib arithmetic flonums.
                                                              (line 167)
* flodd?:                                stdlib arithmetic flonums.
                                                              (line  49)
* flonum->bytevector:                    iklib debug.         (line  25)
* flonum->string:                        iklib flonums.       (line  69)
* flonum-bytes:                          iklib flonums.       (line 113)
* flonum-hash:                           iklib hashtables hashfun.
                                                              (line 107)
* flonum-hash <1>:                       iklib hashtables hashfun.
                                                              (line 116)
* flonum-parts:                          iklib flonums.       (line 117)
* flonum?:                               stdlib arithmetic flonums.
                                                              (line  13)
* floor:                                 baselib math ops part.
                                                              (line  17)
* flpositive?:                           stdlib arithmetic flonums.
                                                              (line  47)
* flround:                               stdlib arithmetic flonums.
                                                              (line 188)
* flsin:                                 stdlib arithmetic flonums.
                                                              (line 217)
* flsinh:                                iklib flonums.       (line  88)
* flsqrt:                                stdlib arithmetic flonums.
                                                              (line 257)
* flsquare:                              iklib flonums.       (line 101)
* fltan:                                 stdlib arithmetic flonums.
                                                              (line 219)
* fltanh:                                iklib flonums.       (line  90)
* fltruncate:                            stdlib arithmetic flonums.
                                                              (line 187)
* fluid-let-syntax:                      iklib expander fluids.
                                                              (line  29)
* flush-output-port:                     stdlib io port output ports.
                                                              (line  14)
* flzero?:                               stdlib arithmetic flonums.
                                                              (line  46)
* flzero?/negative:                      iklib flonums.       (line  61)
* flzero?/positive:                      iklib flonums.       (line  60)
* fold-left:                             stdlib list.         (line 144)
* fold-right:                            stdlib list.         (line 202)
* for:                                   iklib syntaxes loops for.
                                                              (line   6)
* for-all:                               stdlib list.         (line  31)
* for-each:                              baselib lists.       (line 200)
* for-each-in-order:                     iklib lists misc.    (line  27)
* force:                                 stdlib rfive compat. (line  91)
* foreign-call:                          foreign.             (line   6)
* foreign-destructor:                    ffi foreign wrapper syntax.
                                                              (line  12)
* forget-to-avoid-collecting:            iklib gc.            (line  75)
* format:                                iklib printing formatting.
                                                              (line   6)
* fprintf:                               iklib printing formatting.
                                                              (line  66)
* free:                                  iklib memory alloc.  (line  68)
* free-c-callback:                       ffi call back.       (line  69)
* free-identifier=?:                     stdlib syntax-case identifier.
                                                              (line 109)
* further-optimisation-of:               iklib syntaxes optim-of.
                                                              (line  52)
* further-optimisation-of*:              iklib syntaxes optim-of.
                                                              (line  75)
* fx!=:                                  iklib fixnums comparison.
                                                              (line  14)
* fx!=?:                                 iklib fixnums comparison.
                                                              (line  13)
* fx*:                                   stdlib arithmetic fixnums.
                                                              (line  57)
* fx*/carry:                             stdlib arithmetic fixnums.
                                                              (line 116)
* fx+:                                   stdlib arithmetic fixnums.
                                                              (line  56)
* fx+/carry:                             stdlib arithmetic fixnums.
                                                              (line 100)
* fx-:                                   stdlib arithmetic fixnums.
                                                              (line  63)
* fx- <1>:                               stdlib arithmetic fixnums.
                                                              (line  64)
* fx-/carry:                             stdlib arithmetic fixnums.
                                                              (line 108)
* fx<:                                   iklib fixnums comparison.
                                                              (line   7)
* fx<=:                                  iklib fixnums comparison.
                                                              (line   9)
* fx<=?:                                 stdlib arithmetic fixnums.
                                                              (line  36)
* fx<?:                                  stdlib arithmetic fixnums.
                                                              (line  34)
* fx=:                                   iklib fixnums comparison.
                                                              (line   6)
* fx=?:                                  stdlib arithmetic fixnums.
                                                              (line  32)
* fx>:                                   iklib fixnums comparison.
                                                              (line   8)
* fx>=:                                  iklib fixnums comparison.
                                                              (line  10)
* fx>=?:                                 stdlib arithmetic fixnums.
                                                              (line  35)
* fx>?:                                  stdlib arithmetic fixnums.
                                                              (line  33)
* fxabs:                                 iklib fixnums arithmetics.
                                                              (line  10)
* fxadd1:                                iklib fixnums arithmetics.
                                                              (line   6)
* fxand:                                 stdlib arithmetic fixnums.
                                                              (line 128)
* fxarithmetic-shift:                    stdlib arithmetic fixnums.
                                                              (line 239)
* fxarithmetic-shift-left:               stdlib arithmetic fixnums.
                                                              (line 249)
* fxarithmetic-shift-right:              stdlib arithmetic fixnums.
                                                              (line 250)
* fxbit-count:                           stdlib arithmetic fixnums.
                                                              (line 149)
* fxbit-field:                           stdlib arithmetic fixnums.
                                                              (line 203)
* fxbit-set?:                            stdlib arithmetic fixnums.
                                                              (line 177)
* fxcopy-bit:                            stdlib arithmetic fixnums.
                                                              (line 191)
* fxcopy-bit-field:                      stdlib arithmetic fixnums.
                                                              (line 216)
* fxdiv:                                 stdlib arithmetic fixnums.
                                                              (line  78)
* fxdiv-and-mod:                         stdlib arithmetic fixnums.
                                                              (line  77)
* fxdiv0:                                stdlib arithmetic fixnums.
                                                              (line  81)
* fxdiv0-and-mod0:                       stdlib arithmetic fixnums.
                                                              (line  80)
* fxeven?:                               stdlib arithmetic fixnums.
                                                              (line  46)
* fxfirst-bit-set:                       stdlib arithmetic fixnums.
                                                              (line 169)
* fxif:                                  stdlib arithmetic fixnums.
                                                              (line 138)
* fxior:                                 stdlib arithmetic fixnums.
                                                              (line 129)
* fxlength:                              stdlib arithmetic fixnums.
                                                              (line 156)
* fxmax:                                 stdlib arithmetic fixnums.
                                                              (line  52)
* fxmin:                                 stdlib arithmetic fixnums.
                                                              (line  53)
* fxmod:                                 stdlib arithmetic fixnums.
                                                              (line  79)
* fxmod0:                                stdlib arithmetic fixnums.
                                                              (line  82)
* fxmodulo:                              iklib fixnums arithmetics.
                                                              (line  24)
* fxnegative?:                           stdlib arithmetic fixnums.
                                                              (line  44)
* fxnonnegative?:                        iklib fixnums predicates.
                                                              (line  11)
* fxnonpositive?:                        iklib fixnums predicates.
                                                              (line  10)
* fxnot:                                 stdlib arithmetic fixnums.
                                                              (line 124)
* fxodd?:                                stdlib arithmetic fixnums.
                                                              (line  45)
* fxpositive?:                           stdlib arithmetic fixnums.
                                                              (line  43)
* fxquotient:                            iklib fixnums arithmetics.
                                                              (line  22)
* fxremainder:                           iklib fixnums arithmetics.
                                                              (line  23)
* fxreverse-bit-field:                   stdlib arithmetic fixnums.
                                                              (line 279)
* fxrotate-bit-field:                    stdlib arithmetic fixnums.
                                                              (line 257)
* fxsign:                                iklib fixnums arithmetics.
                                                              (line  18)
* fxsub1:                                iklib fixnums arithmetics.
                                                              (line   7)
* fxxor:                                 stdlib arithmetic fixnums.
                                                              (line 130)
* fxzero?:                               stdlib arithmetic fixnums.
                                                              (line  42)
* fx_mask:                               objects fixnums.     (line 104)
* fx_shift:                              objects fixnums.     (line 100)
* fx_tag:                                objects fixnums.     (line  97)
* gcd:                                   baselib math ops arithmetic.
                                                              (line 140)
* generate-debug-calls:                  debug int intro.     (line  21)
* generate-descriptive-labels:           compiler options.    (line  12)
* generate-temporaries:                  stdlib syntax-case temporaries.
                                                              (line  14)
* gensym:                                iklib gensym.        (line  28)
* gensym <1>:                            iklib gensym.        (line  29)
* gensym <2>:                            iklib gensym.        (line  30)
* gensym->unique-string:                 iklib gensym.        (line  67)
* gensym-count:                          iklib printing pretty.
                                                              (line 166)
* gensym-count <1>:                      iklib printing pretty.
                                                              (line 167)
* gensym-prefix:                         iklib printing pretty.
                                                              (line 136)
* gensym-prefix <1>:                     iklib printing pretty.
                                                              (line 137)
* gensym?:                               iklib gensym.        (line  57)
* get-annotated-datum:                   iklib reader annotations.
                                                              (line  27)
* get-bytevector-all:                    stdlib io port binary input.
                                                              (line  69)
* get-bytevector-n:                      stdlib io port binary input.
                                                              (line  18)
* get-bytevector-n <1>:                  iklib io non-blocking binary.
                                                              (line  21)
* get-bytevector-n!:                     stdlib io port binary input.
                                                              (line  37)
* get-bytevector-n! <1>:                 iklib io non-blocking binary.
                                                              (line  43)
* get-bytevector-some:                   stdlib io port binary input.
                                                              (line  60)
* get-bytevector-some <1>:               iklib io non-blocking binary.
                                                              (line  71)
* get-char:                              stdlib io port textual input.
                                                              (line   6)
* get-char <1>:                          iklib io non-blocking textual.
                                                              (line   6)
* get-char-and-track-textual-position:   iklib io textual.    (line  73)
* get-datum:                             stdlib io port textual input.
                                                              (line  92)
* get-line:                              stdlib io port textual input.
                                                              (line  73)
* get-output-string:                     iklib io textual.    (line  68)
* get-string-all:                        stdlib io port textual input.
                                                              (line  63)
* get-string-all <1>:                    iklib io non-blocking textual.
                                                              (line  76)
* get-string-n:                          stdlib io port textual input.
                                                              (line  24)
* get-string-n <1>:                      iklib io non-blocking textual.
                                                              (line  31)
* get-string-n!:                         stdlib io port textual input.
                                                              (line  44)
* get-string-n! <1>:                     iklib io non-blocking textual.
                                                              (line  49)
* get-string-some:                       iklib io non-blocking textual.
                                                              (line  91)
* get-string-some <1>:                   iklib io textual.    (line 133)
* get-u8:                                stdlib io port binary input.
                                                              (line   6)
* get-u8 <1>:                            iklib io non-blocking binary.
                                                              (line   6)
* getenv:                                iklib misc.          (line  72)
* getprop:                               iklib symbols plists.
                                                              (line  32)
* greatest-fixnum:                       stdlib arithmetic fixnums.
                                                              (line  28)
* greatest-negative-bignum:              iklib numerics bignums.
                                                              (line  33)
* greek-pi:                              iklib numerics constants.
                                                              (line  21)
* greek-pi*2:                            iklib numerics constants.
                                                              (line  50)
* greek-pi*2/3:                          iklib numerics constants.
                                                              (line  56)
* greek-pi*3/4:                          iklib numerics constants.
                                                              (line  62)
* greek-pi/2:                            iklib numerics constants.
                                                              (line  26)
* greek-pi/3:                            iklib numerics constants.
                                                              (line  32)
* greek-pi/4:                            iklib numerics constants.
                                                              (line  38)
* greek-pi/6:                            iklib numerics constants.
                                                              (line  44)
* guard:                                 stdlib exceptions exceptions.
                                                              (line  48)
* guarded-calloc:                        iklib memory alloc.  (line  55)
* guarded-malloc:                        iklib memory alloc.  (line  10)
* guarded-realloc:                       iklib memory alloc.  (line  23)
* guarded-start:                         debug int intro.     (line  25)
* guarded-strdup:                        iklib cstrings.      (line  94)
* guarded-strndup:                       iklib cstrings.      (line 107)
* hash-function:                         iklib records defs.  (line  17)
* hashtable->alist:                      iklib hashtables iterators.
                                                              (line 171)
* hashtable->alist <1>:                  iklib hashtables iterators.
                                                              (line 172)
* hashtable-clear!:                      stdlib hashtable procedures.
                                                              (line  70)
* hashtable-clear! <1>:                  stdlib hashtable procedures.
                                                              (line  71)
* hashtable-contains?:                   stdlib hashtable procedures.
                                                              (line  42)
* hashtable-copy:                        stdlib hashtable procedures.
                                                              (line  64)
* hashtable-copy <1>:                    stdlib hashtable procedures.
                                                              (line  65)
* hashtable-delete!:                     stdlib hashtable procedures.
                                                              (line  32)
* hashtable-entries:                     stdlib hashtable procedures.
                                                              (line  82)
* hashtable-eq?:                         iklib hashtables pred.
                                                              (line  12)
* hashtable-equiv?:                      iklib hashtables pred.
                                                              (line  14)
* hashtable-equivalence-function:        stdlib hashtable inspection.
                                                              (line   6)
* hashtable-eqv?:                        iklib hashtables pred.
                                                              (line  13)
* hashtable-exists-entry:                iklib hashtables iterators.
                                                              (line 103)
* hashtable-exists-key:                  iklib hashtables iterators.
                                                              (line  93)
* hashtable-find-entry:                  iklib hashtables iterators.
                                                              (line 126)
* hashtable-find-key:                    iklib hashtables iterators.
                                                              (line 116)
* hashtable-fold-entries:                iklib hashtables iterators.
                                                              (line 152)
* hashtable-fold-keys:                   iklib hashtables iterators.
                                                              (line 135)
* hashtable-for-all-entries:             iklib hashtables iterators.
                                                              (line  77)
* hashtable-for-all-keys:                iklib hashtables iterators.
                                                              (line  64)
* hashtable-for-each-entry:              iklib hashtables iterators.
                                                              (line  56)
* hashtable-for-each-key:                iklib hashtables iterators.
                                                              (line  50)
* hashtable-hash-function:               stdlib hashtable inspection.
                                                              (line  11)
* hashtable-keys:                        stdlib hashtable procedures.
                                                              (line  78)
* hashtable-map-entries:                 iklib hashtables iterators.
                                                              (line  33)
* hashtable-map-keys:                    iklib hashtables iterators.
                                                              (line  17)
* hashtable-mutable?:                    stdlib hashtable inspection.
                                                              (line  15)
* hashtable-ref:                         stdlib hashtable procedures.
                                                              (line  13)
* hashtable-ref <1>:                     stdlib hashtable procedures.
                                                              (line  14)
* hashtable-set!:                        stdlib hashtable procedures.
                                                              (line  23)
* hashtable-size:                        stdlib hashtable procedures.
                                                              (line   9)
* hashtable-type-spec.key-ots:           expander specs hashtable.
                                                              (line  22)
* hashtable-type-spec.val-ots:           expander specs hashtable.
                                                              (line  23)
* hashtable-type-spec?:                  expander specs hashtable.
                                                              (line  18)
* hashtable-update!:                     stdlib hashtable procedures.
                                                              (line  46)
* hashtable?:                            stdlib hashtable procedures.
                                                              (line   6)
* hex->bytevector:                       iklib bytevectors conversion.
                                                              (line 153)
* host-info:                             iklib env-inquiry.   (line   6)
* i/o-decoding-error?:                   stdlib io port transcoders.
                                                              (line  75)
* i/o-eagain-error?:                     iklib conditions eagain.
                                                              (line  15)
* i/o-encoding-error-char:               stdlib io port transcoders.
                                                              (line  92)
* i/o-encoding-error?:                   stdlib io port transcoders.
                                                              (line  91)
* i/o-error-filename:                    stdlib io conditions.
                                                              (line  65)
* i/o-error-port:                        stdlib io conditions.
                                                              (line 134)
* i/o-error-position:                    stdlib io conditions.
                                                              (line  49)
* i/o-error?:                            stdlib io conditions.
                                                              (line  16)
* i/o-file-already-exists-error?:        stdlib io conditions.
                                                              (line 105)
* i/o-file-does-not-exist-error?:        stdlib io conditions.
                                                              (line 119)
* i/o-file-is-read-only-error?:          stdlib io conditions.
                                                              (line  91)
* i/o-file-protection-error?:            stdlib io conditions.
                                                              (line  78)
* i/o-filename-error?:                   stdlib io conditions.
                                                              (line  64)
* i/o-invalid-position-error?:           stdlib io conditions.
                                                              (line  48)
* i/o-port-error?:                       stdlib io conditions.
                                                              (line 133)
* i/o-read-error?:                       stdlib io conditions.
                                                              (line  26)
* i/o-write-error?:                      stdlib io conditions.
                                                              (line  37)
* i/o-wrong-fasl-header-error-error?:    iklib conditions wfs.
                                                              (line  14)
* icar:                                  iklib ipairs.        (line  21)
* icdr:                                  iklib ipairs.        (line  22)
* identifier->string:                    expander utils id.   (line  45)
* identifier-append:                     expander utils id.   (line  72)
* identifier-bound?:                     expander utils id.   (line   6)
* identifier-format:                     expander utils id.   (line  81)
* identifier-memq:                       expander utils id.   (line 113)
* identifier-memq <1>:                   expander utils id.   (line 114)
* identifier-prefix:                     expander utils id.   (line  52)
* identifier-record-constructor:         expander utils records.
                                                              (line   6)
* identifier-record-field-accessor:      expander utils records.
                                                              (line  28)
* identifier-record-field-mutator:       expander utils records.
                                                              (line  40)
* identifier-record-predicate:           expander utils records.
                                                              (line  17)
* identifier-struct-constructor:         expander utils structs.
                                                              (line   6)
* identifier-struct-field-accessor:      expander utils structs.
                                                              (line  28)
* identifier-struct-field-mutator:       expander utils structs.
                                                              (line  40)
* identifier-struct-predicate:           expander utils structs.
                                                              (line  17)
* identifier-suffix:                     expander utils id.   (line  63)
* identifier-syntax:                     baselib transformers.
                                                              (line 204)
* identifier-syntax <1>:                 baselib transformers.
                                                              (line 205)
* identifier=symbol?:                    expander utils compar.
                                                              (line  11)
* identifier?:                           stdlib syntax-case identifier.
                                                              (line  29)
* identifiers->list:                     expander utils pairs.
                                                              (line  37)
* identifiers->list <1>:                 expander utils pairs.
                                                              (line  38)
* if:                                    baselib expressions conditionals.
                                                              (line   6)
* if <1>:                                baselib expressions conditionals.
                                                              (line   7)
* IKA_BIGNUM_ALLOC:                      objects bignums.     (line 161)
* ika_bytevector_alloc:                  objects bytevectors. (line 133)
* ika_bytevector_from_cstring:           objects bytevectors. (line 140)
* ika_bytevector_from_cstring_len:       objects bytevectors. (line 151)
* ika_bytevector_from_memory_block:      objects bytevectors. (line 160)
* ika_bytevector_from_utf16z:            objects bytevectors. (line 170)
* ika_cflonum_from_doubles:              objects cflonums.    (line 180)
* ika_compnum_alloc_and_init:            objects compnums.    (line 181)
* ika_compnum_alloc_no_init:             objects compnums.    (line 177)
* ika_flonum_from_double:                objects flonums.     (line 121)
* ika_integer_from_int:                  objects integers.    (line  20)
* ika_integer_from_llong:                objects integers.    (line  22)
* ika_integer_from_long:                 objects integers.    (line  21)
* ika_integer_from_off_t:                objects integers.    (line  44)
* ika_integer_from_ptrdiff_t:            objects integers.    (line  48)
* ika_integer_from_sint16:               objects integers.    (line  31)
* ika_integer_from_sint32:               objects integers.    (line  32)
* ika_integer_from_sint64:               objects integers.    (line  33)
* ika_integer_from_sint8:                objects integers.    (line  30)
* ika_integer_from_size_t:               objects integers.    (line  47)
* ika_integer_from_ssize_t:              objects integers.    (line  45)
* ika_integer_from_sword:                objects integers.    (line  53)
* ika_integer_from_sword <1>:            objects integers.    (line  87)
* ika_integer_from_uint:                 objects integers.    (line  23)
* ika_integer_from_uint16:               objects integers.    (line  35)
* ika_integer_from_uint32:               objects integers.    (line  37)
* ika_integer_from_uint64:               objects integers.    (line  39)
* ika_integer_from_uint8:                objects integers.    (line  34)
* ika_integer_from_ullong:               objects integers.    (line  25)
* ika_integer_from_ulong:                objects integers.    (line  24)
* ika_integer_from_uword:                objects integers.    (line  55)
* ika_integer_from_uword <1>:            objects integers.    (line  89)
* ika_list_from_argv:                    objects pairs.       (line 138)
* ika_list_from_argv_and_argc:           objects pairs.       (line 146)
* IKA_PAIR_ALLOC:                        objects pairs.       (line  72)
* ika_pair_alloc:                        objects pairs.       (line 108)
* ika_pointer_alloc:                     objects pointers.    (line 113)
* ika_ratnum_alloc_and_init:             objects ratnums.     (line 183)
* ika_ratnum_alloc_no_init:              objects ratnums.     (line 179)
* ika_string_alloc:                      objects strings.     (line 158)
* ika_string_from_cstring:               objects strings.     (line 165)
* ika_struct_alloc_and_init:             objects structs.     (line 338)
* ika_struct_alloc_no_init:              objects structs.     (line 330)
* ika_vector_alloc_and_init:             objects vectors.     (line 220)
* ika_vector_alloc_no_init:              objects vectors.     (line 209)
* ikpair?:                               iklib ipairs.        (line  18)
* ikrt_bytevector_copy:                  objects bytevectors. (line 183)
* ikrt_general_copy:                     objects misc func.   (line   6)
* ikrt_is_pointer:                       objects pointers.    (line 109)
* ikrt_vector_clean:                     objects vectors.     (line 236)
* ikrt_vector_copy:                      objects vectors.     (line 240)
* iku_cflonum_alloc_and_init:            objects cflonums.    (line 174)
* iku_flonum_alloc:                      objects flonums.     (line 117)
* IKU_PAIR_ALLOC:                        objects pairs.       (line  76)
* iku_pair_alloc:                        objects pairs.       (line 109)
* iku_pointer_alloc:                     objects pointers.    (line 118)
* iku_string_alloc:                      objects strings.     (line 160)
* iku_string_from_cstring:               objects strings.     (line 167)
* iku_string_to_symbol:                  objects strings.     (line 172)
* iku_symbol_from_string:                objects symbols ops. (line  44)
* iku_vector_alloc_and_init:             objects vectors.     (line 222)
* iku_vector_alloc_no_init:              objects vectors.     (line 211)
* IK_ALIGN:                              objects memory alloc.
                                                              (line  92)
* IK_ALIGN_TO_NEXT_PAGE:                 objects memory pages.
                                                              (line 118)
* IK_ALIGN_TO_PREV_PAGE:                 objects memory pages.
                                                              (line 129)
* IK_ASS:                                objects memory alloc.
                                                              (line 145)
* IK_BIGNUM_ALLOC_SIZE:                  objects bignums.     (line 156)
* IK_BIGNUM_DATA_LIMBP:                  objects bignums.     (line 207)
* IK_BIGNUM_DATA_VOIDP:                  objects bignums.     (line 208)
* IK_BIGNUM_FIRST:                       objects bignums.     (line 185)
* IK_BIGNUM_FIRST_LIMB:                  objects bignums.     (line 213)
* IK_BIGNUM_LAST_LIMB:                   objects bignums.     (line 217)
* IK_BOOLEAN_FROM_INT:                   objects booleans.    (line  12)
* IK_BOOLEAN_TO_INT:                     objects booleans.    (line   9)
* IK_BWP:                                objects refs.        (line 168)
* IK_BWP_OBJECT:                         objects refs.        (line 167)
* IK_BYTEVECTOR_DATA:                    objects bytevectors. (line 121)
* IK_BYTEVECTOR_DATA_CHARP:              objects bytevectors. (line 126)
* IK_BYTEVECTOR_DATA_UINT8P:             objects bytevectors. (line 127)
* IK_BYTEVECTOR_DATA_VOIDP:              objects bytevectors. (line 125)
* IK_BYTEVECTOR_LENGTH:                  objects bytevectors. (line 114)
* IK_BYTEVECTOR_LENGTH_FX:               objects bytevectors. (line 117)
* IK_CAAR:                               objects pairs.       (line  91)
* IK_CAAR_PTR:                           objects pairs.       (line  98)
* IK_CADR:                               objects pairs.       (line  93)
* IK_CADR_PTR:                           objects pairs.       (line 100)
* IK_CAR:                                objects pairs.       (line  80)
* IK_CAR_PTR:                            objects pairs.       (line  86)
* IK_CDAR:                               objects pairs.       (line  92)
* IK_CDAR_PTR:                           objects pairs.       (line  99)
* IK_CDDR:                               objects pairs.       (line  94)
* IK_CDDR_PTR:                           objects pairs.       (line 101)
* IK_CDR:                                objects pairs.       (line  81)
* IK_CDR_PTR:                            objects pairs.       (line  87)
* IK_CFLONUM_IMAG:                       objects cflonums.    (line 143)
* IK_CFLONUM_IMAG_PTR:                   objects cflonums.    (line 160)
* IK_CFLONUM_IMP:                        objects cflonums.    (line 145)
* IK_CFLONUM_IMP_PTR:                    objects cflonums.    (line 162)
* IK_CFLONUM_REAL:                       objects cflonums.    (line 142)
* IK_CFLONUM_REAL_PTR:                   objects cflonums.    (line 159)
* IK_CFLONUM_REP:                        objects cflonums.    (line 144)
* IK_CFLONUM_REP_PTR:                    objects cflonums.    (line 161)
* IK_CHAR32:                             objects strings.     (line 135)
* IK_CHAR32_FROM_INTEGER:                objects chars.       (line 107)
* IK_CHAR32_TO_INTEGER:                  objects chars.       (line 112)
* IK_CHARP_FROM_BYTEVECTOR_OR_FALSE:     objects misc charp.  (line  16)
* IK_CHARP_FROM_BYTEVECTOR_OR_POINTER:   objects misc charp.  (line  32)
* IK_CHARP_FROM_BYTEVECTOR_OR_POINTER_OR_FALSE: objects misc charp.
                                                              (line  39)
* IK_CHARP_FROM_BYTEVECTOR_OR_POINTER_OR_MBLOCK: objects misc charp.
                                                              (line  62)
* IK_CHARP_FROM_BYTEVECTOR_OR_POINTER_OR_MBLOCK_OR_FALSE: objects misc charp.
                                                              (line  70)
* IK_CHARP_FROM_MBLOCK_OR_FALSE:         objects misc charp.  (line  24)
* IK_CHARP_FROM_POINTER_OR_FALSE:        objects misc charp.  (line   8)
* IK_CHARP_FROM_POINTER_OR_MBLOCK:       objects misc charp.  (line  47)
* IK_CHARP_FROM_POINTER_OR_MBLOCK_OR_FALSE: objects misc charp.
                                                              (line  54)
* IK_CHAR_FROM_INTEGER:                  objects chars.       (line 102)
* IK_CHAR_TO_INTEGER:                    objects chars.       (line 103)
* IK_CLOSURE_CODE_OBJECT:                objects closures.    (line 148)
* IK_CLOSURE_ENTRY_POINT:                objects closures.    (line 144)
* IK_CLOSURE_FREE_VAR:                   objects closures.    (line 157)
* IK_CLOSURE_NUMBER_OF_FREE_VARS:        objects closures.    (line 153)
* IK_CODE_ENTRY_POINT:                   objects codes ops.   (line  50)
* IK_COMPNUM_IMAG:                       objects compnums.    (line 146)
* IK_COMPNUM_IMAG_PTR:                   objects compnums.    (line 163)
* IK_COMPNUM_IMP:                        objects compnums.    (line 148)
* IK_COMPNUM_IMP_PTR:                    objects compnums.    (line 165)
* IK_COMPNUM_REAL:                       objects compnums.    (line 145)
* IK_COMPNUM_REAL_PTR:                   objects compnums.    (line 162)
* IK_COMPNUM_REP:                        objects compnums.    (line 147)
* IK_COMPNUM_REP_PTR:                    objects compnums.    (line 164)
* IK_COMPNUM_TAG:                        objects compnums.    (line 139)
* IK_COMPOSE_BIGNUM_FIRST_WORD:          objects bignums.     (line 167)
* ik_enter_c_function:                   objects callbacks.   (line  21)
* IK_EOF:                                objects refs.        (line 154)
* IK_EOF_OBJECT:                         objects refs.        (line 153)
* IK_FALSE:                              objects refs.        (line 148)
* IK_FALSE_OBJECT:                       objects refs.        (line 147)
* IK_FIELD:                              objects structs.     (line 302)
* IK_FIELD_PTR:                          objects structs.     (line 315)
* IK_FIX:                                objects fixnums.     (line 116)
* IK_FLONUM_DATA:                        objects flonums.     (line  96)
* IK_FLONUM_TAG:                         objects flonums.     (line  91)
* IK_FLONUM_VOIDP:                       objects flonums.     (line 107)
* IK_FORWARD_PTR:                        objects refs.        (line 173)
* IK_GENERALISED_C_BUFFER:               objects misc cbuffers.
                                                              (line  28)
* ik_generalised_c_buffer_len:           objects misc cbuffers.
                                                              (line  16)
* IK_GENERALISED_C_BUFFER_OR_FALSE:      objects misc cbuffers.
                                                              (line  29)
* IK_GENERALISED_C_STICKY_BUFFER:        objects misc cbuffers.
                                                              (line  35)
* IK_GENERALISED_C_STICKY_BUFFER_OR_FALSE: objects misc cbuffers.
                                                              (line  37)
* IK_GENERALISED_C_STRING:               objects misc cbuffers.
                                                              (line  43)
* IK_GENERALISED_C_STRING_OR_FALSE:      objects misc cbuffers.
                                                              (line  44)
* ik_integer_to_int:                     objects integers.    (line  60)
* ik_integer_to_llong:                   objects integers.    (line  62)
* ik_integer_to_long:                    objects integers.    (line  61)
* ik_integer_to_off_t:                   objects integers.    (line  80)
* ik_integer_to_ptrdiff_t:               objects integers.    (line  83)
* ik_integer_to_sint16:                  objects integers.    (line  70)
* ik_integer_to_sint32:                  objects integers.    (line  71)
* ik_integer_to_sint64:                  objects integers.    (line  72)
* ik_integer_to_sint8:                   objects integers.    (line  69)
* ik_integer_to_size_t:                  objects integers.    (line  81)
* ik_integer_to_ssize_t:                 objects integers.    (line  82)
* ik_integer_to_uint:                    objects integers.    (line  63)
* ik_integer_to_uint16:                  objects integers.    (line  74)
* ik_integer_to_uint32:                  objects integers.    (line  75)
* ik_integer_to_uint64:                  objects integers.    (line  76)
* ik_integer_to_uint8:                   objects integers.    (line  73)
* ik_integer_to_ullong:                  objects integers.    (line  65)
* ik_integer_to_ulong:                   objects integers.    (line  64)
* IK_IS_ANY_CONTINUATION:                objects continuations intro.
                                                              (line 133)
* ik_is_bignum:                          objects integers.    (line  17)
* IK_IS_BOOLEAN:                         objects booleans.    (line   6)
* IK_IS_BYTEVECTOR:                      objects bytevectors. (line 111)
* IK_IS_CFLONUM:                         objects cflonums.    (line 139)
* ik_is_cflonum:                         objects cflonums.    (line 171)
* IK_IS_CHAR:                            objects chars.       (line  99)
* IK_IS_CLOSURE:                         objects closures.    (line 141)
* IK_IS_CODE:                            objects codes ops.   (line  47)
* IK_IS_COMPNUM:                         objects compnums.    (line 136)
* ik_is_compnum:                         objects compnums.    (line 174)
* IK_IS_CONTINUATION:                    objects continuations intro.
                                                              (line 127)
* IK_IS_FIXNUM:                          objects fixnums.     (line 124)
* IK_IS_FLONUM:                          objects flonums.     (line  88)
* ik_is_flonum:                          objects flonums.     (line 114)
* IK_IS_INTEGER:                         objects integers.    (line  11)
* IK_IS_PAIR:                            objects pairs.       (line  69)
* IK_IS_POINTER:                         objects pointers.    (line  70)
* ik_is_pointer:                         objects pointers.    (line 106)
* IK_IS_RATNUM:                          objects ratnums.     (line 136)
* ik_is_ratnum:                          objects ratnums.     (line 176)
* IK_IS_STRING:                          objects strings.     (line 124)
* IK_IS_STRUCT:                          objects structs.     (line 265)
* ik_is_struct:                          objects structs.     (line 346)
* ik_is_symbol:                          objects symbols ops. (line  41)
* IK_IS_SYSTEM_CONTINUATION:             objects continuations intro.
                                                              (line 130)
* IK_IS_VECTOR:                          objects vectors.     (line 176)
* ik_is_vector:                          objects vectors.     (line 231)
* IK_ITEM:                               objects vectors.     (line 188)
* IK_ITEM_PTR:                           objects vectors.     (line 200)
* ik_leave_c_function:                   objects callbacks.   (line  26)
* IK_LIMB:                               objects bignums.     (line 196)
* ik_list_length:                        objects pairs.       (line 118)
* ik_list_to_argv:                       objects pairs.       (line 123)
* ik_list_to_argv_and_argc:              objects pairs.       (line 129)
* IK_MBLOCK_DATA_CHARP:                  objects misc mblock. (line  23)
* IK_MBLOCK_DATA_VOIDP:                  objects misc mblock. (line  19)
* IK_MBLOCK_POINTER:                     objects misc mblock. (line   6)
* IK_MBLOCK_SIZE:                        objects misc mblock. (line  10)
* IK_MBLOCK_SIZE_T:                      objects misc mblock. (line  15)
* IK_MINIMUM_PAGES_NUMBER_FOR_SIZE:      objects memory pages.
                                                              (line 108)
* IK_MMAP_ALLOCATION_SIZE:               objects memory pages.
                                                              (line 103)
* IK_MMAP_ALLOCATION_SIZE_FOR_PAGES:     objects memory pages.
                                                              (line 113)
* IK_NEGATIVE_BIGNUM_FIRST_WORD:         objects bignums.     (line 180)
* IK_NULL:                               objects refs.        (line 152)
* IK_NULL_OBJECT:                        objects refs.        (line 151)
* IK_PAGE_INDEX:                         objects memory pages.
                                                              (line  88)
* IK_PAGE_INDEX_RANGE:                   objects memory pages.
                                                              (line  93)
* IK_PAGE_POINTER_FROM_INDEX:            objects memory pages.
                                                              (line  98)
* IK_POINTER_DATA:                       objects pointers.    (line  77)
* IK_POINTER_DATA_CHARP:                 objects pointers.    (line  82)
* IK_POINTER_DATA_LLONG:                 objects pointers.    (line  85)
* IK_POINTER_DATA_LONG:                  objects pointers.    (line  84)
* IK_POINTER_DATA_UINT8P:                objects pointers.    (line  83)
* IK_POINTER_DATA_ULLONG:                objects pointers.    (line  87)
* IK_POINTER_DATA_ULONG:                 objects pointers.    (line  86)
* IK_POINTER_DATA_VOIDP:                 objects pointers.    (line  81)
* IK_POINTER_FROM_BYTEVECTOR_OR_FALSE:   objects misc voidp.  (line  14)
* IK_POINTER_FROM_BYTEVECTOR_OR_FALSE <1>: objects misc charp.
                                                              (line  14)
* IK_POINTER_FROM_BYTEVECTOR_OR_POINTER: objects misc voidp.  (line  30)
* IK_POINTER_FROM_BYTEVECTOR_OR_POINTER <1>: objects misc charp.
                                                              (line  30)
* IK_POINTER_FROM_BYTEVECTOR_OR_POINTER_OR_FALSE: objects misc voidp.
                                                              (line  37)
* IK_POINTER_FROM_BYTEVECTOR_OR_POINTER_OR_FALSE <1>: objects misc charp.
                                                              (line  37)
* IK_POINTER_FROM_BYTEVECTOR_OR_POINTER_OR_MBLOCK: objects misc voidp.
                                                              (line  60)
* IK_POINTER_FROM_BYTEVECTOR_OR_POINTER_OR_MBLOCK <1>: objects misc charp.
                                                              (line  60)
* IK_POINTER_FROM_BYTEVECTOR_OR_POINTER_OR_MBLOCK_OR_FALSE: objects misc voidp.
                                                              (line  67)
* IK_POINTER_FROM_BYTEVECTOR_OR_POINTER_OR_MBLOCK_OR_FALSE <1>: objects misc charp.
                                                              (line  67)
* IK_POINTER_FROM_MBLOCK_OR_FALSE:       objects misc voidp.  (line  22)
* IK_POINTER_FROM_MBLOCK_OR_FALSE <1>:   objects misc charp.  (line  22)
* IK_POINTER_FROM_POINTER_OR_FALSE:      objects misc voidp.  (line   6)
* IK_POINTER_FROM_POINTER_OR_FALSE <1>:  objects misc charp.  (line   6)
* IK_POINTER_FROM_POINTER_OR_MBLOCK:     objects misc voidp.  (line  45)
* IK_POINTER_FROM_POINTER_OR_MBLOCK <1>: objects misc charp.  (line  45)
* IK_POINTER_FROM_POINTER_OR_MBLOCK_OR_FALSE: objects misc voidp.
                                                              (line  52)
* IK_POINTER_FROM_POINTER_OR_MBLOCK_OR_FALSE <1>: objects misc charp.
                                                              (line  52)
* IK_POINTER_IS_NULL:                    objects pointers.    (line  99)
* IK_POINTER_SET:                        objects pointers.    (line  91)
* IK_POINTER_SET_NULL:                   objects pointers.    (line  95)
* IK_POINTER_TAG:                        objects pointers.    (line  73)
* IK_POSITIVE_BIGNUM_FIRST_WORD:         objects bignums.     (line 178)
* IK_PTR:                                objects refs.        (line 122)
* IK_RATNUM_DEN:                         objects ratnums.     (line 147)
* IK_RATNUM_DEN_PTR:                     objects ratnums.     (line 167)
* IK_RATNUM_NUM:                         objects ratnums.     (line 146)
* IK_RATNUM_NUM_PTR:                     objects ratnums.     (line 166)
* IK_RATNUM_TAG:                         objects ratnums.     (line 140)
* IK_REF:                                objects refs.        (line  61)
* ik_safe_alloc:                         objects memory alloc.
                                                              (line 103)
* IK_SEGMENT_INDEX:                      objects memory segments.
                                                              (line 107)
* IK_SIGNAL_DIRT:                        objects memory alloc.
                                                              (line 187)
* ik_signal_dirt_in_page_of_pointer:     objects memory alloc.
                                                              (line 174)
* IK_STD_DESTRUCTOR:                     objects structs.     (line 275)
* IK_STD_FIELDS:                         objects structs.     (line 272)
* IK_STD_LENGTH:                         objects structs.     (line 271)
* IK_STD_NAME:                           objects structs.     (line 270)
* IK_STD_PRINTER:                        objects structs.     (line 273)
* IK_STD_STD:                            objects structs.     (line 269)
* IK_STD_SYMBOL:                         objects structs.     (line 274)
* IK_STRING_DATA_IKCHARP:                objects strings.     (line 151)
* IK_STRING_DATA_VOIDP:                  objects strings.     (line 147)
* IK_STRING_LENGTH:                      objects strings.     (line 131)
* IK_STRING_LENGTH_FX:                   objects strings.     (line 127)
* IK_STRUCT_FIELDS_VOIDP:                objects structs.     (line 322)
* IK_STRUCT_RTD:                         objects structs.     (line 282)
* IK_STRUCT_RTD_PTR:                     objects structs.     (line 295)
* IK_STRUCT_STD:                         objects structs.     (line 281)
* IK_STRUCT_STD_PTR:                     objects structs.     (line 294)
* IK_TAGOF:                              objects refs.        (line  57)
* ik_the_pcb:                            objects memory alloc.
                                                              (line  87)
* IK_TRUE:                               objects refs.        (line 150)
* IK_TRUE_OBJECT:                        objects refs.        (line 149)
* IK_UNBOUND:                            objects refs.        (line 162)
* IK_UNBOUND_OBJECT:                     objects refs.        (line 161)
* IK_UNFIX:                              objects fixnums.     (line 120)
* IK_UNICODE_FROM_ASCII:                 objects chars.       (line 116)
* ik_unsafe_alloc:                       objects memory alloc.
                                                              (line 122)
* IK_VECTOR_LENGTH:                      objects vectors.     (line 184)
* IK_VECTOR_LENGTH_FX:                   objects vectors.     (line 181)
* IK_VOID:                               objects refs.        (line 156)
* IK_VOIDP_FROM_BYTEVECTOR_OR_FALSE:     objects misc voidp.  (line  16)
* IK_VOIDP_FROM_BYTEVECTOR_OR_POINTER:   objects misc voidp.  (line  32)
* IK_VOIDP_FROM_BYTEVECTOR_OR_POINTER_OR_FALSE: objects misc voidp.
                                                              (line  39)
* IK_VOIDP_FROM_BYTEVECTOR_OR_POINTER_OR_MBLOCK: objects misc voidp.
                                                              (line  62)
* IK_VOIDP_FROM_BYTEVECTOR_OR_POINTER_OR_MBLOCK_OR_FALSE: objects misc voidp.
                                                              (line  70)
* IK_VOIDP_FROM_MBLOCK_OR_FALSE:         objects misc voidp.  (line  24)
* IK_VOIDP_FROM_POINTER_OR_FALSE:        objects misc voidp.  (line   8)
* IK_VOIDP_FROM_POINTER_OR_MBLOCK:       objects misc voidp.  (line  47)
* IK_VOIDP_FROM_POINTER_OR_MBLOCK_OR_FALSE: objects misc voidp.
                                                              (line  54)
* IK_VOID_OBJECT:                        objects refs.        (line 155)
* imag-part:                             baselib math ops complex.
                                                              (line   9)
* immediate?:                            iklib misc.          (line  12)
* implementation-name:                   iklib env-inquiry.   (line  49)
* implementation-restriction-violation?: stdlib exceptions conditions types.
                                                              (line 152)
* implementation-version:                iklib env-inquiry.   (line  52)
* implements:                            iklib records defs.  (line  21)
* import:                                iklib expander local import.
                                                              (line  28)
* include:                               includes.            (line  76)
* include <1>:                           includes.            (line  77)
* inexact:                               baselib math ops exactness.
                                                              (line  10)
* inexact->exact:                        stdlib rfive compat. (line  12)
* inexact-compnum?:                      iklib numerics preds.
                                                              (line  32)
* inexact?:                              baselib math ops type pred.
                                                              (line 132)
* infinite?:                             baselib math ops value pred.
                                                              (line  54)
* infix:                                 iklib syntaxes infix.
                                                              (line   6)
* initialise-compiler:                   compiler options.    (line   8)
* initialise-expander:                   expander options.    (line   6)
* input-file-buffer-size:                iklib io buffer.     (line  18)
* input-file-buffer-size <1>:            iklib io buffer.     (line  19)
* input-only-port?:                      iklib io misc.       (line   8)
* input-only-port? <1>:                  iklib io misc.       (line   9)
* input-port?:                           stdlib io port input ports.
                                                              (line  19)
* input-port? <1>:                       stdlib io simple.    (line  34)
* input/output-file-buffer-size:         iklib io buffer.     (line  28)
* input/output-file-buffer-size <1>:     iklib io buffer.     (line  29)
* input/output-port?:                    iklib io misc.       (line  14)
* input/output-socket-buffer-size:       iklib io buffer.     (line  34)
* input/output-socket-buffer-size <1>:   iklib io buffer.     (line  35)
* integer->char:                         baselib characters.  (line  41)
* integer->machine-word:                 iklib debug.         (line   6)
* integer->pointer:                      iklib pointers conv. (line  13)
* integer-valued?:                       baselib math ops type pred.
                                                              (line  87)
* integer?:                              baselib math ops type pred.
                                                              (line  10)
* interaction-environment:               iklib environment.   (line  19)
* interaction-environment <1>:           iklib environment.   (line  20)
* interaction-lexical-environment?:      iklib environment.   (line  15)
* interface-type-spec?:                  expander specs interface.
                                                              (line  13)
* internal-body:                         iklib syntaxes body. (line   6)
* interned-libraries:                    libutils interning.  (line  20)
* interned-libraries <1>:                libutils interning.  (line  21)
* interrupt-handler:                     iklib engines.       (line   6)
* intersection-of-type-specs:            expander specs intersection.
                                                              (line  13)
* intersection-type-spec.item-ots*:      expander specs intersection.
                                                              (line  27)
* intersection-type-spec?:               expander specs intersection.
                                                              (line  23)
* invoke-library:                        libutils libraries ops.
                                                              (line   8)
* ipair:                                 iklib ipairs.        (line  14)
* ipair-hash:                            iklib hashtables hashfun.
                                                              (line  87)
* irritants-condition?:                  stdlib exceptions conditions types.
                                                              (line 108)
* keyword->string:                       iklib keywords.      (line  23)
* keyword->symbol:                       iklib keywords.      (line  20)
* keyword-hash:                          iklib keywords.      (line  42)
* keyword=?:                             iklib keywords.      (line  36)
* keyword?:                              iklib keywords.      (line  33)
* label->syntactic-binding-descriptor:   expander lexenv inspection.
                                                              (line  20)
* label->syntactic-binding-descriptor/no-indirection: expander lexenv inspection.
                                                              (line  56)
* label-type-spec?:                      expander specs label.
                                                              (line  12)
* lambda:                                baselib expressions procedures.
                                                              (line   6)
* lambda*:                               iklib syntaxes lambdas star.
                                                              (line  85)
* lambda-signature.argvals:              expander specs signatures lambda.
                                                              (line  30)
* lambda-signature.retvals:              expander specs signatures lambda.
                                                              (line  26)
* lambda-signature?:                     expander specs signatures lambda.
                                                              (line  22)
* last-pair:                             iklib lists misc.    (line  22)
* late-binding-error?:                   iklib conditions late-bind base.
                                                              (line  15)
* latin-1-C0-control?:                   iklib chars unicode latin1.
                                                              (line  79)
* latin-1-C1-control?:                   iklib chars unicode latin1.
                                                              (line  83)
* latin-1-code-point?:                   iklib chars unicode latin1.
                                                              (line  68)
* latin-1-codec:                         stdlib io port transcoders.
                                                              (line  28)
* latin-1-control?:                      iklib chars unicode latin1.
                                                              (line  87)
* latin-1-decode:                        iklib chars unicode latin1.
                                                              (line  73)
* latin-1-encode:                        iklib chars unicode latin1.
                                                              (line  62)
* latin-1-graphic?:                      iklib chars unicode latin1.
                                                              (line  91)
* latin1->string:                        iklib strings conversion.
                                                              (line  49)
* latin1-encoded-bytevector?:            iklib bytevectors conversion.
                                                              (line 148)
* latin1-encoded-string?:                iklib strings conversion.
                                                              (line  53)
* lcm:                                   baselib math ops arithmetic.
                                                              (line 141)
* least-fixnum:                          stdlib arithmetic fixnums.
                                                              (line  27)
* least-positive-bignum:                 iklib numerics bignums.
                                                              (line  30)
* length:                                baselib lists.       (line 111)
* let:                                   baselib expressions binding.
                                                              (line  33)
* let <1>:                               baselib iteration.   (line   6)
* let*:                                  baselib expressions binding.
                                                              (line  58)
* let*-constants:                        iklib syntaxes bindings.
                                                              (line  58)
* let*-syntax:                           iklib syntaxes bindings.
                                                              (line  37)
* let*-values:                           baselib expressions binding.
                                                              (line 223)
* let-constants:                         iklib syntaxes bindings.
                                                              (line  53)
* let-syntax:                            baselib syntax binding.
                                                              (line  13)
* let-values:                            baselib expressions binding.
                                                              (line 174)
* letrec:                                baselib expressions binding.
                                                              (line  81)
* letrec*:                               baselib expressions binding.
                                                              (line 127)
* letrec*-constants:                     iklib syntaxes bindings.
                                                              (line  68)
* letrec-constants:                      iklib syntaxes bindings.
                                                              (line  63)
* letrec-syntax:                         baselib syntax binding.
                                                              (line  68)
* lexical-violation?:                    stdlib exceptions conditions types.
                                                              (line 166)
* library:                               scheme library form. (line   6)
* library-binary-search-path:            libutils file-system paths.
                                                              (line   8)
* library-descriptor:                    libutils libraries typedef.
                                                              (line 159)
* library-descriptor-name:               libutils libraries typedef.
                                                              (line 171)
* library-descriptor-uid:                libutils libraries typedef.
                                                              (line 168)
* library-descriptor?:                   libutils libraries typedef.
                                                              (line 164)
* library-dynamic-load-and-intern:       libutils dynamic.    (line  41)
* library-dynamic-retrieve:              libutils dynamic.    (line  49)
* library-export-subst:                  libutils libraries typedef.
                                                              (line  57)
* library-extensions:                    libutils file-system extensions.
                                                              (line  38)
* library-foreign-library*:              libutils libraries typedef.
                                                              (line 145)
* library-global-env:                    libutils libraries global-env.
                                                              (line   6)
* library-guard-code:                    libutils libraries typedef.
                                                              (line 115)
* library-guard-lib*:                    libutils libraries typedef.
                                                              (line 121)
* library-imp-lib*:                      libutils libraries typedef.
                                                              (line  45)
* library-inv-lib*:                      libutils libraries typedef.
                                                              (line  53)
* library-invoke-code:                   libutils libraries typedef.
                                                              (line 109)
* library-invoke-state:                  libutils libraries typedef.
                                                              (line  98)
* library-loaded-from-binary-file?:      libutils libraries typedef.
                                                              (line 155)
* library-loaded-from-source-file?:      libutils libraries typedef.
                                                              (line 151)
* library-name:                          libutils libraries typedef.
                                                              (line  34)
* library-name->filename-stem:           libutils file-system pathnames.
                                                              (line   8)
* library-name->identifiers:             libutils names split.
                                                              (line  39)
* library-name->library-binary-pathname-in-build-directory: libutils file-system pathnames.
                                                              (line  49)
* library-name->version:                 libutils names split.
                                                              (line  62)
* library-name-decompose:                libutils names split.
                                                              (line   8)
* library-name-identifiers=?:            libutils names compar.
                                                              (line  43)
* library-name<=?:                       libutils names compar.
                                                              (line  37)
* library-name<?:                        libutils names compar.
                                                              (line  31)
* library-name=?:                        libutils names compar.
                                                              (line  26)
* library-name?:                         libutils names pred. (line   8)
* library-option*:                       libutils libraries typedef.
                                                              (line 142)
* library-reference->filename-stem:      libutils file-system pathnames.
                                                              (line   9)
* library-reference->identifiers:        libutils refs split. (line  18)
* library-reference->library-binary-pathname-in-build-directory: libutils file-system pathnames.
                                                              (line  51)
* library-reference->version:            libutils refs split. (line  22)
* library-reference-decompose:           libutils refs split. (line   8)
* library-reference-identifiers=?:       libutils refs compar.
                                                              (line   8)
* library-reference?:                    libutils refs pred.  (line   8)
* library-source-file-name:              libutils libraries typedef.
                                                              (line 138)
* library-source-pathname->library-binary-tail-pathname: libutils file-system pathnames.
                                                              (line  92)
* library-source-pathname->library-stem-pathname: libutils file-system pathnames.
                                                              (line  70)
* library-source-search-path:            libutils file-system paths.
                                                              (line  61)
* library-sub-version-reference?:        libutils refs pred.  (line  51)
* library-sub-version?:                  libutils refs pred.  (line  55)
* library-typed-locs:                    libutils libraries typedef.
                                                              (line  85)
* library-uid:                           libutils libraries typedef.
                                                              (line  15)
* library-version-number?:               libutils names pred. (line  36)
* library-version-numbers?:              libutils names pred. (line  22)
* library-version-reference?:            libutils refs pred.  (line  24)
* library-version<=?:                    libutils names compar.
                                                              (line  84)
* library-version<?:                     libutils names compar.
                                                              (line  63)
* library-version=?:                     libutils names compar.
                                                              (line  48)
* library-vis-lib*:                      libutils libraries typedef.
                                                              (line  49)
* library-visible?:                      libutils libraries typedef.
                                                              (line 129)
* library-visit-code:                    libutils libraries typedef.
                                                              (line 103)
* library-visit-state:                   libutils libraries typedef.
                                                              (line  93)
* library?:                              libutils libraries typedef.
                                                              (line  11)
* lisp-transformer:                      stdlib syntax-case lisp.
                                                              (line   6)
* list:                                  baselib lists.       (line 105)
* list->string:                          baselib strings.     (line  72)
* list->vector:                          baselib vectors.     (line  67)
* list-hash:                             iklib hashtables hashfun.
                                                              (line  60)
* list-hash <1>:                         iklib hashtables hashfun.
                                                              (line  61)
* list-of-booleans?:                     iklib booleans.      (line  16)
* list-of-bytevector-pathnames?:         iklib io pathnames.  (line 122)
* list-of-bytevectors?:                  iklib bytevectors predicates.
                                                              (line   6)
* list-of-chars?:                        iklib chars predicates.
                                                              (line   8)
* list-of-conditions?:                   iklib conditions preds.
                                                              (line  14)
* list-of-epoch-times?:                  iklib time epoch.    (line  34)
* list-of-fixnums?:                      iklib fixnums predicates.
                                                              (line   6)
* list-of-flonums?:                      iklib flonums.       (line  11)
* list-of-nestrings?:                    iklib strings predicates.
                                                              (line  10)
* list-of-pathnames?:                    iklib io pathnames.  (line 120)
* list-of-pointers?:                     iklib pointers pred. (line  28)
* list-of-simple-conditions?:            iklib conditions preds.
                                                              (line  10)
* list-of-single-item?:                  iklib lists misc.    (line  11)
* list-of-string-pathnames?:             iklib io pathnames.  (line 121)
* list-of-strings?:                      iklib strings predicates.
                                                              (line   6)
* list-of-symbols?:                      iklib symbols predicates.
                                                              (line   6)
* list-of-times?:                        iklib time time.     (line  26)
* list-of-transcoders?:                  iklib io codecs.     (line  11)
* list-of-type-spec.item-ots:            expander specs list-of.
                                                              (line  21)
* list-of-type-spec?:                    expander specs list-of.
                                                              (line  17)
* list-of-vectors-of-same-length?:       iklib vectors predicates.
                                                              (line  29)
* list-of-vectors?:                      iklib vectors predicates.
                                                              (line  20)
* list-ref:                              baselib lists.       (line 159)
* list-sort:                             stdlib sorting.      (line   9)
* list-tail:                             baselib lists.       (line 149)
* list-type-spec.item-ots*:              expander specs list. (line  22)
* list-type-spec.length:                 expander specs list. (line  26)
* list-type-spec?:                       expander specs list. (line  18)
* list?:                                 baselib lists.       (line  96)
* load:                                  iklib load.          (line  10)
* load <1>:                              iklib load.          (line  11)
* log:                                   baselib math ops trascend.
                                                              (line   7)
* log <1>:                               baselib math ops trascend.
                                                              (line   8)
* lookahead-char:                        stdlib io port textual input.
                                                              (line  16)
* lookahead-char <1>:                    iklib io non-blocking textual.
                                                              (line  23)
* lookahead-two-u8:                      iklib io binary.     (line  26)
* lookahead-u8:                          stdlib io port binary input.
                                                              (line  14)
* lookahead-u8 <1>:                      iklib io non-blocking binary.
                                                              (line  18)
* lookup-shared-object:                  ffi shared.          (line  45)
* machine-name:                          iklib env-inquiry.   (line  65)
* machine-word->integer:                 iklib debug.         (line   7)
* magnitude:                             baselib math ops complex.
                                                              (line  10)
* make-alist-type-spec:                  expander specs alist.
                                                              (line  12)
* make-ancestor-of-type-spec:            expander specs ancestor.
                                                              (line  13)
* make-assertion-violation:              stdlib exceptions conditions types.
                                                              (line  95)
* make-binary-file-descriptor-input-port: iklib io binary.    (line  74)
* make-binary-file-descriptor-input-port*: iklib io binary.   (line  85)
* make-binary-file-descriptor-input/output-port: iklib io binary.
                                                              (line  76)
* make-binary-file-descriptor-input/output-port*: iklib io binary.
                                                              (line  87)
* make-binary-file-descriptor-output-port: iklib io binary.   (line  75)
* make-binary-file-descriptor-output-port*: iklib io binary.  (line  86)
* make-binary-socket-input-port:         iklib io binary.     (line  96)
* make-binary-socket-input-port*:        iklib io binary.     (line 106)
* make-binary-socket-input/output-port:  iklib io binary.     (line  98)
* make-binary-socket-input/output-port*: iklib io binary.     (line 108)
* make-binary-socket-output-port:        iklib io binary.     (line  97)
* make-binary-socket-output-port*:       iklib io binary.     (line 107)
* make-bytevector:                       stdlib bytevector general.
                                                              (line  32)
* make-bytevector <1>:                   stdlib bytevector general.
                                                              (line  33)
* make-c-callback-maker:                 ffi call back.       (line  47)
* make-c-callout-maker:                  ffi call out.        (line  42)
* make-c-callout-maker/with-errno:       ffi call out.        (line  65)
* make-case-lambda-signature:            expander specs signatures case-lambda.
                                                              (line  13)
* make-closure-type-spec:                expander specs closure.
                                                              (line  12)
* make-code:                             syslib codes safe.   (line  12)
* make-comparison-procedure:             syslib compar.       (line  22)
* make-complement-type-spec:             expander specs complement.
                                                              (line  13)
* make-compound-condition-type-spec:     expander specs condobj.
                                                              (line  12)
* make-custom-binary-input-port:         stdlib io port input ports.
                                                              (line  97)
* make-custom-binary-input/output-port:  stdlib io port input output ports.
                                                              (line  18)
* make-custom-binary-output-port:        stdlib io port output ports.
                                                              (line 135)
* make-custom-textual-input-port:        stdlib io port input ports.
                                                              (line 145)
* make-custom-textual-input/output-port: stdlib io port input output ports.
                                                              (line  35)
* make-custom-textual-output-port:       stdlib io port output ports.
                                                              (line 165)
* make-enumeration:                      stdlib enum.         (line  24)
* make-enumeration-type-spec:            expander specs enum. (line  12)
* make-epoch-time:                       iklib time epoch.    (line  15)
* make-eq-hashtable:                     stdlib hashtable constructors.
                                                              (line   6)
* make-eq-hashtable <1>:                 stdlib hashtable constructors.
                                                              (line   7)
* make-eqv-hashtable:                    stdlib hashtable constructors.
                                                              (line  13)
* make-eqv-hashtable <1>:                stdlib hashtable constructors.
                                                              (line  14)
* make-errno-condition:                  iklib conditions errno.
                                                              (line  12)
* make-error:                            stdlib exceptions conditions types.
                                                              (line  72)
* make-expand-time-value:                iklib expander etv.  (line  39)
* make-expression-return-value-violation: iklib conditions exprret.
                                                              (line  10)
* make-failed-expression-condition:      iklib conditions failexpr.
                                                              (line  32)
* make-file-options:                     iklib io misc.       (line  64)
* make-guardian:                         iklib guardians api. (line   6)
* make-hashtable:                        stdlib hashtable constructors.
                                                              (line  20)
* make-hashtable <1>:                    stdlib hashtable constructors.
                                                              (line  21)
* make-hashtable-type-spec:              expander specs hashtable.
                                                              (line  12)
* make-i/o-decoding-error:               stdlib io port transcoders.
                                                              (line  74)
* make-i/o-eagain:                       iklib conditions eagain.
                                                              (line  12)
* make-i/o-encoding-error:               stdlib io port transcoders.
                                                              (line  90)
* make-i/o-error:                        stdlib io conditions.
                                                              (line  15)
* make-i/o-file-already-exists-error:    stdlib io conditions.
                                                              (line 104)
* make-i/o-file-does-not-exist-error:    stdlib io conditions.
                                                              (line 118)
* make-i/o-file-is-read-only-error:      stdlib io conditions.
                                                              (line  90)
* make-i/o-file-protection-error:        stdlib io conditions.
                                                              (line  77)
* make-i/o-filename-error:               stdlib io conditions.
                                                              (line  63)
* make-i/o-invalid-position-error:       stdlib io conditions.
                                                              (line  47)
* make-i/o-port-error:                   stdlib io conditions.
                                                              (line 132)
* make-i/o-read-error:                   stdlib io conditions.
                                                              (line  25)
* make-i/o-write-error:                  stdlib io conditions.
                                                              (line  36)
* make-i/o-wrong-fasl-header-error-error: iklib conditions wfs.
                                                              (line  10)
* make-implementation-restriction-violation: stdlib exceptions conditions types.
                                                              (line 151)
* make-irritants-condition:              stdlib exceptions conditions types.
                                                              (line 107)
* make-lambda-signature:                 expander specs signatures lambda.
                                                              (line  13)
* make-late-binding-error:               iklib conditions late-bind base.
                                                              (line  11)
* make-lexical-violation:                stdlib exceptions conditions types.
                                                              (line 165)
* make-list:                             iklib lists misc.    (line  16)
* make-list <1>:                         iklib lists misc.    (line  17)
* make-list-of-type-spec:                expander specs list-of.
                                                              (line  12)
* make-list-type-spec:                   expander specs list. (line  12)
* make-memory-block:                     iklib memory blocks. (line  20)
* make-memory-block/guarded:             iklib memory blocks. (line  21)
* make-message-condition:                stdlib exceptions conditions types.
                                                              (line  35)
* make-method-late-binding-error:        iklib conditions late-bind method.
                                                              (line  11)
* make-no-infinities-violation:          stdlib arithmetic flonums.
                                                              (line 278)
* make-no-nans-violation:                stdlib arithmetic flonums.
                                                              (line 281)
* make-non-continuable-violation:        stdlib exceptions conditions types.
                                                              (line 139)
* make-non-reinstatable-violation:       iklib conditions non-reinst.
                                                              (line  11)
* make-one-based-return-value-index-condition: iklib conditions exprindex.
                                                              (line  44)
* make-out-of-memory-error:              iklib memory condition.
                                                              (line  13)
* make-overloaded-function-late-binding-error: iklib conditions late-bind overload.
                                                              (line  11)
* make-pair-of-type-spec:                expander specs pair-of.
                                                              (line  12)
* make-pair-type-spec:                   expander specs pair. (line  12)
* make-parameter:                        iklib parameters.    (line  91)
* make-parameter <1>:                    iklib parameters.    (line  92)
* make-parameter <2>:                    compiler recordize specials.
                                                              (line  14)
* make-parameter <3>:                    compiler recordize specials.
                                                              (line  15)
* make-polar:                            baselib math ops complex.
                                                              (line   7)
* make-procedure-argument-violation:     iklib conditions procarg.
                                                              (line  11)
* make-procedure-arguments-consistency-violation: iklib conditions proccon.
                                                              (line  11)
* make-procedure-postcondition-violation: iklib conditions procpost.
                                                              (line  11)
* make-procedure-precondition-violation: iklib conditions procpre.
                                                              (line  10)
* make-procedure-signature-argument-violation: iklib conditions sigarg.
                                                              (line  33)
* make-procedure-signature-return-value-violation: iklib conditions rvarg.
                                                              (line  23)
* make-queue-procs:                      iklib lists queue.   (line  10)
* make-queue-procs <1>:                  iklib lists queue.   (line  11)
* make-readline-input-port:              iklib readline.      (line  23)
* make-readline-input-port <1>:          iklib readline.      (line  24)
* make-record-constructor-descriptor:    stdlib records procedural layer.
                                                              (line  86)
* make-record-type-descriptor:           stdlib records procedural layer.
                                                              (line   9)
* make-rectangular:                      baselib math ops complex.
                                                              (line   6)
* make-serious-condition:                stdlib exceptions conditions types.
                                                              (line  60)
* make-shared-object-closing-error:      ffi shared.          (line 102)
* make-shared-object-error:              ffi shared.          (line  62)
* make-shared-object-lookup-error:       ffi shared.          (line 128)
* make-shared-object-opening-error:      ffi shared.          (line  80)
* make-source-position-condition:        iklib conditions spos.
                                                              (line  33)
* make-string:                           baselib strings.     (line  15)
* make-string <1>:                       baselib strings.     (line  16)
* make-string-decoding-error:            iklib conditions string generic.
                                                              (line  27)
* make-string-encoding-error:            iklib conditions string generic.
                                                              (line  13)
* make-struct-type:                      syslib structs safe define.
                                                              (line 114)
* make-struct-type <1>:                  syslib structs safe define.
                                                              (line 115)
* make-synonym-transformer:              iklib expander synonym.
                                                              (line  38)
* make-syntax-clause-spec:               expander clauses objects.
                                                              (line  13)
* make-syntax-clause-spec <1>:           expander clauses objects.
                                                              (line  15)
* make-syntax-violation:                 stdlib exceptions conditions types.
                                                              (line 176)
* make-textual-file-descriptor-input-port: iklib io textual.  (line  81)
* make-textual-file-descriptor-input-port*: iklib io textual. (line  94)
* make-textual-file-descriptor-input/output-port: iklib io textual.
                                                              (line  85)
* make-textual-file-descriptor-input/output-port*: iklib io textual.
                                                              (line  98)
* make-textual-file-descriptor-output-port: iklib io textual. (line  83)
* make-textual-file-descriptor-output-port*: iklib io textual.
                                                              (line  96)
* make-textual-socket-input/output-port: iklib io textual.    (line 107)
* make-textual-socket-input/output-port*: iklib io textual.   (line 116)
* make-time:                             iklib time time.     (line  14)
* make-time <1>:                         iklib time time.     (line  16)
* make-transcoder:                       stdlib io port transcoders.
                                                              (line 143)
* make-transcoder <1>:                   stdlib io port transcoders.
                                                              (line 144)
* make-transcoder <2>:                   stdlib io port transcoders.
                                                              (line 145)
* make-type-signature:                   expander specs signatures type.
                                                              (line  12)
* make-type-specification:               expander specs retrieving.
                                                              (line   9)
* make-undefined-violation:              stdlib exceptions conditions types.
                                                              (line 195)
* make-utf16-string-decoding-error:      iklib conditions string utf16.
                                                              (line  28)
* make-utf16-string-decoding-invalid-first-word: iklib conditions string utf16.
                                                              (line  54)
* make-utf16-string-decoding-invalid-second-word: iklib conditions string utf16.
                                                              (line  89)
* make-utf16-string-decoding-missing-second-word: iklib conditions string utf16.
                                                              (line 123)
* make-utf16-string-decoding-standalone-octet: iklib conditions string utf16.
                                                              (line 156)
* make-utf16-string-encoding-error:      iklib conditions string utf16.
                                                              (line  13)
* make-utf32-string-decoding-error:      iklib conditions string utf32.
                                                              (line  28)
* make-utf32-string-decoding-invalid-word: iklib conditions string utf32.
                                                              (line  53)
* make-utf32-string-decoding-orphan-octets: iklib conditions string utf32.
                                                              (line  85)
* make-utf32-string-encoding-error:      iklib conditions string utf32.
                                                              (line  13)
* make-utf8-string-decoding-error:       iklib conditions string utf8.
                                                              (line  28)
* make-utf8-string-decoding-incomplete-2-tuple: iklib conditions string utf8.
                                                              (line 186)
* make-utf8-string-decoding-incomplete-3-tuple: iklib conditions string utf8.
                                                              (line 221)
* make-utf8-string-decoding-incomplete-4-tuple: iklib conditions string utf8.
                                                              (line 256)
* make-utf8-string-decoding-invalid-2-tuple: iklib conditions string utf8.
                                                              (line  86)
* make-utf8-string-decoding-invalid-3-tuple: iklib conditions string utf8.
                                                              (line 119)
* make-utf8-string-decoding-invalid-4-tuple: iklib conditions string utf8.
                                                              (line 152)
* make-utf8-string-decoding-invalid-octet: iklib conditions string utf8.
                                                              (line  53)
* make-utf8-string-encoding-error:       iklib conditions string utf8.
                                                              (line  13)
* make-variable-transformer:             stdlib syntax-case transformers.
                                                              (line  54)
* make-variable-transformer <1>:         iklib expander transformers.
                                                              (line   8)
* make-vector:                           baselib vectors.     (line  25)
* make-vector <1>:                       baselib vectors.     (line  26)
* make-vector-of-type-spec:              expander specs vector-of.
                                                              (line  12)
* make-vector-type-spec:                 expander specs vector.
                                                              (line  12)
* make-violation:                        stdlib exceptions conditions types.
                                                              (line  84)
* make-warning:                          stdlib exceptions conditions types.
                                                              (line  48)
* make-who-condition:                    stdlib exceptions conditions types.
                                                              (line 123)
* malloc:                                iklib memory alloc.  (line   9)
* map:                                   baselib lists.       (line 169)
* max:                                   baselib math ops comparison.
                                                              (line   6)
* maybe-callback?:                       ffi call back.       (line  81)
* member:                                stdlib list.         (line 298)
* memcmp:                                iklib memory ops.    (line  32)
* memcpy:                                iklib memory ops.    (line   9)
* memmove:                               iklib memory ops.    (line  17)
* memory->bytevector:                    iklib memory ops.    (line  46)
* memory-block!=?:                       iklib memory blocks. (line  61)
* memory-block-pointer:                  iklib memory blocks. (line  40)
* memory-block-reset:                    iklib memory blocks. (line  46)
* memory-block-size:                     iklib memory blocks. (line  41)
* memory-block=?:                        iklib memory blocks. (line  55)
* memory-block?:                         iklib memory blocks. (line  32)
* memory-block?/non-null:                iklib memory blocks. (line  35)
* memory-block?/not-null:                iklib memory blocks. (line  36)
* memory-copy:                           iklib memory ops.    (line  39)
* memp:                                  stdlib list.         (line 297)
* memq:                                  stdlib list.         (line 300)
* memset:                                iklib memory ops.    (line  25)
* memv:                                  stdlib list.         (line 299)
* message-condition?:                    stdlib exceptions conditions types.
                                                              (line  36)
* method:                                iklib records defs.  (line   8)
* method-late-binding-error?:            iklib conditions late-bind method.
                                                              (line  15)
* min:                                   baselib math ops comparison.
                                                              (line   7)
* mixins:                                iklib records defs.  (line  20)
* mod:                                   baselib math ops arithmetic.
                                                              (line 112)
* mod0:                                  baselib math ops arithmetic.
                                                              (line 115)
* module:                                iklib modules api.   (line   9)
* module <1>:                            iklib modules api.   (line  10)
* modulo:                                stdlib rfive compat. (line  18)
* monitor:                               iklib coroutines syntaxes.
                                                              (line  10)
* mutable-hashtable?:                    iklib hashtables pred.
                                                              (line   6)
* named-case-lambda:                     iklib syntaxes lambdas named.
                                                              (line  17)
* named-case-lambda*:                    iklib syntaxes lambdas star.
                                                              (line 181)
* named-lambda:                          iklib syntaxes lambdas named.
                                                              (line   6)
* named-lambda*:                         iklib syntaxes lambdas star.
                                                              (line  86)
* nan?:                                  baselib math ops value pred.
                                                              (line  55)
* native-endianness:                     stdlib bytevector general.
                                                              (line  23)
* native-eol-style:                      stdlib io port transcoders.
                                                              (line  69)
* native-transcoder:                     stdlib io port transcoders.
                                                              (line 154)
* native-transcoder <1>:                 iklib io codecs.     (line  14)
* nebytevector?:                         iklib bytevectors predicates.
                                                              (line  14)
* negative-bignum?:                      iklib numerics bignums.
                                                              (line  15)
* negative-byte-fixnum?:                 iklib fixnums predicates.
                                                              (line  34)
* negative-exact-integer?:               iklib numerics preds.
                                                              (line  82)
* negative-fixnum?:                      iklib fixnums predicates.
                                                              (line  21)
* negative-flonum?:                      iklib flonums.       (line  28)
* negative-ratnum?:                      iklib numerics ratnums.
                                                              (line  15)
* negative-zero-flonum?:                 iklib flonums.       (line  22)
* negative?:                             baselib math ops value pred.
                                                              (line  50)
* neq?:                                  iklib misc.          (line   6)
* nestring?:                             iklib strings predicates.
                                                              (line  22)
* nevector?:                             iklib vectors predicates.
                                                              (line  15)
* new-cafe:                              iklib cafe.          (line   8)
* new-cafe <1>:                          iklib cafe.          (line   9)
* new-interaction-environment:           iklib environment.   (line  28)
* new-interaction-environment <1>:       iklib environment.   (line  29)
* newline:                               stdlib io simple.    (line 115)
* newline <1>:                           stdlib io simple.    (line 116)
* no-infinities-violation?:              stdlib arithmetic flonums.
                                                              (line 279)
* no-nans-violation?:                    stdlib arithmetic flonums.
                                                              (line 282)
* non-continuable-violation?:            stdlib exceptions conditions types.
                                                              (line 140)
* non-empty-vector?:                     iklib vectors predicates.
                                                              (line  14)
* non-interaction-lexical-environment?:  iklib environment.   (line  11)
* non-negative-bignum?:                  iklib numerics bignums.
                                                              (line  17)
* non-negative-exact-integer?:           iklib numerics preds.
                                                              (line  87)
* non-negative-fixnum?:                  iklib fixnums predicates.
                                                              (line  23)
* non-negative-flonum?:                  iklib flonums.       (line  30)
* non-negative-ratnum?:                  iklib numerics ratnums.
                                                              (line  17)
* non-negative?:                         iklib numerics preds.
                                                              (line  72)
* non-positive-bignum?:                  iklib numerics bignums.
                                                              (line  16)
* non-positive-exact-integer?:           iklib numerics preds.
                                                              (line  86)
* non-positive-fixnum?:                  iklib fixnums predicates.
                                                              (line  22)
* non-positive-flonum?:                  iklib flonums.       (line  29)
* non-positive-ratnum?:                  iklib numerics ratnums.
                                                              (line  16)
* non-positive?:                         iklib numerics preds.
                                                              (line  71)
* non-reinstatable-violation:            iklib conditions non-reinst.
                                                              (line  19)
* non-reinstatable-violation?:           iklib conditions non-reinst.
                                                              (line  15)
* non-zero-cflonum?:                     iklib numerics preds.
                                                              (line  67)
* non-zero-compnum?:                     iklib numerics preds.
                                                              (line  54)
* non-zero-fixnum?:                      iklib fixnums predicates.
                                                              (line  16)
* non-zero-inexact-compnum?:             iklib numerics preds.
                                                              (line  58)
* nongenerative:                         stdlib records syntactic layer.
                                                              (line 130)
* nongenerative <1>:                     stdlib records syntactic layer.
                                                              (line 131)
* nongenerative <2>:                     syslib structs safe define.
                                                              (line  12)
* normalise-percent-encoding:            iklib bytevectors conversion.
                                                              (line 188)
* normalise-uri-encoding:                iklib bytevectors conversion.
                                                              (line 187)
* not:                                   baselib booleans.    (line  14)
* null-environment:                      stdlib rfive compat. (line 174)
* null-memory-block:                     iklib memory blocks. (line  51)
* null-pointer:                          iklib pointers cons. (line   9)
* null?:                                 baselib lists.       (line  93)
* number->string:                        baselib math string. (line   6)
* number->string <1>:                    baselib math string. (line   7)
* number->string <2>:                    baselib math string. (line   8)
* number?:                               baselib math ops type pred.
                                                              (line   6)
* numerator:                             baselib math ops part.
                                                              (line   6)
* object-hash:                           iklib hashtables hashfun.
                                                              (line 156)
* object-type-spec.ancestor-ots*:        expander specs object.
                                                              (line 133)
* object-type-spec.applicable-hash-function: expander specs object.
                                                              (line 105)
* object-type-spec.applicable-method-stx: expander specs object.
                                                              (line 114)
* object-type-spec.common-ancestor:      expander specs object.
                                                              (line 143)
* object-type-spec.comparison-procedure: expander specs object.
                                                              (line 101)
* object-type-spec.compatible-super-and-sub?: expander specs object.
                                                              (line 168)
* object-type-spec.constructor-stx:      expander specs object.
                                                              (line  44)
* object-type-spec.destructor-stx:       expander specs object.
                                                              (line  74)
* object-type-spec.equality-predicate:   expander specs object.
                                                              (line  97)
* object-type-spec.implemented-interfaces: expander specs object.
                                                              (line 110)
* object-type-spec.list-sub-type?:       expander specs object.
                                                              (line 188)
* object-type-spec.matching-super-and-sub?: expander specs object.
                                                              (line 149)
* object-type-spec.name:                 expander specs object.
                                                              (line  18)
* object-type-spec.parent-ots:           expander specs object.
                                                              (line  40)
* object-type-spec.procedure?:           expander specs object.
                                                              (line 182)
* object-type-spec.type-annotation:      expander specs object.
                                                              (line  19)
* object-type-spec.type-predicate-stx:   expander specs object.
                                                              (line  83)
* object-type-spec.uids-list:            expander specs object.
                                                              (line  34)
* object-type-spec.vector-sub-type?:     expander specs object.
                                                              (line 192)
* object-type-spec=?:                    expander specs object.
                                                              (line 129)
* object-type-spec?:                     expander specs object.
                                                              (line  14)
* octet-fixnum?:                         iklib fixnums predicates.
                                                              (line  38)
* octets->string:                        iklib strings conversion.
                                                              (line  22)
* octets-encoded-bytevector?:            iklib bytevectors conversion.
                                                              (line 138)
* octets-encoded-string?:                iklib strings conversion.
                                                              (line  34)
* odd?:                                  baselib math ops value pred.
                                                              (line  51)
* one-based-return-value-index-condition?: iklib conditions exprindex.
                                                              (line  47)
* opaque:                                stdlib records syntactic layer.
                                                              (line 123)
* opaque <1>:                            stdlib records syntactic layer.
                                                              (line 124)
* open-binary-input-port?:               iklib io binary.     (line  20)
* open-binary-input/output-port?:        iklib io binary.     (line  22)
* open-binary-output-port?:              iklib io binary.     (line  21)
* open-binary-port?:                     iklib io binary.     (line  19)
* open-bytevector-input-port:            stdlib io port input ports.
                                                              (line  57)
* open-bytevector-input-port <1>:        stdlib io port input ports.
                                                              (line  58)
* open-bytevector-output-port:           stdlib io port output ports.
                                                              (line  48)
* open-bytevector-output-port <1>:       stdlib io port output ports.
                                                              (line  49)
* open-file-input-port:                  stdlib io port input ports.
                                                              (line  30)
* open-file-input-port <1>:              stdlib io port input ports.
                                                              (line  31)
* open-file-input-port <2>:              stdlib io port input ports.
                                                              (line  32)
* open-file-input-port <3>:              stdlib io port input ports.
                                                              (line  33)
* open-file-input/output-port:           stdlib io port input output ports.
                                                              (line   6)
* open-file-input/output-port <1>:       stdlib io port input output ports.
                                                              (line   7)
* open-file-input/output-port <2>:       stdlib io port input output ports.
                                                              (line   8)
* open-file-input/output-port <3>:       stdlib io port input output ports.
                                                              (line  10)
* open-file-output-port:                 stdlib io port output ports.
                                                              (line  22)
* open-file-output-port <1>:             stdlib io port output ports.
                                                              (line  23)
* open-file-output-port <2>:             stdlib io port output ports.
                                                              (line  24)
* open-file-output-port <3>:             stdlib io port output ports.
                                                              (line  25)
* open-input-file:                       stdlib io simple.    (line  64)
* open-input-file <1>:                   iklib io codecs.     (line  15)
* open-input-port?:                      iklib io misc.       (line  43)
* open-input/output-port?:               iklib io misc.       (line  45)
* open-output-file:                      stdlib io simple.    (line  68)
* open-output-file <1>:                  iklib io codecs.     (line  15)
* open-output-port?:                     iklib io misc.       (line  44)
* open-port?:                            iklib io misc.       (line  38)
* open-shared-object:                    ffi shared.          (line  10)
* open-shared-object <1>:                ffi shared.          (line  11)
* open-string-input-port:                stdlib io port input ports.
                                                              (line  75)
* open-string-input-port <1>:            iklib io textual.    (line  41)
* open-string-input-port <2>:            iklib io textual.    (line  42)
* open-string-input-port/id:             iklib io textual.    (line  52)
* open-string-input-port/id <1>:         iklib io textual.    (line  53)
* open-string-output-port:               stdlib io port output ports.
                                                              (line  86)
* open-string-output-port <1>:           iklib io textual.    (line  57)
* open-string-output-port <2>:           iklib io textual.    (line  58)
* open-textual-input-port?:              iklib io textual.    (line  35)
* open-textual-input/output-port?:       iklib io textual.    (line  37)
* open-textual-output-port?:             iklib io textual.    (line  36)
* open-textual-port?:                    iklib io textual.    (line  34)
* optimisation-of:                       iklib syntaxes optim-of.
                                                              (line   6)
* optimisation-of*:                      iklib syntaxes optim-of.
                                                              (line  31)
* optimize-level:                        compiler optimisation.
                                                              (line  37)
* or:                                    baselib expressions derived cond.
                                                              (line 197)
* ormap:                                 iklib lists misc.    (line  69)
* os-name:                               iklib env-inquiry.   (line  72)
* os-version:                            iklib env-inquiry.   (line  79)
* out-of-memory-error?:                  iklib memory condition.
                                                              (line  14)
* output-file-buffer-size:               iklib io buffer.     (line  23)
* output-file-buffer-size <1>:           iklib io buffer.     (line  24)
* output-port-buffer-mode:               stdlib io port output ports.
                                                              (line  19)
* output-port?:                          stdlib io port output ports.
                                                              (line  10)
* output-port? <1>:                      stdlib io simple.    (line  35)
* overloaded-function-late-binding-error?: iklib conditions late-bind overload.
                                                              (line  15)
* pair-hash:                             iklib hashtables hashfun.
                                                              (line  86)
* pair-of-type-spec.item-ots:            expander specs pair-of.
                                                              (line  21)
* pair-of-type-spec?:                    expander specs pair-of.
                                                              (line  17)
* pair-type-spec.car-ots:                expander specs pair. (line  22)
* pair-type-spec.cdr-ots:                expander specs pair. (line  23)
* pair-type-spec?:                       expander specs pair. (line  18)
* pair?:                                 baselib lists.       (line  46)
* parameterise:                          iklib parameters.    (line  98)
* parameterize:                          iklib parameters.    (line  97)
* parametrise:                           iklib parameters.    (line  96)
* parent:                                stdlib records syntactic layer.
                                                              (line  96)
* parent-rtd:                            stdlib records syntactic layer.
                                                              (line 161)
* parse-logic-predicate-syntax:          expander utils special.
                                                              (line   6)
* parse-logic-predicate-syntax <1>:      expander utils special.
                                                              (line   7)
* partition:                             stdlib list.         (line 113)
* pass-assign-frame-sizes:               compiler cogen frame.
                                                              (line   8)
* pass-code-generation:                  compiler cogen.      (line   8)
* pass-color-by-chaitin:                 compiler cogen color.
                                                              (line  13)
* pass-core-type-inference:              compiler type inference.
                                                              (line  50)
* pass-flatten-codes:                    compiler cogen flatten.
                                                              (line   8)
* pass-impose-calling-convention/evaluation-order: compiler cogen order.
                                                              (line   8)
* pass-insert-engine-checks:             compiler engine.     (line  21)
* pass-insert-global-assignments:        compiler global assign.
                                                              (line   8)
* pass-insert-stack-overflow-check:      compiler stack.      (line  22)
* pass-introduce-closure-makers:         compiler closure makers.
                                                              (line  52)
* pass-introduce-primitive-operation-calls: compiler primopcalls.
                                                              (line  29)
* pass-introduce-unsafe-primrefs:        compiler unsafe primrefs.
                                                              (line  39)
* pass-introduce-vars:                   compiler vars.       (line   8)
* pass-optimize-combinator-calls/lift-clambdas: compiler lifting api.
                                                              (line   8)
* pass-optimize-direct-calls:            compiler dircalls.   (line   8)
* pass-optimize-for-direct-jumps:        compiler direct jumps.
                                                              (line  32)
* pass-optimize-letrec:                  compiler letrec api. (line   8)
* pass-recordize:                        compiler recordize.  (line  15)
* pass-rewrite-freevar-references:       compiler freevar refs.
                                                              (line  36)
* pass-rewrite-references-and-assignments: compiler refassig. (line  36)
* pass-sanitize-bindings:                compiler sanitise bindings.
                                                              (line  14)
* pass-source-optimize:                  compiler optimisation.
                                                              (line  21)
* pass-specify-representation:           compiler cogen primop.
                                                              (line   8)
* pathname->string-func:                 iklib io pathnames.  (line  19)
* peek-char:                             stdlib io simple.    (line  92)
* peek-char <1>:                         stdlib io simple.    (line  93)
* peek-char <2>:                         iklib io non-blocking textual.
                                                              (line  27)
* peek-char <3>:                         iklib io non-blocking textual.
                                                              (line  28)
* percent-decode:                        iklib bytevectors conversion.
                                                              (line 177)
* percent-encode:                        iklib bytevectors conversion.
                                                              (line 176)
* percent-encoded-bytevector?:           iklib bytevectors conversion.
                                                              (line 194)
* percent-encoded-string?:               iklib strings conversion.
                                                              (line 108)
* percent-encoding->string:              iklib strings conversion.
                                                              (line 102)
* perform-core-type-inference?:          compiler type inference.
                                                              (line  56)
* perform-unsafe-primrefs-introduction?: compiler unsafe primrefs.
                                                              (line  45)
* pointer!=?:                            iklib pointers compar.
                                                              (line  27)
* pointer->integer:                      iklib pointers conv. (line   9)
* pointer-add:                           iklib pointers misc. (line  19)
* pointer-and-offset?:                   iklib pointers pred. (line  24)
* pointer-clone:                         iklib pointers cons. (line  12)
* pointer-diff:                          iklib pointers misc. (line  12)
* pointer-hash:                          iklib hashtables hashfun.
                                                              (line 142)
* pointer-max:                           iklib pointers compar.
                                                              (line  32)
* pointer-min:                           iklib pointers compar.
                                                              (line  33)
* pointer-non-null?:                     iklib pointers pred. (line  20)
* pointer-null?:                         iklib pointers pred. (line  16)
* pointer-ref-c-double:                  iklib pointers peek. (line 102)
* pointer-ref-c-double-complex:          iklib pointers peek. (line 106)
* pointer-ref-c-float:                   iklib pointers peek. (line  96)
* pointer-ref-c-off_t:                   iklib pointers peek. (line  85)
* pointer-ref-c-pointer:                 iklib pointers peek. (line 114)
* pointer-ref-c-ptrdiff_t:               iklib pointers peek. (line  89)
* pointer-ref-c-signed-char:             iklib pointers peek. (line  50)
* pointer-ref-c-signed-char <1>:         iklib pointers peek. (line  51)
* pointer-ref-c-signed-int:              iklib pointers peek. (line  61)
* pointer-ref-c-signed-long:             iklib pointers peek. (line  66)
* pointer-ref-c-signed-long-long:        iklib pointers peek. (line  71)
* pointer-ref-c-signed-short:            iklib pointers peek. (line  55)
* pointer-ref-c-sint16:                  iklib pointers peek. (line  28)
* pointer-ref-c-sint32:                  iklib pointers peek. (line  33)
* pointer-ref-c-sint64:                  iklib pointers peek. (line  38)
* pointer-ref-c-sint8:                   iklib pointers peek. (line  23)
* pointer-ref-c-size_t:                  iklib pointers peek. (line  77)
* pointer-ref-c-ssize_t:                 iklib pointers peek. (line  81)
* pointer-ref-c-uint16:                  iklib pointers peek. (line  29)
* pointer-ref-c-uint32:                  iklib pointers peek. (line  34)
* pointer-ref-c-uint64:                  iklib pointers peek. (line  39)
* pointer-ref-c-uint8:                   iklib pointers peek. (line  24)
* pointer-ref-c-unsigned-int:            iklib pointers peek. (line  62)
* pointer-ref-c-unsigned-long:           iklib pointers peek. (line  67)
* pointer-ref-c-unsigned-long-long:      iklib pointers peek. (line  72)
* pointer-ref-c-unsigned-short:          iklib pointers peek. (line  56)
* pointer-set-c-double!:                 iklib pointers poke. (line 104)
* pointer-set-c-double-complex!:         iklib pointers poke. (line 108)
* pointer-set-c-float!:                  iklib pointers poke. (line  98)
* pointer-set-c-off_t!:                  iklib pointers poke. (line  87)
* pointer-set-c-pointer!:                iklib pointers poke. (line 116)
* pointer-set-c-ptrdiff_t!:              iklib pointers poke. (line  91)
* pointer-set-c-signed-char!:            iklib pointers poke. (line  54)
* pointer-set-c-signed-int!:             iklib pointers poke. (line  64)
* pointer-set-c-signed-long!:            iklib pointers poke. (line  69)
* pointer-set-c-signed-long-long!:       iklib pointers poke. (line  74)
* pointer-set-c-signed-short!:           iklib pointers poke. (line  59)
* pointer-set-c-sint16!:                 iklib pointers poke. (line  29)
* pointer-set-c-sint32!:                 iklib pointers poke. (line  35)
* pointer-set-c-sint64!:                 iklib pointers poke. (line  41)
* pointer-set-c-sint8!:                  iklib pointers poke. (line  23)
* pointer-set-c-size_t!:                 iklib pointers poke. (line  79)
* pointer-set-c-ssize_t!:                iklib pointers poke. (line  83)
* pointer-set-c-uint16!:                 iklib pointers poke. (line  30)
* pointer-set-c-uint32!:                 iklib pointers poke. (line  36)
* pointer-set-c-uint64!:                 iklib pointers poke. (line  42)
* pointer-set-c-uint8!:                  iklib pointers poke. (line  24)
* pointer-set-c-unsigned-char!:          iklib pointers poke. (line  55)
* pointer-set-c-unsigned-int!:           iklib pointers poke. (line  65)
* pointer-set-c-unsigned-long!:          iklib pointers poke. (line  70)
* pointer-set-c-unsigned-long-long!:     iklib pointers poke. (line  75)
* pointer-set-c-unsigned-short!:         iklib pointers poke. (line  60)
* pointer-value:                         iklib hashtables hashfun.
                                                              (line 164)
* pointer<=?:                            iklib pointers compar.
                                                              (line  23)
* pointer<?:                             iklib pointers compar.
                                                              (line  21)
* pointer=?:                             iklib pointers compar.
                                                              (line  20)
* pointer>=?:                            iklib pointers compar.
                                                              (line  24)
* pointer>?:                             iklib pointers compar.
                                                              (line  22)
* pointer?:                              iklib pointers pred. (line   9)
* port-closed?:                          iklib io misc.       (line  35)
* port-dump-status:                      iklib io misc.       (line  54)
* port-eof?:                             stdlib io port input ports.
                                                              (line  23)
* port-fd:                               iklib io misc.       (line  19)
* port-getprop:                          iklib io plists.     (line  14)
* port-has-port-position?:               stdlib io port io ports.
                                                              (line  46)
* port-has-set-port-position!?:          stdlib io port io ports.
                                                              (line  68)
* port-hash:                             iklib io misc.       (line  30)
* port-id:                               iklib io misc.       (line  23)
* port-in-non-blocking-mode?:            iklib io non-blocking mode.
                                                              (line  16)
* port-mode:                             iklib reader mode.   (line  51)
* port-position:                         stdlib io port io ports.
                                                              (line  47)
* port-property-list:                    iklib io plists.     (line  22)
* port-putprop:                          iklib io plists.     (line   9)
* port-remprop:                          iklib io plists.     (line  18)
* port-set-non-blocking-mode!:           iklib io non-blocking mode.
                                                              (line   6)
* port-textual-position:                 iklib io textual.    (line  77)
* port-transcoder:                       stdlib io port io ports.
                                                              (line  15)
* port-uid:                              iklib io misc.       (line  26)
* port-unset-non-blocking-mode!:         iklib io non-blocking mode.
                                                              (line  11)
* port?:                                 stdlib io port io ports.
                                                              (line  12)
* port? <1>:                             syslib ports.        (line   9)
* positive-bignum?:                      iklib numerics bignums.
                                                              (line  14)
* positive-byte-fixnum?:                 iklib fixnums predicates.
                                                              (line  33)
* positive-exact-integer?:               iklib numerics preds.
                                                              (line  81)
* positive-fixnum?:                      iklib fixnums predicates.
                                                              (line  20)
* positive-flonum?:                      iklib flonums.       (line  27)
* positive-octet-fixnum?:                iklib fixnums predicates.
                                                              (line  43)
* positive-ratnum?:                      iklib numerics ratnums.
                                                              (line  14)
* positive-zero-flonum?:                 iklib flonums.       (line  21)
* positive?:                             baselib math ops value pred.
                                                              (line  49)
* post-decr!:                            iklib syntaxes increments.
                                                              (line  58)
* post-decr! <1>:                        iklib syntaxes increments.
                                                              (line  59)
* post-gc-hooks:                         iklib guardians api. (line  43)
* post-incr!:                            iklib syntaxes increments.
                                                              (line  25)
* post-incr! <1>:                        iklib syntaxes increments.
                                                              (line  26)
* pre-decr!:                             iklib syntaxes increments.
                                                              (line  54)
* pre-decr! <1>:                         iklib syntaxes increments.
                                                              (line  55)
* pre-incr!:                             iklib syntaxes increments.
                                                              (line  21)
* pre-incr! <1>:                         iklib syntaxes increments.
                                                              (line  22)
* prefix:                                iklib expander export specs.
                                                              (line   6)
* pretty-format:                         iklib printing pretty.
                                                              (line  91)
* pretty-print:                          iklib printing pretty.
                                                              (line   6)
* pretty-print <1>:                      iklib printing pretty.
                                                              (line   7)
* pretty-print*:                         iklib printing pretty.
                                                              (line  29)
* pretty-width:                          iklib printing pretty.
                                                              (line  69)
* pretty-width <1>:                      iklib printing pretty.
                                                              (line  70)
* print-condition:                       iklib conditions misc.
                                                              (line  39)
* print-condition <1>:                   iklib conditions misc.
                                                              (line  40)
* print-gensym:                          iklib printing pretty.
                                                              (line 107)
* print-gensym <1>:                      iklib printing pretty.
                                                              (line 108)
* print-gensym <2>:                      iklib printing pretty.
                                                              (line 109)
* print-gensym <3>:                      iklib printing pretty.
                                                              (line 110)
* print-graph:                           iklib shared.        (line  29)
* print-graph <1>:                       iklib shared.        (line  30)
* print-graph <2>:                       iklib shared.        (line  31)
* print-unicode:                         iklib printing pretty.
                                                              (line  94)
* print-unicode <1>:                     iklib printing pretty.
                                                              (line  95)
* print-unicode <2>:                     iklib printing pretty.
                                                              (line  96)
* printer-integer-radix:                 iklib printing pretty.
                                                              (line 102)
* printf:                                iklib printing formatting.
                                                              (line  58)
* Procedure:                             iklib timing.        (line  35)
* Procedure <1>:                         iklib timing.        (line  36)
* procedure-annotation:                  syslib codes safe.   (line  48)
* procedure-argument-violation:          iklib conditions procarg.
                                                              (line  19)
* procedure-argument-violation?:         iklib conditions procarg.
                                                              (line  15)
* procedure-arguments-consistency-violation: iklib conditions proccon.
                                                              (line  20)
* procedure-arguments-consistency-violation/failed-expression: iklib conditions proccon.
                                                              (line  26)
* procedure-arguments-consistency-violation?: iklib conditions proccon.
                                                              (line  15)
* procedure-postcondition-violation?:    iklib conditions procpost.
                                                              (line  15)
* procedure-precondition-violation?:     iklib conditions procpre.
                                                              (line  14)
* procedure-signature-argument-violation: iklib conditions sigarg.
                                                              (line  51)
* procedure-signature-argument-violation.failed-expression: iklib conditions sigarg.
                                                              (line  45)
* procedure-signature-argument-violation.offending-value: iklib conditions sigarg.
                                                              (line  47)
* procedure-signature-argument-violation.one-based-argument-index: iklib conditions sigarg.
                                                              (line  42)
* procedure-signature-argument-violation?: iklib conditions sigarg.
                                                              (line  38)
* procedure-signature-return-value-violation: iklib conditions rvarg.
                                                              (line  44)
* procedure-signature-return-value-violation.failed-expression: iklib conditions rvarg.
                                                              (line  36)
* procedure-signature-return-value-violation.offending-value: iklib conditions rvarg.
                                                              (line  39)
* procedure-signature-return-value-violation.one-based-return-value-index: iklib conditions rvarg.
                                                              (line  33)
* procedure-signature-return-value-violation?: iklib conditions rvarg.
                                                              (line  28)
* procedure?:                            baselib predicates.  (line 249)
* procname:                              scheme entry procedure.
                                                              (line  17)
* procname <1>:                          scheme entry procedure.
                                                              (line  20)
* program-source-pathname->program-binary-pathname: progutils pathanmes.
                                                              (line   8)
* promise-hash:                          iklib hashtables hashfun.
                                                              (line 145)
* promise?:                              iklib promises.      (line   8)
* property-list:                         iklib symbols plists.
                                                              (line  39)
* protocol:                              stdlib records syntactic layer.
                                                              (line 104)
* purge-collection-avoidance-list:       iklib gc.            (line 107)
* push-compensation:                     iklib compensations api.
                                                              (line  82)
* push-compensation-thunk:               iklib compensations api.
                                                              (line  86)
* put-bytevector:                        stdlib io port binary output.
                                                              (line   9)
* put-bytevector <1>:                    stdlib io port binary output.
                                                              (line  10)
* put-bytevector <2>:                    stdlib io port binary output.
                                                              (line  11)
* put-char:                              stdlib io port textual output.
                                                              (line   6)
* put-datum:                             stdlib io port textual output.
                                                              (line  23)
* put-string:                            stdlib io port textual output.
                                                              (line   9)
* put-string <1>:                        stdlib io port textual output.
                                                              (line  10)
* put-string <2>:                        stdlib io port textual output.
                                                              (line  11)
* put-u8:                                stdlib io port binary output.
                                                              (line   6)
* putprop:                               iklib symbols plists.
                                                              (line  25)
* quasiquote:                            baselib quasiquotation.
                                                              (line   6)
* quasisyntax:                           stdlib syntax-case derived.
                                                              (line  72)
* quote:                                 baselib expressions quotation.
                                                              (line   6)
* quotient:                              stdlib rfive compat. (line  16)
* quotient <1>:                          iklib numerics math. (line  24)
* quotient+remainder:                    iklib numerics math. (line  26)
* raise:                                 stdlib exceptions exceptions.
                                                              (line  69)
* raise-continuable:                     stdlib exceptions exceptions.
                                                              (line  78)
* raise-non-continuable-standard-condition: iklib conditions raising.
                                                              (line   6)
* raise-non-continuable-standard-condition <1>: iklib conditions raising.
                                                              (line   8)
* random:                                iklib misc.          (line 105)
* rational-valued?:                      baselib math ops type pred.
                                                              (line  86)
* rational?:                             baselib math ops type pred.
                                                              (line   9)
* rationalize:                           baselib math ops part.
                                                              (line  65)
* ratnum-hash:                           iklib hashtables hashfun.
                                                              (line 110)
* ratnum-negative?:                      iklib numerics ratnums.
                                                              (line   7)
* ratnum-non-negative?:                  iklib numerics ratnums.
                                                              (line   8)
* ratnum-non-positive?:                  iklib numerics ratnums.
                                                              (line   9)
* ratnum-positive?:                      iklib numerics ratnums.
                                                              (line   6)
* ratnum?:                               iklib numerics preds.
                                                              (line  12)
* rcd-parent-rcd:                        iklib records rcd.   (line  14)
* rcd-rtd:                               iklib records rcd.   (line  10)
* read:                                  stdlib io simple.    (line  97)
* read <1>:                              stdlib io simple.    (line  98)
* read-char:                             stdlib io simple.    (line  76)
* read-char <1>:                         stdlib io simple.    (line  77)
* read-char <2>:                         iklib io non-blocking textual.
                                                              (line  19)
* read-char <3>:                         iklib io non-blocking textual.
                                                              (line  20)
* read-line:                             iklib io textual.    (line 125)
* read-line <1>:                         iklib io textual.    (line 126)
* reader-annotation-expression:          iklib reader annotations.
                                                              (line  36)
* reader-annotation-source:              iklib reader annotations.
                                                              (line  48)
* reader-annotation-stripped:            iklib reader annotations.
                                                              (line  40)
* reader-annotation-textual-position:    iklib reader annotations.
                                                              (line  44)
* reader-annotation?:                    iklib reader annotations.
                                                              (line  32)
* reader-import:                         iklib reader extensions.
                                                              (line  49)
* readline:                              iklib readline.      (line  16)
* readline <1>:                          iklib readline.      (line  17)
* readline-enabled?:                     iklib readline.      (line  11)
* real->flonum:                          stdlib arithmetic flonums.
                                                              (line  16)
* real-part:                             baselib math ops complex.
                                                              (line   8)
* real-valued?:                          baselib math ops type pred.
                                                              (line  85)
* real?:                                 baselib math ops type pred.
                                                              (line   8)
* realloc:                               iklib memory alloc.  (line  22)
* receive:                               iklib syntaxes bindings.
                                                              (line   6)
* receive-and-return:                    iklib syntaxes bindings.
                                                              (line  20)
* record!=?:                             iklib records misc.  (line  14)
* record-accessor:                       stdlib records procedural layer.
                                                              (line 254)
* record-accessor <1>:                   iklib records fields.
                                                              (line   6)
* record-accessor <2>:                   iklib records fields.
                                                              (line   7)
* record-and-rtd?:                       iklib records predicates.
                                                              (line   6)
* record-comparison-procedure:           iklib records comparison.
                                                              (line  20)
* record-constructor:                    stdlib records procedural layer.
                                                              (line 244)
* record-constructor-descriptor:         stdlib records syntactic layer.
                                                              (line 317)
* record-constructor-descriptor?:        iklib records rcd.   (line   6)
* record-destructor:                     iklib records final. (line  58)
* record-equality-predicate:             iklib records equality.
                                                              (line  19)
* record-field-mutable?:                 stdlib records inspection.
                                                              (line  63)
* record-guardian-log:                   iklib records final. (line  80)
* record-guardian-logger:                iklib records final. (line  62)
* record-hash:                           iklib hashtables hashfun.
                                                              (line 130)
* record-hash-function:                  iklib records hash.  (line  23)
* record-mutator:                        stdlib records procedural layer.
                                                              (line 265)
* record-mutator <1>:                    iklib records fields.
                                                              (line  54)
* record-mutator <2>:                    iklib records fields.
                                                              (line  55)
* record-object?:                        iklib records misc.  (line  23)
* record-predicate:                      stdlib records procedural layer.
                                                              (line 250)
* record-printer:                        iklib records printer.
                                                              (line 147)
* record-ref:                            iklib records fields.
                                                              (line 120)
* record-reset!:                         iklib records misc.  (line  20)
* record-rtd:                            stdlib records inspection.
                                                              (line  23)
* record-type-all-field-names:           iklib records misc.  (line  27)
* record-type-and-record?:               iklib records predicates.
                                                              (line  12)
* record-type-comparison-procedure:      iklib records comparison.
                                                              (line  16)
* record-type-comparison-procedure-set!: iklib records comparison.
                                                              (line  11)
* record-type-descriptor:                stdlib records syntactic layer.
                                                              (line 310)
* record-type-descriptor?:               stdlib records procedural layer.
                                                              (line  82)
* record-type-destructor:                iklib records final. (line  54)
* record-type-destructor-set!:           iklib records final. (line  48)
* record-type-equality-predicate:        iklib records equality.
                                                              (line  15)
* record-type-equality-predicate-set!:   iklib records equality.
                                                              (line  10)
* record-type-field-names:               stdlib records inspection.
                                                              (line  55)
* record-type-generative?:               stdlib records inspection.
                                                              (line  44)
* record-type-hash-function:             iklib records hash.  (line  19)
* record-type-hash-function-set!:        iklib records hash.  (line  14)
* record-type-name:                      stdlib records inspection.
                                                              (line  30)
* record-type-opaque?:                   stdlib records inspection.
                                                              (line  51)
* record-type-parent:                    stdlib records inspection.
                                                              (line  34)
* record-type-printer:                   iklib records printer.
                                                              (line 143)
* record-type-printer-set!:              iklib records printer.
                                                              (line 137)
* record-type-sealed?:                   stdlib records inspection.
                                                              (line  47)
* record-type-spec.parent-and-child?:    expander specs record.
                                                              (line  22)
* record-type-spec.rcd-id:               expander specs record.
                                                              (line  18)
* record-type-spec.rtd-id:               expander specs record.
                                                              (line  17)
* record-type-spec?:                     expander specs record.
                                                              (line  13)
* record-type-uid:                       stdlib records inspection.
                                                              (line  38)
* record-type-uids-list:                 iklib records misc.  (line  63)
* record=?:                              iklib records misc.  (line   8)
* record?:                               stdlib records inspection.
                                                              (line  19)
* register-to-avoid-collecting:          iklib gc.            (line  66)
* remainder:                             stdlib rfive compat. (line  17)
* remainder <1>:                         iklib numerics math. (line  25)
* remove:                                stdlib list.         (line 257)
* remp:                                  stdlib list.         (line 256)
* remprop:                               iklib symbols plists.
                                                              (line  36)
* remq:                                  stdlib list.         (line 259)
* remv:                                  stdlib list.         (line 258)
* replace-to-avoid-collecting:           iklib gc.            (line  93)
* reset:                                 iklib syntaxes delimcc.
                                                              (line   6)
* reset-coroutines!:                     iklib coroutines debug.
                                                              (line   6)
* reset-input-port!:                     iklib io misc.       (line  58)
* reset-output-port!:                    iklib io misc.       (line  59)
* reset-symbol-proc!:                    iklib symbols value. (line 107)
* resume-coroutine:                      iklib coroutines suspend.
                                                              (line  11)
* retrieve-expand-time-value:            iklib expander etv.  (line  51)
* retrieve-to-avoid-collecting:          iklib gc.            (line  85)
* return:                                iklib syntaxes returnable.
                                                              (line  23)
* returnable:                            iklib syntaxes returnable.
                                                              (line  28)
* reverse:                               baselib lists.       (line 142)
* round:                                 baselib math ops part.
                                                              (line  20)
* run-compensations:                     iklib compensations api.
                                                              (line  39)
* run-time-library-locator:              libutils file-system locators run.
                                                              (line  59)
* s16b-list->bytevector:                 iklib bytevectors conversion.
                                                              (line  51)
* s16l-list->bytevector:                 iklib bytevectors conversion.
                                                              (line  50)
* s16n-list->bytevector:                 iklib bytevectors conversion.
                                                              (line  52)
* s32b-list->bytevector:                 iklib bytevectors conversion.
                                                              (line  67)
* s32l-list->bytevector:                 iklib bytevectors conversion.
                                                              (line  66)
* s32n-list->bytevector:                 iklib bytevectors conversion.
                                                              (line  68)
* s64b-list->bytevector:                 iklib bytevectors conversion.
                                                              (line  83)
* s64l-list->bytevector:                 iklib bytevectors conversion.
                                                              (line  82)
* s64n-list->bytevector:                 iklib bytevectors conversion.
                                                              (line  84)
* s8-list->bytevector:                   iklib bytevectors conversion.
                                                              (line  47)
* scheme-heap-nursery-size:              iklib runtime.       (line   9)
* scheme-heap-nursery-size <1>:          iklib runtime.       (line  10)
* scheme-report-environment:             stdlib rfive compat. (line 184)
* scheme-stack-size:                     iklib runtime.       (line  38)
* scheme-stack-size <1>:                 iklib runtime.       (line  39)
* sealed:                                stdlib records syntactic layer.
                                                              (line 116)
* sealed <1>:                            stdlib records syntactic layer.
                                                              (line 117)
* search-file-in-environment-path:       iklib io pathnames.  (line 168)
* search-file-in-list-path:              iklib io pathnames.  (line 195)
* sentinel:                              iklib sentinel.      (line  13)
* sentinel-hash:                         iklib hashtables hashfun.
                                                              (line 151)
* sentinel?:                             iklib sentinel.      (line  16)
* serious-condition?:                    stdlib exceptions conditions types.
                                                              (line  61)
* set!:                                  baselib expressions assignments.
                                                              (line   6)
* set! <1>:                              baselib transformers.
                                                              (line 207)
* set-car!:                              stdlib mutable pairs.
                                                              (line  10)
* set-cdr!:                              stdlib mutable pairs.
                                                              (line  23)
* set-code-annotation!:                  syslib codes safe.   (line  42)
* set-code-reloc-vector!:                syslib codes safe.   (line  30)
* set-cons!:                             iklib syntaxes misc. (line 100)
* set-pointer-null!:                     iklib pointers misc. (line   9)
* set-port-buffer-mode!:                 iklib io misc.       (line  49)
* set-port-mode!:                        iklib reader mode.   (line  64)
* set-port-position!:                    stdlib io port io ports.
                                                              (line  69)
* set-struct-type-destructor!:           syslib structs safe final.
                                                              (line  40)
* set-struct-type-printer!:              syslib structs safe printer.
                                                              (line 139)
* set-symbol-value!:                     iklib symbols value. (line 126)
* set-top-level-value!:                  iklib symbols value. (line 103)
* shared-object-closing-error?:          ffi shared.          (line 105)
* shared-object-error?:                  ffi shared.          (line  65)
* shared-object-lookup-error?:           ffi shared.          (line 131)
* shared-object-opening-error?:          ffi shared.          (line  83)
* shift:                                 iklib syntaxes delimcc.
                                                              (line  10)
* sign:                                  iklib numerics math. (line  61)
* simple-condition?:                     iklib conditions preds.
                                                              (line   6)
* simple-conditions:                     stdlib exceptions conditions objects.
                                                              (line  33)
* sin:                                   baselib math ops trascend.
                                                              (line   9)
* sinh:                                  iklib numerics math. (line  88)
* sint-list->bytevector:                 stdlib bytevector integers.
                                                              (line  65)
* sll:                                   iklib numerics bitwise.
                                                              (line  11)
* sorted-vector-binary-search:           iklib vectors misc.  (line  17)
* source-library-locator:                libutils file-system locators source.
                                                              (line 138)
* source-optimizer-passes-count:         compiler optimisation.
                                                              (line  27)
* source-position-byte:                  iklib conditions spos.
                                                              (line  42)
* source-position-character:             iklib conditions spos.
                                                              (line  43)
* source-position-column:                iklib conditions spos.
                                                              (line  45)
* source-position-condition?:            iklib conditions spos.
                                                              (line  37)
* source-position-line:                  iklib conditions spos.
                                                              (line  44)
* source-position-port-id:               iklib conditions spos.
                                                              (line  41)
* splice-first-expand:                   iklib syntaxes splice1st.
                                                              (line   6)
* split-pathname:                        iklib io pathnames.  (line 127)
* split-pathname-bytevector:             iklib io pathnames.  (line 128)
* split-pathname-root-and-tail:          iklib io pathnames.  (line  57)
* split-pathname-string:                 iklib io pathnames.  (line 129)
* split-search-path:                     iklib io pathnames.  (line  84)
* split-search-path-bytevector:          iklib io pathnames.  (line  85)
* split-search-path-string:              iklib io pathnames.  (line  86)
* sqrt:                                  baselib math ops exponentiation.
                                                              (line   6)
* square:                                iklib numerics math. (line  15)
* sra:                                   iklib numerics bitwise.
                                                              (line   8)
* stale-when:                            iklib syntaxes stale.
                                                              (line   6)
* standard-error-port:                   stdlib io port output ports.
                                                              (line 117)
* standard-input-port:                   stdlib io port input ports.
                                                              (line  84)
* standard-output-port:                  stdlib io port output ports.
                                                              (line 116)
* stats-bytes-major:                     iklib timing.        (line 169)
* stats-bytes-minor:                     iklib timing.        (line 166)
* stats-collection-id:                   iklib timing.        (line 145)
* stats-gc-real-secs:                    iklib timing.        (line 160)
* stats-gc-real-usecs:                   iklib timing.        (line 163)
* stats-gc-sys-secs:                     iklib timing.        (line 154)
* stats-gc-sys-usecs:                    iklib timing.        (line 157)
* stats-gc-user-secs:                    iklib timing.        (line 148)
* stats-gc-user-usecs:                   iklib timing.        (line 151)
* stats-real-secs:                       iklib timing.        (line 139)
* stats-real-usecs:                      iklib timing.        (line 142)
* stats-sys-secs:                        iklib timing.        (line 133)
* stats-sys-usecs:                       iklib timing.        (line 136)
* stats-user-secs:                       iklib timing.        (line 127)
* stats-user-usecs:                      iklib timing.        (line 130)
* stats?:                                iklib timing.        (line 124)
* strcmp:                                iklib cstrings.      (line  79)
* strdup:                                iklib cstrings.      (line  93)
* strerror:                              iklib misc.          (line  93)
* strict-r6rs-enabled?:                  iklib expander language.
                                                              (line  22)
* strict-r6rs-enabled? <1>:              iklib expander language.
                                                              (line  23)
* string:                                baselib strings.     (line  21)
* string!=?:                             iklib strings comparison.
                                                              (line   6)
* string->ascii:                         iklib strings conversion.
                                                              (line  29)
* string->bytevector:                    stdlib io port transcoders.
                                                              (line 169)
* string->cstring:                       iklib cstrings.      (line  36)
* string->cstring*:                      iklib cstrings.      (line  62)
* string->filename-func:                 iklib io pathnames.  (line  12)
* string->flonum:                        iklib flonums.       (line  68)
* string->guarded-cstring:               iklib cstrings.      (line  37)
* string->guarded-cstring*:              iklib cstrings.      (line  63)
* string->identifier:                    expander utils id.   (line  48)
* string->keyword:                       iklib keywords.      (line  28)
* string->latin1:                        iklib strings conversion.
                                                              (line  48)
* string->list:                          baselib strings.     (line  71)
* string->number:                        baselib math string. (line  47)
* string->number <1>:                    baselib math string. (line  48)
* string->octets:                        iklib strings conversion.
                                                              (line  21)
* string->pathname-func:                 iklib io pathnames.  (line  13)
* string->percent-encoding:              iklib strings conversion.
                                                              (line  97)
* string->symbol:                        baselib symbols.     (line  32)
* string->uri-encoding:                  iklib strings conversion.
                                                              (line  96)
* string->utf16:                         stdlib bytevector strings.
                                                              (line  18)
* string->utf16 <1>:                     stdlib bytevector strings.
                                                              (line  19)
* string->utf16-length:                  iklib strings conversion.
                                                              (line  11)
* string->utf16be:                       iklib strings conversion.
                                                              (line  59)
* string->utf16le:                       iklib strings conversion.
                                                              (line  58)
* string->utf16n:                        iklib strings conversion.
                                                              (line  60)
* string->utf32:                         stdlib bytevector strings.
                                                              (line  27)
* string->utf32 <1>:                     stdlib bytevector strings.
                                                              (line  28)
* string->utf32-length:                  iklib strings conversion.
                                                              (line  16)
* string->utf8:                          stdlib bytevector strings.
                                                              (line  14)
* string->utf8-length:                   iklib strings conversion.
                                                              (line   6)
* string-append:                         baselib strings.     (line  67)
* string-base64->bytevector:             iklib strings conversion.
                                                              (line  88)
* string-ci-hash:                        stdlib hashtable hash functions.
                                                              (line  45)
* string-ci-hash <1>:                    stdlib hashtable hash functions.
                                                              (line  46)
* string-ci<=?:                          stdlib unicode strings.
                                                              (line  52)
* string-ci<?:                           stdlib unicode strings.
                                                              (line  50)
* string-ci=?:                           stdlib unicode strings.
                                                              (line  49)
* string-ci>=?:                          stdlib unicode strings.
                                                              (line  53)
* string-ci>?:                           stdlib unicode strings.
                                                              (line  51)
* string-concatenate:                    iklib strings constructors.
                                                              (line  11)
* string-copy:                           baselib strings.     (line 101)
* string-copy!:                          iklib strings constructors.
                                                              (line   6)
* string-decoding-error?:                iklib conditions string generic.
                                                              (line  30)
* string-downcase:                       stdlib unicode strings.
                                                              (line   7)
* string-empty?:                         iklib strings predicates.
                                                              (line  14)
* string-encoding-error?:                iklib conditions string generic.
                                                              (line  16)
* string-fill!:                          stdlib mutable strings.
                                                              (line  32)
* string-foldcase:                       stdlib unicode strings.
                                                              (line   9)
* string-for-each:                       baselib strings.     (line  84)
* string-hash:                           stdlib hashtable hash functions.
                                                              (line  19)
* string-hash <1>:                       stdlib hashtable hash functions.
                                                              (line  20)
* string-hex->bytevector:                iklib strings conversion.
                                                              (line  78)
* string-length:                         baselib strings.     (line  24)
* string-max:                            iklib strings comparison.
                                                              (line  11)
* string-min:                            iklib strings comparison.
                                                              (line  12)
* string-normalize-nfc:                  stdlib unicode strings.
                                                              (line  62)
* string-normalize-nfd:                  stdlib unicode strings.
                                                              (line  60)
* string-normalize-nfkc:                 stdlib unicode strings.
                                                              (line  63)
* string-normalize-nfkd:                 stdlib unicode strings.
                                                              (line  61)
* string-or-symbol->string:              iklib strings conversion.
                                                              (line 114)
* string-or-symbol->symbol:              iklib strings conversion.
                                                              (line 118)
* string-port-buffer-size:               iklib io buffer.     (line  13)
* string-port-buffer-size <1>:           iklib io buffer.     (line  14)
* string-ref:                            baselib strings.     (line  28)
* string-reverse-and-concatenate:        iklib strings constructors.
                                                              (line  16)
* string-set!:                           stdlib mutable strings.
                                                              (line   9)
* string-titlecase:                      stdlib unicode strings.
                                                              (line   8)
* string-upcase:                         stdlib unicode strings.
                                                              (line   6)
* string<=?:                             baselib strings.     (line  44)
* string<?:                              baselib strings.     (line  42)
* string=?:                              baselib strings.     (line  35)
* string>=?:                             baselib strings.     (line  45)
* string>?:                              baselib strings.     (line  43)
* string?:                               baselib strings.     (line  12)
* strings->argv:                         iklib cstrings.      (line 140)
* strings->guarded-argv:                 iklib cstrings.      (line 141)
* strip-angular-parentheses:             iklib records defs.  (line  19)
* strlen:                                iklib cstrings.      (line  74)
* strncmp:                               iklib cstrings.      (line  85)
* strndup:                               iklib cstrings.      (line 106)
* struct!=?:                             syslib structs safe data.
                                                              (line  65)
* struct-and-std-ref:                    syslib structs safe data.
                                                              (line  51)
* struct-and-std-set!:                   syslib structs safe data.
                                                              (line  55)
* struct-and-std?:                       syslib structs safe data.
                                                              (line  13)
* struct-destructor:                     syslib structs safe data.
                                                              (line  41)
* struct-field-names:                    syslib structs safe data.
                                                              (line  28)
* struct-guardian-log:                   syslib structs safe final.
                                                              (line  69)
* struct-guardian-logger:                syslib structs safe final.
                                                              (line  51)
* struct-hash:                           iklib hashtables hashfun.
                                                              (line 122)
* struct-length:                         syslib structs safe data.
                                                              (line  23)
* struct-name:                           syslib structs safe data.
                                                              (line  32)
* struct-printer:                        syslib structs safe data.
                                                              (line  37)
* struct-ref:                            syslib structs safe data.
                                                              (line  45)
* struct-reset!:                         syslib structs safe data.
                                                              (line  70)
* struct-set!:                           syslib structs safe data.
                                                              (line  48)
* struct-std:                            syslib structs safe data.
                                                              (line  18)
* struct-type-constructor:               syslib structs safe using.
                                                              (line  16)
* struct-type-descriptor:                syslib structs safe using.
                                                              (line   6)
* struct-type-descriptor?:               syslib structs safe using.
                                                              (line  11)
* struct-type-destructor:                syslib structs safe final.
                                                              (line  47)
* struct-type-field-accessor:            syslib structs safe using.
                                                              (line  45)
* struct-type-field-method:              syslib structs safe using.
                                                              (line  65)
* struct-type-field-mutator:             syslib structs safe using.
                                                              (line  46)
* struct-type-field-names:               syslib structs safe inspect.
                                                              (line  12)
* struct-type-name:                      syslib structs safe inspect.
                                                              (line   6)
* struct-type-predicate:                 syslib structs safe using.
                                                              (line  30)
* struct-type-printer:                   syslib structs safe printer.
                                                              (line 145)
* struct-type-spec.std:                  expander specs struct.
                                                              (line  17)
* struct-type-spec?:                     expander specs struct.
                                                              (line  13)
* struct-type-symbol:                    syslib structs safe inspect.
                                                              (line   9)
* struct=?:                              syslib structs safe data.
                                                              (line  59)
* struct?:                               syslib structs safe data.
                                                              (line   6)
* struct? <1>:                           syslib structs safe data.
                                                              (line   7)
* stx-annotated-expr* on <stx>:          expander lexenv stx. (line  86)
* stx-expr on <stx>:                     expander lexenv stx. (line  76)
* stx-mark* on <stx>:                    expander lexenv stx. (line  79)
* stx-rib* on <stx>:                     expander lexenv stx. (line  83)
* stx?:                                  expander lexenv stx. (line  73)
* sub1:                                  iklib numerics math. (line  12)
* subbytevector-s8:                      iklib bytevectors sub.
                                                              (line  23)
* subbytevector-s8 <1>:                  iklib bytevectors sub.
                                                              (line  24)
* subbytevector-s8/count:                iklib bytevectors sub.
                                                              (line  31)
* subbytevector-u8:                      iklib bytevectors sub.
                                                              (line   8)
* subbytevector-u8 <1>:                  iklib bytevectors sub.
                                                              (line   9)
* subbytevector-u8/count:                iklib bytevectors sub.
                                                              (line  16)
* substring:                             baselib strings.     (line  57)
* subvector:                             iklib vectors copying.
                                                              (line   6)
* suffix:                                iklib expander export specs.
                                                              (line  30)
* suffix <1>:                            iklib expander import specs.
                                                              (line  24)
* super-protocol:                        iklib records defs.  (line  10)
* suspend-coroutine:                     iklib coroutines suspend.
                                                              (line   6)
* suspended-coroutine?:                  iklib coroutines suspend.
                                                              (line  16)
* symbol!=?:                             iklib symbols comparison.
                                                              (line  17)
* symbol->keyword:                       iklib keywords.      (line  19)
* symbol->string:                        baselib symbols.     (line  21)
* symbol-bound?:                         iklib symbols value. (line 132)
* symbol-hash:                           stdlib hashtable hash functions.
                                                              (line  53)
* symbol-max:                            iklib symbols comparison.
                                                              (line  22)
* symbol-min:                            iklib symbols comparison.
                                                              (line  23)
* symbol-value:                          iklib symbols value. (line 129)
* symbol<=?:                             iklib symbols comparison.
                                                              (line   8)
* symbol<?:                              iklib symbols comparison.
                                                              (line   6)
* symbol=?:                              baselib symbols.     (line  28)
* symbol>=?:                             iklib symbols comparison.
                                                              (line   9)
* symbol>?:                              iklib symbols comparison.
                                                              (line   7)
* symbol?:                               baselib symbols.     (line  11)
* synonym-transformer-identifier:        iklib expander synonym.
                                                              (line  50)
* synonym-transformer?:                  iklib expander synonym.
                                                              (line  45)
* syntactic-binding-getprop:             iklib syntaxes properties.
                                                              (line  15)
* syntactic-binding-property-list:       iklib syntaxes properties.
                                                              (line  25)
* syntactic-binding-putprop:             iklib syntaxes properties.
                                                              (line  10)
* syntactic-binding-remprop:             iklib syntaxes properties.
                                                              (line  20)
* syntactic-identifier->label:           expander lexenv inspection.
                                                              (line   9)
* syntax:                                stdlib syntax-case parsing.
                                                              (line 147)
* syntax->datum:                         stdlib syntax-case conversion.
                                                              (line   6)
* syntax->list:                          expander utils pairs.
                                                              (line  24)
* syntax->list <1>:                      expander utils pairs.
                                                              (line  25)
* syntax->vector:                        expander utils vectors.
                                                              (line   6)
* syntax->vector <1>:                    expander utils vectors.
                                                              (line   7)
* syntax-car:                            expander utils pairs.
                                                              (line   6)
* syntax-car <1>:                        expander utils pairs.
                                                              (line   7)
* syntax-case:                           stdlib syntax-case parsing.
                                                              (line   9)
* syntax-cdr:                            expander utils pairs.
                                                              (line  15)
* syntax-cdr <1>:                        expander utils pairs.
                                                              (line  16)
* syntax-clause-spec-custom-data:        expander clauses objects.
                                                              (line  71)
* syntax-clause-spec-keyword:            expander clauses objects.
                                                              (line  64)
* syntax-clause-spec-max-number-of-arguments: expander clauses objects.
                                                              (line  68)
* syntax-clause-spec-max-number-of-occurrences: expander clauses objects.
                                                              (line  66)
* syntax-clause-spec-min-number-of-arguments: expander clauses objects.
                                                              (line  67)
* syntax-clause-spec-min-number-of-occurrences: expander clauses objects.
                                                              (line  65)
* syntax-clause-spec-mutually-exclusive: expander clauses objects.
                                                              (line  70)
* syntax-clause-spec-mutually-inclusive: expander clauses objects.
                                                              (line  69)
* syntax-clause-spec?:                   expander clauses objects.
                                                              (line  60)
* syntax-clauses-collapse:               expander clauses utils.
                                                              (line  42)
* syntax-clauses-filter:                 expander clauses utils.
                                                              (line  13)
* syntax-clauses-fold-specs:             expander clauses objects.
                                                              (line 145)
* syntax-clauses-fold-specs <1>:         expander clauses objects.
                                                              (line 147)
* syntax-clauses-partition:              expander clauses utils.
                                                              (line  31)
* syntax-clauses-remove:                 expander clauses utils.
                                                              (line  22)
* syntax-clauses-single-spec:            expander clauses objects.
                                                              (line  74)
* syntax-clauses-single-spec <1>:        expander clauses objects.
                                                              (line  75)
* syntax-clauses-unwrap:                 expander clauses utils.
                                                              (line   6)
* syntax-clauses-unwrap <1>:             expander clauses utils.
                                                              (line   7)
* syntax-clauses-validate-specs:         expander clauses objects.
                                                              (line 174)
* syntax-clauses-verify-at-least-once:   expander clauses constr.
                                                              (line   6)
* syntax-clauses-verify-at-least-once <1>: expander clauses constr.
                                                              (line   8)
* syntax-clauses-verify-at-most-once:    expander clauses constr.
                                                              (line  16)
* syntax-clauses-verify-at-most-once <1>: expander clauses constr.
                                                              (line  18)
* syntax-clauses-verify-exactly-once:    expander clauses constr.
                                                              (line  26)
* syntax-clauses-verify-exactly-once <1>: expander clauses constr.
                                                              (line  28)
* syntax-clauses-verify-mutually-exclusive: expander clauses constr.
                                                              (line  47)
* syntax-clauses-verify-mutually-exclusive <1>: expander clauses constr.
                                                              (line  49)
* syntax-clauses-verify-mutually-inclusive: expander clauses constr.
                                                              (line  36)
* syntax-clauses-verify-mutually-inclusive <1>: expander clauses constr.
                                                              (line  38)
* syntax-object?:                        expander lexenv stx. (line  69)
* syntax-parameter-value:                iklib expander parameters.
                                                              (line  71)
* syntax-parametrise:                    iklib expander parameters.
                                                              (line  64)
* syntax-replace-id:                     expander utils unwrap.
                                                              (line  12)
* syntax-rules:                          baselib transformers.
                                                              (line   6)
* syntax-unwrap:                         expander utils unwrap.
                                                              (line   6)
* syntax-violation:                      stdlib syntax-case violations.
                                                              (line   6)
* syntax-violation <1>:                  stdlib syntax-case violations.
                                                              (line   7)
* syntax-violation-form:                 stdlib exceptions conditions types.
                                                              (line 178)
* syntax-violation-subform:              stdlib exceptions conditions types.
                                                              (line 179)
* syntax-violation?:                     stdlib exceptions conditions types.
                                                              (line 177)
* syntax=?:                              expander utils compar.
                                                              (line   6)
* system-id:                             expander system-identifiers.
                                                              (line  29)
* system-id-gensym:                      expander system-identifiers.
                                                              (line  33)
* system-label:                          expander system-labels.
                                                              (line  38)
* system-label-gensym:                   expander system-labels.
                                                              (line  43)
* system-value:                          compiler sysval.     (line  38)
* system-value-gensym:                   compiler sysval.     (line  43)
* tan:                                   baselib math ops trascend.
                                                              (line  11)
* tanh:                                  iklib numerics math. (line  90)
* tcbucket?:                             iklib hashtables tcbuckets.
                                                              (line  11)
* template:                              scheme entry.        (line  12)
* textual-input-only-port?:              iklib io textual.    (line  29)
* textual-input-port?:                   iklib io textual.    (line  23)
* textual-input/output-port?:            iklib io textual.    (line  25)
* textual-output-only-port?:             iklib io textual.    (line  30)
* textual-output-port?:                  iklib io textual.    (line  24)
* textual-port?:                         stdlib io port io ports.
                                                              (line  20)
* the-proc:                              scheme entry procedure.
                                                              (line  29)
* this:                                  iklib syntaxes misc. (line  27)
* time:                                  iklib timing.        (line   9)
* time!=?:                               iklib time time.     (line  61)
* time-addition:                         iklib time time.     (line  45)
* time-and-gather:                       iklib timing.        (line  64)
* time-difference:                       iklib time time.     (line  49)
* time-flonum:                           iklib time time.     (line  38)
* time-gmt-offset:                       iklib time epoch.    (line  38)
* time-max:                              iklib time time.     (line  82)
* time-min:                              iklib time time.     (line  83)
* time-nanoseconds:                      iklib time time.     (line  34)
* time-ratnum:                           iklib time time.     (line  37)
* time-seconds:                          iklib time time.     (line  33)
* time<=?:                               iklib time time.     (line  70)
* time<?:                                iklib time time.     (line  66)
* time=?:                                iklib time time.     (line  58)
* time>=?:                               iklib time time.     (line  78)
* time>?:                                iklib time time.     (line  74)
* time?:                                 iklib time time.     (line  23)
* top-level-bound?:                      iklib symbols value. (line  98)
* top-level-value:                       iklib symbols value. (line  43)
* transcoded-port:                       stdlib io port io ports.
                                                              (line  28)
* transcoder!=?:                         iklib io codecs.     (line  31)
* transcoder-codec:                      stdlib io port transcoders.
                                                              (line 158)
* transcoder-eol-style:                  stdlib io port transcoders.
                                                              (line 159)
* transcoder-error-handling-mode:        stdlib io port transcoders.
                                                              (line 160)
* transcoder-hash:                       iklib io codecs.     (line  42)
* transcoder-max:                        iklib io codecs.     (line  39)
* transcoder-min:                        iklib io codecs.     (line  38)
* transcoder<=?:                         iklib io codecs.     (line  34)
* transcoder<?:                          iklib io codecs.     (line  32)
* transcoder=?:                          iklib io codecs.     (line  30)
* transcoder>=?:                         iklib io codecs.     (line  35)
* transcoder>?:                          iklib io codecs.     (line  33)
* transcoder?:                           iklib io codecs.     (line   8)
* true?:                                 iklib booleans.      (line  11)
* truncate:                              baselib math ops part.
                                                              (line  19)
* try:                                   iklib syntaxes try.  (line  11)
* try <1>:                               iklib syntaxes try.  (line  12)
* try <2>:                               iklib syntaxes try.  (line  13)
* type-predicate:                        iklib records defs.  (line  13)
* type-signature.object-type-specs:      expander specs signatures type.
                                                              (line  22)
* type-signature?:                       expander specs signatures type.
                                                              (line  18)
* typed-language-enabled?:               iklib expander language.
                                                              (line   6)
* typed-language-enabled? <1>:           iklib expander language.
                                                              (line   7)
* u16b-list->bytevector:                 iklib bytevectors conversion.
                                                              (line  54)
* u16l-list->bytevector:                 iklib bytevectors conversion.
                                                              (line  53)
* u16n-list->bytevector:                 iklib bytevectors conversion.
                                                              (line  55)
* u32b-list->bytevector:                 iklib bytevectors conversion.
                                                              (line  70)
* u32l-list->bytevector:                 iklib bytevectors conversion.
                                                              (line  69)
* u32n-list->bytevector:                 iklib bytevectors conversion.
                                                              (line  71)
* u64b-list->bytevector:                 iklib bytevectors conversion.
                                                              (line  86)
* u64l-list->bytevector:                 iklib bytevectors conversion.
                                                              (line  85)
* u64n-list->bytevector:                 iklib bytevectors conversion.
                                                              (line  87)
* u8-list->bytevector:                   stdlib bytevector bytes and octets.
                                                              (line  50)
* uint-list->bytevector:                 stdlib bytevector integers.
                                                              (line  64)
* uname:                                 iklib env-inquiry.   (line  17)
* unbound-object:                        iklib symbols value. (line 136)
* unbound-object?:                       iklib symbols value. (line 139)
* undefined-violation?:                  stdlib exceptions conditions types.
                                                              (line 196)
* unicode-code-point-representable-as-latin-1-code-point?: iklib chars unicode latin1.
                                                              (line  57)
* unicode-printable-char?:               iklib chars predicates.
                                                              (line  20)
* unintern-library:                      libutils interning.  (line  83)
* unintern-library <1>:                  libutils interning.  (line  84)
* union-of-type-specs:                   expander specs union.
                                                              (line  12)
* union-type-spec.item-ots*:             expander specs union.
                                                              (line  22)
* union-type-spec?:                      expander specs union.
                                                              (line  18)
* unless:                                stdlib control.      (line  10)
* unparse-recordized-code:               compiler unparse.    (line   8)
* unparse-recordized-code/pretty:        compiler unparse.    (line  14)
* unparse-recordized-code/sexp:          compiler unparse.    (line  24)
* unquote:                               scheme entry other kinds.
                                                              (line  15)
* unquote <1>:                           baselib quasiquotation.
                                                              (line   7)
* unquote-splicing:                      baselib quasiquotation.
                                                              (line   8)
* unsafe-record-accessor:                iklib records fields.
                                                              (line 110)
* unsafe-record-accessor <1>:            iklib records fields.
                                                              (line 111)
* unsafe-record-mutator:                 iklib records fields.
                                                              (line 115)
* unsafe-record-mutator <1>:             iklib records fields.
                                                              (line 116)
* unsyntax:                              stdlib syntax-case derived.
                                                              (line  73)
* unsyntax-splicing:                     stdlib syntax-case derived.
                                                              (line  74)
* until:                                 iklib syntaxes loops until.
                                                              (line   6)
* until <1>:                             iklib syntaxes loops do.
                                                              (line   9)
* unwind-protect:                        iklib unwind-protect syntaxes.
                                                              (line  22)
* unwinding-call/cc:                     iklib unwind-protect call/cc.
                                                              (line  33)
* uri-decode:                            iklib bytevectors conversion.
                                                              (line 175)
* uri-encode:                            iklib bytevectors conversion.
                                                              (line 174)
* uri-encoded-bytevector?:               iklib bytevectors conversion.
                                                              (line 193)
* uri-encoded-string?:                   iklib strings conversion.
                                                              (line 107)
* uri-encoding->string:                  iklib strings conversion.
                                                              (line 101)
* utf-16-codec:                          stdlib io port transcoders.
                                                              (line  30)
* utf-16-decode-single-word:             iklib chars unicode utf16.
                                                              (line  53)
* utf-16-decode-surrogate-pair:          iklib chars unicode utf16.
                                                              (line  70)
* utf-16-encode-first-of-two-words:      iklib chars unicode utf16.
                                                              (line  93)
* utf-16-encode-second-of-two-words:     iklib chars unicode utf16.
                                                              (line  97)
* utf-16-encode-single-word:             iklib chars unicode utf16.
                                                              (line  82)
* utf-16-first-of-two-words?:            iklib chars unicode utf16.
                                                              (line  60)
* utf-16-second-of-two-words?:           iklib chars unicode utf16.
                                                              (line  65)
* utf-16-single-word-code-point?:        iklib chars unicode utf16.
                                                              (line  77)
* utf-16-single-word?:                   iklib chars unicode utf16.
                                                              (line  49)
* utf-16-two-words-code-point?:          iklib chars unicode utf16.
                                                              (line  88)
* utf-16be-codec:                        iklib io codecs.     (line  56)
* utf-16le-codec:                        iklib io codecs.     (line  55)
* utf-16n-codec:                         iklib io codecs.     (line  62)
* utf-32-code-point?:                    iklib chars unicode utf32.
                                                              (line  25)
* utf-32-decode:                         iklib chars unicode utf32.
                                                              (line  39)
* utf-32-encode:                         iklib chars unicode utf32.
                                                              (line  29)
* utf-32-word?:                          iklib chars unicode utf32.
                                                              (line  35)
* utf-8-codec:                           stdlib io port transcoders.
                                                              (line  29)
* utf-8-decode-four-octets:              iklib chars unicode utf8.
                                                              (line 137)
* utf-8-decode-single-octet:             iklib chars unicode utf8.
                                                              (line  79)
* utf-8-decode-three-octets:             iklib chars unicode utf8.
                                                              (line 117)
* utf-8-decode-two-octets:               iklib chars unicode utf8.
                                                              (line  98)
* utf-8-encode-first-of-four-octets:     iklib chars unicode utf8.
                                                              (line 201)
* utf-8-encode-first-of-three-octets:    iklib chars unicode utf8.
                                                              (line 181)
* utf-8-encode-first-of-two-octets:      iklib chars unicode utf8.
                                                              (line 165)
* utf-8-encode-fourth-of-four-octets:    iklib chars unicode utf8.
                                                              (line 213)
* utf-8-encode-second-of-four-octets:    iklib chars unicode utf8.
                                                              (line 205)
* utf-8-encode-second-of-three-octets:   iklib chars unicode utf8.
                                                              (line 185)
* utf-8-encode-second-of-two-octets:     iklib chars unicode utf8.
                                                              (line 169)
* utf-8-encode-single-octet:             iklib chars unicode utf8.
                                                              (line 153)
* utf-8-encode-third-of-four-octets:     iklib chars unicode utf8.
                                                              (line 209)
* utf-8-encode-third-of-three-octets:    iklib chars unicode utf8.
                                                              (line 189)
* utf-8-first-of-four-octets?:           iklib chars unicode utf8.
                                                              (line 128)
* utf-8-first-of-three-octets?:          iklib chars unicode utf8.
                                                              (line 109)
* utf-8-first-of-two-octets?:            iklib chars unicode utf8.
                                                              (line  90)
* utf-8-four-octets-code-point?:         iklib chars unicode utf8.
                                                              (line 196)
* utf-8-invalid-octet?:                  iklib chars unicode utf8.
                                                              (line  68)
* utf-8-second-and-third-of-three-octets?: iklib chars unicode utf8.
                                                              (line 113)
* utf-8-second-of-two-octets?:           iklib chars unicode utf8.
                                                              (line  94)
* utf-8-second-third-and-fourth-of-four-octets?: iklib chars unicode utf8.
                                                              (line 132)
* utf-8-single-octet-code-point?:        iklib chars unicode utf8.
                                                              (line 148)
* utf-8-single-octet?:                   iklib chars unicode utf8.
                                                              (line  75)
* utf-8-three-octets-code-point?:        iklib chars unicode utf8.
                                                              (line 176)
* utf-8-two-octets-code-point?:          iklib chars unicode utf8.
                                                              (line 160)
* utf-8-valid-code-point-from-1-octet?:  iklib chars unicode utf8.
                                                              (line  83)
* utf-8-valid-code-point-from-2-octets?: iklib chars unicode utf8.
                                                              (line 102)
* utf-8-valid-code-point-from-3-octets?: iklib chars unicode utf8.
                                                              (line 121)
* utf-8-valid-code-point-from-4-octets?: iklib chars unicode utf8.
                                                              (line 141)
* utf-bom-codec:                         iklib io codecs.     (line  68)
* utf16->string:                         stdlib bytevector strings.
                                                              (line  46)
* utf16->string <1>:                     stdlib bytevector strings.
                                                              (line  47)
* utf16->string <2>:                     stdlib bytevector strings.
                                                              (line  48)
* utf16->string-length:                  iklib bytevectors conversion.
                                                              (line  22)
* utf16->string-length <1>:              iklib bytevectors conversion.
                                                              (line  23)
* utf16->string-length <2>:              iklib bytevectors conversion.
                                                              (line  25)
* utf16-string-decoding-error?:          iklib conditions string utf16.
                                                              (line  32)
* utf16-string-decoding-invalid-first-word.bytevector: iklib conditions string utf16.
                                                              (line  63)
* utf16-string-decoding-invalid-first-word.index: iklib conditions string utf16.
                                                              (line  64)
* utf16-string-decoding-invalid-first-word.word: iklib conditions string utf16.
                                                              (line  65)
* utf16-string-decoding-invalid-first-word?: iklib conditions string utf16.
                                                              (line  59)
* utf16-string-decoding-invalid-second-word.bytevector: iklib conditions string utf16.
                                                              (line  99)
* utf16-string-decoding-invalid-second-word.first-word: iklib conditions string utf16.
                                                              (line 101)
* utf16-string-decoding-invalid-second-word.index: iklib conditions string utf16.
                                                              (line 100)
* utf16-string-decoding-invalid-second-word.second-word: iklib conditions string utf16.
                                                              (line 102)
* utf16-string-decoding-invalid-second-word?: iklib conditions string utf16.
                                                              (line  94)
* utf16-string-decoding-missing-second-word.bytevector: iklib conditions string utf16.
                                                              (line 133)
* utf16-string-decoding-missing-second-word.index: iklib conditions string utf16.
                                                              (line 134)
* utf16-string-decoding-missing-second-word.word: iklib conditions string utf16.
                                                              (line 135)
* utf16-string-decoding-missing-second-word?: iklib conditions string utf16.
                                                              (line 128)
* utf16-string-decoding-standalone-octet.bytevector: iklib conditions string utf16.
                                                              (line 165)
* utf16-string-decoding-standalone-octet.index: iklib conditions string utf16.
                                                              (line 166)
* utf16-string-decoding-standalone-octet.octet: iklib conditions string utf16.
                                                              (line 167)
* utf16-string-decoding-standalone-octet?: iklib conditions string utf16.
                                                              (line 161)
* utf16-string-encoding-error?:          iklib conditions string utf16.
                                                              (line  17)
* utf16be->string:                       iklib strings conversion.
                                                              (line  66)
* utf16be->string <1>:                   iklib strings conversion.
                                                              (line  69)
* utf16le->string:                       iklib strings conversion.
                                                              (line  65)
* utf16le->string <1>:                   iklib strings conversion.
                                                              (line  68)
* utf16n->string:                        iklib strings conversion.
                                                              (line  67)
* utf16n->string <1>:                    iklib strings conversion.
                                                              (line  70)
* utf32->string:                         stdlib bytevector strings.
                                                              (line 111)
* utf32->string <1>:                     stdlib bytevector strings.
                                                              (line 112)
* utf32->string <2>:                     stdlib bytevector strings.
                                                              (line 113)
* utf32->string-length:                  iklib bytevectors conversion.
                                                              (line  34)
* utf32->string-length <1>:              iklib bytevectors conversion.
                                                              (line  35)
* utf32->string-length <2>:              iklib bytevectors conversion.
                                                              (line  37)
* utf32-string-decoding-error?:          iklib conditions string utf32.
                                                              (line  32)
* utf32-string-decoding-invalid-word.bytevector: iklib conditions string utf32.
                                                              (line  62)
* utf32-string-decoding-invalid-word.index: iklib conditions string utf32.
                                                              (line  63)
* utf32-string-decoding-invalid-word.word: iklib conditions string utf32.
                                                              (line  64)
* utf32-string-decoding-invalid-word?:   iklib conditions string utf32.
                                                              (line  58)
* utf32-string-decoding-orphan-octets.bytevector: iklib conditions string utf32.
                                                              (line  94)
* utf32-string-decoding-orphan-octets.index: iklib conditions string utf32.
                                                              (line  95)
* utf32-string-decoding-orphan-octets.octets: iklib conditions string utf32.
                                                              (line  96)
* utf32-string-decoding-orphan-octets?:  iklib conditions string utf32.
                                                              (line  90)
* utf32-string-encoding-error?:          iklib conditions string utf32.
                                                              (line  17)
* utf8->string:                          stdlib bytevector strings.
                                                              (line  36)
* utf8->string <1>:                      stdlib bytevector strings.
                                                              (line  37)
* utf8->string-length:                   iklib bytevectors conversion.
                                                              (line  10)
* utf8->string-length <1>:               iklib bytevectors conversion.
                                                              (line  11)
* utf8-string-decoding-error?:           iklib conditions string utf8.
                                                              (line  32)
* utf8-string-decoding-incomplete-2-tuple.bytevector: iklib conditions string utf8.
                                                              (line 195)
* utf8-string-decoding-incomplete-2-tuple.index: iklib conditions string utf8.
                                                              (line 196)
* utf8-string-decoding-incomplete-2-tuple.octets: iklib conditions string utf8.
                                                              (line 197)
* utf8-string-decoding-incomplete-2-tuple?: iklib conditions string utf8.
                                                              (line 191)
* utf8-string-decoding-incomplete-3-tuple.bytevector: iklib conditions string utf8.
                                                              (line 230)
* utf8-string-decoding-incomplete-3-tuple.index: iklib conditions string utf8.
                                                              (line 231)
* utf8-string-decoding-incomplete-3-tuple.octets: iklib conditions string utf8.
                                                              (line 232)
* utf8-string-decoding-incomplete-3-tuple?: iklib conditions string utf8.
                                                              (line 226)
* utf8-string-decoding-incomplete-4-tuple.bytevector: iklib conditions string utf8.
                                                              (line 265)
* utf8-string-decoding-incomplete-4-tuple.index: iklib conditions string utf8.
                                                              (line 266)
* utf8-string-decoding-incomplete-4-tuple.octets: iklib conditions string utf8.
                                                              (line 267)
* utf8-string-decoding-incomplete-4-tuple?: iklib conditions string utf8.
                                                              (line 261)
* utf8-string-decoding-invalid-2-tuple.bytevector: iklib conditions string utf8.
                                                              (line  95)
* utf8-string-decoding-invalid-2-tuple.index: iklib conditions string utf8.
                                                              (line  96)
* utf8-string-decoding-invalid-2-tuple.octets: iklib conditions string utf8.
                                                              (line  97)
* utf8-string-decoding-invalid-2-tuple?: iklib conditions string utf8.
                                                              (line  91)
* utf8-string-decoding-invalid-3-tuple.bytevector: iklib conditions string utf8.
                                                              (line 128)
* utf8-string-decoding-invalid-3-tuple.index: iklib conditions string utf8.
                                                              (line 129)
* utf8-string-decoding-invalid-3-tuple.octets: iklib conditions string utf8.
                                                              (line 130)
* utf8-string-decoding-invalid-3-tuple?: iklib conditions string utf8.
                                                              (line 124)
* utf8-string-decoding-invalid-4-tuple.bytevector: iklib conditions string utf8.
                                                              (line 161)
* utf8-string-decoding-invalid-4-tuple.index: iklib conditions string utf8.
                                                              (line 162)
* utf8-string-decoding-invalid-4-tuple.octets: iklib conditions string utf8.
                                                              (line 163)
* utf8-string-decoding-invalid-4-tuple?: iklib conditions string utf8.
                                                              (line 157)
* utf8-string-decoding-invalid-octet.bytevector: iklib conditions string utf8.
                                                              (line  62)
* utf8-string-decoding-invalid-octet.index: iklib conditions string utf8.
                                                              (line  63)
* utf8-string-decoding-invalid-octet.octets: iklib conditions string utf8.
                                                              (line  64)
* utf8-string-decoding-invalid-octet?:   iklib conditions string utf8.
                                                              (line  58)
* utf8-string-encoding-error?:           iklib conditions string utf8.
                                                              (line  17)
* utsname!=?:                            iklib env-inquiry.   (line  32)
* utsname-machine:                       iklib env-inquiry.   (line  41)
* utsname-nodename:                      iklib env-inquiry.   (line  38)
* utsname-release:                       iklib env-inquiry.   (line  39)
* utsname-sysname:                       iklib env-inquiry.   (line  37)
* utsname-version:                       iklib env-inquiry.   (line  40)
* utsname=?:                             iklib env-inquiry.   (line  27)
* utsname?:                              iklib env-inquiry.   (line  23)
* uuid:                                  iklib strings misc.  (line   6)
* values:                                baselib control.     (line  89)
* values->list:                          iklib syntaxes misc. (line 105)
* variable-transformer-procedure:        iklib expander transformers.
                                                              (line  21)
* variable-transformer?:                 iklib expander transformers.
                                                              (line  16)
* vector:                                baselib vectors.     (line  34)
* vector!=?:                             iklib vectors comparison.
                                                              (line  10)
* vector->list:                          baselib vectors.     (line  66)
* vector-append:                         iklib vectors constructors.
                                                              (line   6)
* vector-copy:                           iklib vectors copying.
                                                              (line  16)
* vector-copy!:                          iklib vectors copying.
                                                              (line  21)
* vector-empty?:                         iklib vectors predicates.
                                                              (line   6)
* vector-exists:                         iklib vectors iteration.
                                                              (line  22)
* vector-fill!:                          baselib vectors.     (line  77)
* vector-find:                           iklib vectors iteration.
                                                              (line   6)
* vector-fold-left:                      iklib vectors iteration.
                                                              (line  72)
* vector-fold-right:                     iklib vectors iteration.
                                                              (line  73)
* vector-for-all:                        iklib vectors iteration.
                                                              (line  21)
* vector-for-each:                       baselib vectors.     (line 100)
* vector-hash:                           iklib hashtables hashfun.
                                                              (line  33)
* vector-hash <1>:                       iklib hashtables hashfun.
                                                              (line  34)
* vector-length:                         baselib vectors.     (line  40)
* vector-map:                            baselib vectors.     (line  81)
* vector-of-type-spec.item-ots:          expander specs vector-of.
                                                              (line  21)
* vector-of-type-spec?:                  expander specs vector-of.
                                                              (line  17)
* vector-ref:                            scheme entry procedure.
                                                              (line  10)
* vector-ref <1>:                        baselib vectors.     (line  43)
* vector-reset!:                         iklib vectors misc.  (line   6)
* vector-reset! <1>:                     iklib vectors misc.  (line   7)
* vector-resize:                         iklib vectors constructors.
                                                              (line  10)
* vector-resize <1>:                     iklib vectors constructors.
                                                              (line  11)
* vector-set!:                           baselib vectors.     (line  49)
* vector-sort:                           stdlib sorting.      (line  10)
* vector-sort!:                          stdlib sorting.      (line  40)
* vector-type-spec.item-ots*:            expander specs vector.
                                                              (line  22)
* vector-type-spec.length:               expander specs vector.
                                                              (line  26)
* vector-type-spec?:                     expander specs vector.
                                                              (line  18)
* vector=?:                              iklib vectors comparison.
                                                              (line   6)
* vector?:                               baselib vectors.     (line  22)
* vectors-of-same-length?:               iklib vectors predicates.
                                                              (line  24)
* verbose-timer:                         iklib timing.        (line  71)
* vicare-argv0:                          iklib progname.      (line   8)
* vicare-argv0-string:                   iklib progname.      (line  12)
* vicare-built-with-arguments-validation-enabled: iklib config.
                                                              (line   9)
* vicare-built-with-descriptive-labels-generation: iklib config.
                                                              (line  13)
* vicare-built-with-ffi-enabled:         iklib config.        (line  25)
* vicare-built-with-glibc-enabled:       iklib config.        (line  33)
* vicare-built-with-iconv-enabled:       iklib config.        (line  21)
* vicare-built-with-linux-enabled:       iklib config.        (line  37)
* vicare-built-with-posix-enabled:       iklib config.        (line  29)
* vicare-built-with-srfi-enabled:        iklib config.        (line  17)
* violation?:                            stdlib exceptions conditions types.
                                                              (line  85)
* virtual-method:                        iklib records defs.  (line   9)
* visit-code-of:                         iklib syntaxes expansion-of.
                                                              (line  48)
* visit-library:                         libutils libraries ops.
                                                              (line  15)
* void:                                  iklib misc.          (line  17)
* void-hash:                             iklib hashtables hashfun.
                                                              (line 148)
* void-object?:                          iklib misc.          (line  26)
* waiter-prompt-string:                  iklib cafe.          (line  33)
* warning:                               iklib misc.          (line 101)
* warning?:                              stdlib exceptions conditions types.
                                                              (line  49)
* weak-cons:                             iklib lists weak.    (line  10)
* weak-pair?:                            iklib lists weak.    (line  16)
* when:                                  stdlib control.      (line   9)
* while:                                 iklib syntaxes loops while.
                                                              (line   6)
* while <1>:                             iklib syntaxes loops do.
                                                              (line   8)
* who-condition?:                        stdlib exceptions conditions types.
                                                              (line 124)
* with:                                  iklib compensations api.
                                                              (line  56)
* with-blocked-exceptions:               iklib syntaxes blocking.
                                                              (line   9)
* with-blocked-exceptions <1>:           iklib syntaxes blocking.
                                                              (line  10)
* with-compensation-handler:             iklib compensations api.
                                                              (line  50)
* with-compensations:                    iklib compensations api.
                                                              (line  18)
* with-compensations/on-error:           iklib compensations api.
                                                              (line  28)
* with-current-dynamic-environment:      iklib syntaxes dynenv.
                                                              (line   6)
* with-exception-handler:                stdlib exceptions exceptions.
                                                              (line  34)
* with-implicits:                        expander utils id.   (line 123)
* with-input-from-file:                  stdlib io simple.    (line  46)
* with-input-from-file <1>:              iklib io codecs.     (line  15)
* with-input-from-string:                iklib io textual.    (line 145)
* with-local-storage:                    iklib memory alloc.  (line  82)
* with-output-to-file:                   stdlib io simple.    (line  47)
* with-output-to-file <1>:               iklib io codecs.     (line  15)
* with-output-to-string:                 iklib io textual.    (line 161)
* with-syntax:                           stdlib syntax-case derived.
                                                              (line  10)
* with-unwind-handler:                   iklib unwind-protect syntaxes.
                                                              (line   6)
* with-unwind-protection:                iklib unwind-protect syntaxes.
                                                              (line   7)
* would-block-hash:                      iklib hashtables hashfun.
                                                              (line 150)
* would-block-object:                    iklib io non-blocking object.
                                                              (line   6)
* would-block-object?:                   iklib io non-blocking object.
                                                              (line  11)
* write:                                 stdlib io simple.    (line 139)
* write <1>:                             stdlib io simple.    (line 140)
* write-char:                            stdlib io simple.    (line 107)
* write-char <1>:                        stdlib io simple.    (line 108)
* xor:                                   iklib syntaxes control.
                                                              (line  16)
* yield:                                 iklib coroutines basic.
                                                              (line  10)
* zero-byte-fixnum?:                     iklib fixnums predicates.
                                                              (line  32)
* zero-cflonum?:                         iklib numerics preds.
                                                              (line  63)
* zero-compnum?:                         iklib numerics preds.
                                                              (line  36)
* zero-exact-integer?:                   iklib numerics preds.
                                                              (line  76)
* zero-fixnum?:                          iklib fixnums predicates.
                                                              (line  15)
* zero-flonum?:                          iklib flonums.       (line  20)
* zero-octet-fixnum?:                    iklib fixnums predicates.
                                                              (line  42)
* zero?:                                 baselib math ops value pred.
                                                              (line  48)

